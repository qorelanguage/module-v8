{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "dev-platform@stripe.com",
      "name": "Stripe Dev Platform Team",
      "url": "https://stripe.com"
    },
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "https://stripe.com/us/terms/",
    "title": "Stripe API",
    "version": "2024-09-30.acacia",
    "x-stripeSpecFilename": "spec3"
  },
  "host": "api.stripe.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/account": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccount"
      }
    },
    "/v1/account_links": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the account to create an account link for.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "The collect parameter is deprecated. Use `collection_options` instead.",
            "enum": [
              "currently_due",
              "eventually_due"
            ],
            "in": "formData",
            "name": "collect",
            "type": "string"
          },
          {
            "description": "Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.",
            "in": "formData",
            "name": "collection_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.",
            "in": "formData",
            "name": "refresh_url",
            "type": "string"
          },
          {
            "description": "The URL that the user will be redirected to upon leaving or completing the linked flow.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "The type of account link the user is requesting. Possible values are `account_onboarding` or `account_update`.",
            "enum": [
              "account_onboarding",
              "account_update"
            ],
            "in": "formData",
            "name": "type",
            "required": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>",
        "operationId": "PostAccountLinks"
      }
    },
    "/v1/account_sessions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the account to create an Account Session for.",
            "in": "formData",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).",
            "in": "formData",
            "name": "components",
            "required": true,
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a AccountSession object that includes a single-use token that the platform can use on their front-end to grant client-side API access.</p>",
        "operationId": "PostAccountSessions"
      }
    },
    "/v1/accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return connected accounts that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/account"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/accounts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "AccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>",
        "operationId": "GetAccounts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_token",
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "Business information about the account.",
            "in": "formData",
            "name": "business_profile",
            "type": "object"
          },
          {
            "description": "The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "enum": [
              "company",
              "government_entity",
              "individual",
              "non_profit"
            ],
            "in": "formData",
            "name": "business_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Each key of the dictionary represents a capability, and each capability\nmaps to its settings (for example, whether it has been requested or not). Each\ncapability is inactive until you have provided its specific\nrequirements and Stripe has verified them. An account might have some\nof its requested capabilities be active and some be inactive.\n\nRequired when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)\nis `none`, which includes Custom accounts.",
            "in": "formData",
            "name": "capabilities",
            "type": "object"
          },
          {
            "description": "Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "name": "company",
            "type": "object"
          },
          {
            "description": "A hash of configuration describing the account controller's attributes.",
            "in": "formData",
            "name": "controller",
            "type": "object"
          },
          {
            "description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.",
            "in": "formData",
            "maxLength": 5000,
            "name": "country",
            "type": "string"
          },
          {
            "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).",
            "in": "formData",
            "name": "default_currency",
            "type": "string"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "maxLength": 5000,
            "name": "external_account",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "name": "individual",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Options for customizing how the account functions within Stripe.",
            "in": "formData",
            "name": "settings",
            "type": "object"
          },
          {
            "description": "Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.",
            "in": "formData",
            "name": "tos_acceptance",
            "type": "object"
          },
          {
            "description": "The type of Stripe account to create. May be one of `custom`, `express` or `standard`.",
            "enum": [
              "custom",
              "express",
              "standard"
            ],
            "in": "formData",
            "name": "type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>\n\n<p>If you’ve already collected information for your connected accounts, you <a href=\"/docs/connect/best-practices#onboarding\">can prefill that information</a> when\ncreating the account. Connect Onboarding won’t ask for the prefilled information during account onboarding.\nYou can prefill any information on the account.</p>",
        "operationId": "PostAccounts"
      }
    },
    "/v1/accounts/{account}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>With <a href=\"/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Test-mode accounts can be deleted at any time.</p>\n\n<p>Live-mode accounts where Stripe is responsible for negative account balances cannot be deleted, which includes Standard accounts. Live-mode accounts where your platform is liable for negative account balances, which includes Custom and Express accounts, can be deleted when all <a href=\"/api/balance/balance_object\">balances</a> are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">account information tab in your account settings</a> instead.</p>",
        "operationId": "DeleteAccountsAccount"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccountsAccount"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_token",
            "type": "string"
          },
          {
            "description": "Business information about the account.",
            "in": "formData",
            "name": "business_profile",
            "type": "object"
          },
          {
            "description": "The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "enum": [
              "company",
              "government_entity",
              "individual",
              "non_profit"
            ],
            "in": "formData",
            "name": "business_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Each key of the dictionary represents a capability, and each capability\nmaps to its settings (for example, whether it has been requested or not). Each\ncapability is inactive until you have provided its specific\nrequirements and Stripe has verified them. An account might have some\nof its requested capabilities be active and some be inactive.\n\nRequired when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)\nis `none`, which includes Custom accounts.",
            "in": "formData",
            "name": "capabilities",
            "type": "object"
          },
          {
            "description": "Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "name": "company",
            "type": "object"
          },
          {
            "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).",
            "in": "formData",
            "name": "default_currency",
            "type": "string"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "maxLength": 5000,
            "name": "external_account",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
            "in": "formData",
            "name": "individual",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Options for customizing how the account functions within Stripe.",
            "in": "formData",
            "name": "settings",
            "type": "object"
          },
          {
            "description": "Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.",
            "in": "formData",
            "name": "tos_acceptance",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a <a href=\"/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are\nleft unchanged.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>application</code>, which includes Custom accounts, you can update any information on the account.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>stripe</code>, which includes Standard and Express accounts, you can update all information until you create\nan <a href=\"/api/account_links\">Account Link</a> or <a href=\"/api/account_sessions\">Account Session</a> to start Connect onboarding,\nafter which some properties can no longer be updated.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">Dashboard</a>. Refer to our\n<a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
        "operationId": "PostAccountsAccount"
      }
    },
    "/v1/accounts/{account}/bank_accounts": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
            "in": "formData",
            "name": "default_for_currency",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Please refer to full [documentation](https://stripe.com/docs/api) instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "external_account",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create an external account for a given account.</p>",
        "operationId": "PostAccountsAccountBankAccounts"
      }
    },
    "/v1/accounts/{account}/bank_accounts/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a specified external account for a given account.</p>",
        "operationId": "DeleteAccountsAccountBankAccountsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a specified external account for a given account.</p>",
        "operationId": "GetAccountsAccountBankAccountsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the person or business that owns the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_name",
            "type": "string"
          },
          {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "",
              "company",
              "individual"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_type",
            "type": "string"
          },
          {
            "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
            "enum": [
              "checking",
              "futsu",
              "savings",
              "toza"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_type",
            "type": "string"
          },
          {
            "description": "City/District/Suburb/Town/Village.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_city",
            "type": "string"
          },
          {
            "description": "Billing address country, if provided when creating card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_country",
            "type": "string"
          },
          {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line1",
            "type": "string"
          },
          {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line2",
            "type": "string"
          },
          {
            "description": "State/County/Province/Region.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_state",
            "type": "string"
          },
          {
            "description": "ZIP or postal code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_zip",
            "type": "string"
          },
          {
            "description": "When set to true, this becomes the default external account for its currency.",
            "in": "formData",
            "name": "default_for_currency",
            "type": "boolean"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "Two digit number representing the card’s expiration month.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_month",
            "type": "string"
          },
          {
            "description": "Four digit number representing the card’s expiration year.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_year",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Cardholder name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>",
        "operationId": "PostAccountsAccountBankAccountsId"
      }
    },
    "/v1/accounts/{account}/capabilities": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/capability"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ListAccountCapability",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>",
        "operationId": "GetAccountsAccountCapabilities"
      }
    },
    "/v1/accounts/{account}/capabilities/{capability}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/capability"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves information about the specified Account Capability.</p>",
        "operationId": "GetAccountsAccountCapabilitiesCapability"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "To request a new capability for an account, pass true. There can be a delay before the requested capability becomes active. If the capability has any activation requirements, the response includes them in the `requirements` arrays.\n\nIf a capability isn't permanent, you can remove it from the account by passing false. Some capabilities are permanent after they've been requested. Attempting to remove a permanent capability returns an error.",
            "in": "formData",
            "name": "requested",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/capability"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing Account Capability. Request or remove a capability by updating its <code>requested</code> parameter.</p>",
        "operationId": "PostAccountsAccountCapabilitiesCapability"
      }
    },
    "/v1/accounts/{account}/external_accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter external accounts according to a particular object type.",
            "enum": [
              "bank_account",
              "card"
            ],
            "in": "query",
            "maxLength": 5000,
            "name": "object",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List external accounts for an account.</p>",
        "operationId": "GetAccountsAccountExternalAccounts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
            "in": "formData",
            "name": "default_for_currency",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Please refer to full [documentation](https://stripe.com/docs/api) instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "external_account",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create an external account for a given account.</p>",
        "operationId": "PostAccountsAccountExternalAccounts"
      }
    },
    "/v1/accounts/{account}/external_accounts/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a specified external account for a given account.</p>",
        "operationId": "DeleteAccountsAccountExternalAccountsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a specified external account for a given account.</p>",
        "operationId": "GetAccountsAccountExternalAccountsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the person or business that owns the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_name",
            "type": "string"
          },
          {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "",
              "company",
              "individual"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_type",
            "type": "string"
          },
          {
            "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
            "enum": [
              "checking",
              "futsu",
              "savings",
              "toza"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_type",
            "type": "string"
          },
          {
            "description": "City/District/Suburb/Town/Village.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_city",
            "type": "string"
          },
          {
            "description": "Billing address country, if provided when creating card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_country",
            "type": "string"
          },
          {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line1",
            "type": "string"
          },
          {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line2",
            "type": "string"
          },
          {
            "description": "State/County/Province/Region.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_state",
            "type": "string"
          },
          {
            "description": "ZIP or postal code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_zip",
            "type": "string"
          },
          {
            "description": "When set to true, this becomes the default external account for its currency.",
            "in": "formData",
            "name": "default_for_currency",
            "type": "boolean"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "Two digit number representing the card’s expiration month.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_month",
            "type": "string"
          },
          {
            "description": "Four digit number representing the card’s expiration year.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_year",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Cardholder name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/external_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>",
        "operationId": "PostAccountsAccountExternalAccountsId"
      }
    },
    "/v1/accounts/{account}/login_links": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/login_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a single-use login link for a connected account to access the Express Dashboard.</p>\n\n<p><strong>You can only create login links for accounts that use the <a href=\"/connect/express-dashboard\">Express Dashboard</a> and are connected to your platform</strong>.</p>",
        "operationId": "PostAccountsAccountLoginLinks"
      }
    },
    "/v1/accounts/{account}/people": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filters on the list of people returned based on the person's relationship to the account's company.",
            "in": "query",
            "name": "relationship",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/person"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PersonList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
        "operationId": "GetAccountsAccountPeople"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
            "in": "formData",
            "name": "additional_tos_acceptances",
            "type": "object"
          },
          {
            "description": "The person's address.",
            "in": "formData",
            "name": "address",
            "type": "object"
          },
          {
            "description": "The Kana variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kana",
            "type": "object"
          },
          {
            "description": "The Kanji variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kanji",
            "type": "object"
          },
          {
            "description": "The person's date of birth.",
            "in": "formData",
            "name": "dob"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The person's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The person's first name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kanji",
            "type": "string"
          },
          {
            "description": "A list of alternate names or aliases that the person is known by.",
            "in": "formData",
            "name": "full_name_aliases"
          },
          {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number",
            "type": "string"
          },
          {
            "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number_secondary",
            "type": "string"
          },
          {
            "description": "The person's last name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kanji",
            "type": "string"
          },
          {
            "description": "The person's maiden name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "maiden_name",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nationality",
            "type": "string"
          },
          {
            "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
            "in": "formData",
            "maxLength": 5000,
            "name": "person_token",
            "type": "string"
          },
          {
            "description": "The person's phone number.",
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "political_exposure",
            "type": "string"
          },
          {
            "description": "The person's registered address.",
            "in": "formData",
            "name": "registered_address",
            "type": "object"
          },
          {
            "description": "The relationship that this person has with the account's legal entity.",
            "in": "formData",
            "name": "relationship",
            "type": "object"
          },
          {
            "description": "The last four digits of the person's Social Security number (U.S. only).",
            "in": "formData",
            "name": "ssn_last_4",
            "type": "string"
          },
          {
            "description": "The person's verification status.",
            "in": "formData",
            "name": "verification",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new person.</p>",
        "operationId": "PostAccountsAccountPeople"
      }
    },
    "/v1/accounts/{account}/people/{person}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
        "operationId": "DeleteAccountsAccountPeoplePerson"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an existing person.</p>",
        "operationId": "GetAccountsAccountPeoplePerson"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
            "in": "formData",
            "name": "additional_tos_acceptances",
            "type": "object"
          },
          {
            "description": "The person's address.",
            "in": "formData",
            "name": "address",
            "type": "object"
          },
          {
            "description": "The Kana variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kana",
            "type": "object"
          },
          {
            "description": "The Kanji variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kanji",
            "type": "object"
          },
          {
            "description": "The person's date of birth.",
            "in": "formData",
            "name": "dob"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The person's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The person's first name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kanji",
            "type": "string"
          },
          {
            "description": "A list of alternate names or aliases that the person is known by.",
            "in": "formData",
            "name": "full_name_aliases"
          },
          {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number",
            "type": "string"
          },
          {
            "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number_secondary",
            "type": "string"
          },
          {
            "description": "The person's last name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kanji",
            "type": "string"
          },
          {
            "description": "The person's maiden name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "maiden_name",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nationality",
            "type": "string"
          },
          {
            "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
            "in": "formData",
            "maxLength": 5000,
            "name": "person_token",
            "type": "string"
          },
          {
            "description": "The person's phone number.",
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "political_exposure",
            "type": "string"
          },
          {
            "description": "The person's registered address.",
            "in": "formData",
            "name": "registered_address",
            "type": "object"
          },
          {
            "description": "The relationship that this person has with the account's legal entity.",
            "in": "formData",
            "name": "relationship",
            "type": "object"
          },
          {
            "description": "The last four digits of the person's Social Security number (U.S. only).",
            "in": "formData",
            "name": "ssn_last_4",
            "type": "string"
          },
          {
            "description": "The person's verification status.",
            "in": "formData",
            "name": "verification",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing person.</p>",
        "operationId": "PostAccountsAccountPeoplePerson"
      }
    },
    "/v1/accounts/{account}/persons": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filters on the list of people returned based on the person's relationship to the account's company.",
            "in": "query",
            "name": "relationship",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/person"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PersonList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
        "operationId": "GetAccountsAccountPersons"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
            "in": "formData",
            "name": "additional_tos_acceptances",
            "type": "object"
          },
          {
            "description": "The person's address.",
            "in": "formData",
            "name": "address",
            "type": "object"
          },
          {
            "description": "The Kana variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kana",
            "type": "object"
          },
          {
            "description": "The Kanji variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kanji",
            "type": "object"
          },
          {
            "description": "The person's date of birth.",
            "in": "formData",
            "name": "dob"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The person's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The person's first name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kanji",
            "type": "string"
          },
          {
            "description": "A list of alternate names or aliases that the person is known by.",
            "in": "formData",
            "name": "full_name_aliases"
          },
          {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number",
            "type": "string"
          },
          {
            "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number_secondary",
            "type": "string"
          },
          {
            "description": "The person's last name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kanji",
            "type": "string"
          },
          {
            "description": "The person's maiden name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "maiden_name",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nationality",
            "type": "string"
          },
          {
            "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
            "in": "formData",
            "maxLength": 5000,
            "name": "person_token",
            "type": "string"
          },
          {
            "description": "The person's phone number.",
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "political_exposure",
            "type": "string"
          },
          {
            "description": "The person's registered address.",
            "in": "formData",
            "name": "registered_address",
            "type": "object"
          },
          {
            "description": "The relationship that this person has with the account's legal entity.",
            "in": "formData",
            "name": "relationship",
            "type": "object"
          },
          {
            "description": "The last four digits of the person's Social Security number (U.S. only).",
            "in": "formData",
            "name": "ssn_last_4",
            "type": "string"
          },
          {
            "description": "The person's verification status.",
            "in": "formData",
            "name": "verification",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new person.</p>",
        "operationId": "PostAccountsAccountPersons"
      }
    },
    "/v1/accounts/{account}/persons/{person}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
        "operationId": "DeleteAccountsAccountPersonsPerson"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an existing person.</p>",
        "operationId": "GetAccountsAccountPersonsPerson"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "person",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
            "in": "formData",
            "name": "additional_tos_acceptances",
            "type": "object"
          },
          {
            "description": "The person's address.",
            "in": "formData",
            "name": "address",
            "type": "object"
          },
          {
            "description": "The Kana variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kana",
            "type": "object"
          },
          {
            "description": "The Kanji variation of the person's address (Japan only).",
            "in": "formData",
            "name": "address_kanji",
            "type": "object"
          },
          {
            "description": "The person's date of birth.",
            "in": "formData",
            "name": "dob"
          },
          {
            "description": "Documents that may be submitted to satisfy various informational requests.",
            "in": "formData",
            "name": "documents",
            "type": "object"
          },
          {
            "description": "The person's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The person's first name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "first_name_kanji",
            "type": "string"
          },
          {
            "description": "A list of alternate names or aliases that the person is known by.",
            "in": "formData",
            "name": "full_name_aliases"
          },
          {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number",
            "type": "string"
          },
          {
            "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
            "in": "formData",
            "maxLength": 5000,
            "name": "id_number_secondary",
            "type": "string"
          },
          {
            "description": "The person's last name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name",
            "type": "string"
          },
          {
            "description": "The Kana variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kana",
            "type": "string"
          },
          {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "in": "formData",
            "maxLength": 5000,
            "name": "last_name_kanji",
            "type": "string"
          },
          {
            "description": "The person's maiden name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "maiden_name",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nationality",
            "type": "string"
          },
          {
            "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
            "in": "formData",
            "maxLength": 5000,
            "name": "person_token",
            "type": "string"
          },
          {
            "description": "The person's phone number.",
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "political_exposure",
            "type": "string"
          },
          {
            "description": "The person's registered address.",
            "in": "formData",
            "name": "registered_address",
            "type": "object"
          },
          {
            "description": "The relationship that this person has with the account's legal entity.",
            "in": "formData",
            "name": "relationship",
            "type": "object"
          },
          {
            "description": "The last four digits of the person's Social Security number (U.S. only).",
            "in": "formData",
            "name": "ssn_last_4",
            "type": "string"
          },
          {
            "description": "The person's verification status.",
            "in": "formData",
            "name": "verification",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing person.</p>",
        "operationId": "PostAccountsAccountPersonsPerson"
      }
    },
    "/v1/accounts/{account}/reject": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "reason",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>With <a href=\"/connect\">Connect</a>, you can reject accounts that you have flagged as suspicious.</p>\n\n<p>Only accounts where your platform is liable for negative account balances, which includes Custom and Express accounts, can be rejected. Test-mode accounts can be rejected at any time. Live-mode accounts can only be rejected after all balances are zero.</p>",
        "operationId": "PostAccountsAccountReject"
      }
    },
    "/v1/apple_pay/domains": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "maxLength": 5000,
            "name": "domain_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/apple_pay_domain"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/apple_pay/domains",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApplePayDomainList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List apple pay domains.</p>",
        "operationId": "GetApplePayDomains"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "domain_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/apple_pay_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create an apple pay domain.</p>",
        "operationId": "PostApplePayDomains"
      }
    },
    "/v1/apple_pay/domains/{domain}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "domain",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_apple_pay_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete an apple pay domain.</p>",
        "operationId": "DeleteApplePayDomainsDomain"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/apple_pay_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve an apple pay domain.</p>",
        "operationId": "GetApplePayDomainsDomain"
      }
    },
    "/v1/application_fees": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return application fees for the charge specified by this charge ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "charge",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return applications fees that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/application_fee"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/application_fees",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PlatformEarningList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>",
        "operationId": "GetApplicationFees"
      }
    },
    "/v1/application_fees/{fee}/refunds/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "fee",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/fee_refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>",
        "operationId": "GetApplicationFeesFeeRefundsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "fee",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/fee_refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>",
        "operationId": "PostApplicationFeesFeeRefundsId"
      }
    },
    "/v1/application_fees/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/application_fee"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>",
        "operationId": "GetApplicationFeesId"
      }
    },
    "/v1/application_fees/{id}/refund": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "directive",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/application_fee"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "",
        "operationId": "PostApplicationFeesIdRefund"
      }
    },
    "/v1/application_fees/{id}/refunds": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/fee_refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FeeRefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
        "operationId": "GetApplicationFeesIdRefunds"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A positive integer, in _cents (or local equivalent)_, representing how much of this fee to refund. Can refund only up to the remaining unrefunded amount of the fee.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/fee_refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can’t be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>",
        "operationId": "PostApplicationFeesIdRefunds"
      }
    },
    "/v1/apps/secrets": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/apps.secret"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/apps/secrets",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SecretServiceResourceSecretList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List all secrets stored on the given scope.</p>",
        "operationId": "GetAppsSecrets"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The Unix timestamp for the expiry time of the secret, after which the secret deletes.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "A name for the secret that's unique within the scope.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The plaintext secret value to be stored.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payload",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "in": "formData",
            "name": "scope",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/apps.secret"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create or replace a secret in the secret store.</p>",
        "operationId": "PostAppsSecrets"
      }
    },
    "/v1/apps/secrets/delete": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A name for the secret that's unique within the scope.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "in": "formData",
            "name": "scope",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/apps.secret"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a secret from the secret store by name and scope.</p>",
        "operationId": "PostAppsSecretsDelete"
      }
    },
    "/v1/apps/secrets/find": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A name for the secret that's unique within the scope.",
            "in": "query",
            "maxLength": 5000,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/apps.secret"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Finds a secret in the secret store by name and scope.</p>",
        "operationId": "GetAppsSecretsFind"
      }
    },
    "/v1/balance": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/balance"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>",
        "operationId": "GetBalance"
      }
    },
    "/v1/balance/history": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return transactions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payout",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only returns the original transaction.",
            "in": "query",
            "maxLength": 5000,
            "name": "source",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.",
            "in": "query",
            "maxLength": 5000,
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/balance_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/balance_transactions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BalanceTransactionsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>",
        "operationId": "GetBalanceHistory"
      }
    },
    "/v1/balance/history/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>",
        "operationId": "GetBalanceHistoryId"
      }
    },
    "/v1/balance_transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return transactions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payout",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only returns the original transaction.",
            "in": "query",
            "maxLength": 5000,
            "name": "source",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.",
            "in": "query",
            "maxLength": 5000,
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/balance_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/balance_transactions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BalanceTransactionsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>",
        "operationId": "GetBalanceTransactions"
      }
    },
    "/v1/balance_transactions/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>",
        "operationId": "GetBalanceTransactionsId"
      }
    },
    "/v1/billing/alerts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter results to only include this type of alert.",
            "enum": [
              "usage_threshold"
            ],
            "in": "query",
            "name": "alert_type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter results to only include alerts with the given meter.",
            "in": "query",
            "maxLength": 5000,
            "name": "meter",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing.alert"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing/alerts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ThresholdsResourceAlertList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists billing active and inactive alerts</p>",
        "operationId": "GetBillingAlerts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of alert to create.",
            "enum": [
              "usage_threshold"
            ],
            "in": "formData",
            "name": "alert_type",
            "required": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The title of the alert.",
            "in": "formData",
            "maxLength": 256,
            "name": "title",
            "required": true,
            "type": "string"
          },
          {
            "description": "The configuration of the usage threshold.",
            "in": "formData",
            "name": "usage_threshold",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.alert"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a billing alert</p>",
        "operationId": "PostBillingAlerts"
      }
    },
    "/v1/billing/alerts/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.alert"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a billing alert given an ID</p>",
        "operationId": "GetBillingAlertsId"
      }
    },
    "/v1/billing/alerts/{id}/activate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.alert"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reactivates this alert, allowing it to trigger again.</p>",
        "operationId": "PostBillingAlertsIdActivate"
      }
    },
    "/v1/billing/alerts/{id}/archive": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.alert"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Archives this alert, removing it from the list view and APIs. This is non-reversible.</p>",
        "operationId": "PostBillingAlertsIdArchive"
      }
    },
    "/v1/billing/alerts/{id}/deactivate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.alert"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deactivates this alert, preventing it from triggering.</p>",
        "operationId": "PostBillingAlertsIdDeactivate"
      }
    },
    "/v1/billing/credit_balance_summary": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The customer for which to fetch credit balance summary.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The filter criteria for the credit balance summary.",
            "in": "query",
            "name": "filter",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_balance_summary"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the credit balance summary for a customer</p>",
        "operationId": "GetBillingCreditBalanceSummary"
      }
    },
    "/v1/billing/credit_balance_transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The credit grant for which to fetch credit balance transactions.",
            "in": "query",
            "maxLength": 5000,
            "name": "credit_grant",
            "required": false,
            "type": "string"
          },
          {
            "description": "The customer for which to fetch credit balance transactions.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing.credit_balance_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing/credit_grants",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BillingCreditGrantsResourceBalanceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of credit balance transactions</p>",
        "operationId": "GetBillingCreditBalanceTransactions"
      }
    },
    "/v1/billing/credit_balance_transactions/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a credit balance transaction</p>",
        "operationId": "GetBillingCreditBalanceTransactionsId"
      }
    },
    "/v1/billing/credit_grants": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return credit grants for this customer.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing.credit_grant"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing/credit_grants",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BillingCreditGrantsResourceCreditGrantList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of credit grants</p>",
        "operationId": "GetBillingCreditGrants"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount of this credit grant.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "object"
          },
          {
            "description": "Configuration specifying what this credit grant applies to.",
            "in": "formData",
            "name": "applicability_config",
            "required": true,
            "type": "object"
          },
          {
            "description": "The category of this credit grant.",
            "enum": [
              "paid",
              "promotional"
            ],
            "in": "formData",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "description": "Id of the customer to whom the credit should be granted.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "The time when the credit becomes effective i.e when it is eligible to be used. Defaults to the current timestamp if not specified.",
            "format": "unix-time",
            "in": "formData",
            "name": "effective_at",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The time when the credit will expire. If not specified, the credit will never expire.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object (ex: cost basis) in a structured format.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "A descriptive name shown in dashboard and on invoices.",
            "in": "formData",
            "maxLength": 250,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_grant"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a credit grant</p>",
        "operationId": "PostBillingCreditGrants"
      }
    },
    "/v1/billing/credit_grants/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_grant"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a credit grant</p>",
        "operationId": "GetBillingCreditGrantsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The time when the credit created by this credit grant will expire. If set to empty, the credit will never expire.",
            "in": "formData",
            "name": "expires_at"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object (ex: cost basis) in a structured format.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_grant"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a credit grant</p>",
        "operationId": "PostBillingCreditGrantsId"
      }
    },
    "/v1/billing/credit_grants/{id}/expire": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_grant"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Expires a credit grant</p>",
        "operationId": "PostBillingCreditGrantsIdExpire"
      }
    },
    "/v1/billing/credit_grants/{id}/void": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.credit_grant"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Voids a credit grant</p>",
        "operationId": "PostBillingCreditGrantsIdVoid"
      }
    },
    "/v1/billing/meter_event_adjustments": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which event to cancel.",
            "in": "formData",
            "name": "cancel",
            "type": "object"
          },
          {
            "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
            "in": "formData",
            "maxLength": 100,
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
            "enum": [
              "cancel"
            ],
            "in": "formData",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter_event_adjustment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a billing meter event adjustment</p>",
        "operationId": "PostBillingMeterEventAdjustments"
      }
    },
    "/v1/billing/meter_events": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
            "in": "formData",
            "maxLength": 100,
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this. We'll enforce uniqueness within a rolling 24 hour period.",
            "in": "formData",
            "maxLength": 100,
            "name": "identifier",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The payload of the event. This must contain the fields corresponding to a meter's `customer_mapping.event_payload_key` (default is `stripe_customer_id`) and `value_settings.event_payload_key` (default is `value`). Read more about the [payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).",
            "in": "formData",
            "name": "payload",
            "required": true,
            "type": "object"
          },
          {
            "description": "The time of the event. Measured in seconds since the Unix epoch. Must be within the past 35 calendar days or up to 5 minutes in the future. Defaults to current timestamp if not specified.",
            "format": "unix-time",
            "in": "formData",
            "name": "timestamp",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter_event"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a billing meter event</p>",
        "operationId": "PostBillingMeterEvents"
      }
    },
    "/v1/billing/meters": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter results to only include meters with the given status.",
            "enum": [
              "active",
              "inactive"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing.meter"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing/meters",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BillingMeterResourceBillingMeterList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of billing meters.</p>",
        "operationId": "GetBillingMeters"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Fields that specify how to map a meter event to a customer.",
            "in": "formData",
            "name": "customer_mapping",
            "type": "object"
          },
          {
            "description": "The default settings to aggregate a meter's events with.",
            "in": "formData",
            "name": "default_aggregation",
            "required": true,
            "type": "object"
          },
          {
            "description": "The meter's name.",
            "in": "formData",
            "maxLength": 250,
            "name": "display_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the meter event to record usage for. Corresponds with the `event_name` field on meter events.",
            "in": "formData",
            "maxLength": 100,
            "name": "event_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The time window to pre-aggregate meter events for, if any.",
            "enum": [
              "day",
              "hour"
            ],
            "in": "formData",
            "name": "event_time_window",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Fields that specify how to calculate a meter event's value.",
            "in": "formData",
            "name": "value_settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a billing meter</p>",
        "operationId": "PostBillingMeters"
      }
    },
    "/v1/billing/meters/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a billing meter given an ID</p>",
        "operationId": "GetBillingMetersId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The meter's name.",
            "in": "formData",
            "maxLength": 250,
            "name": "display_name",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a billing meter</p>",
        "operationId": "PostBillingMetersId"
      }
    },
    "/v1/billing/meters/{id}/deactivate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deactivates a billing meter</p>",
        "operationId": "PostBillingMetersIdDeactivate"
      }
    },
    "/v1/billing/meters/{id}/event_summaries": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The customer for which to fetch event summaries.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "The timestamp from when to stop aggregating meter events (exclusive). Must be aligned with minute boundaries.",
            "format": "unix-time",
            "in": "query",
            "name": "end_time",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The timestamp from when to start aggregating meter events (inclusive). Must be aligned with minute boundaries.",
            "format": "unix-time",
            "in": "query",
            "name": "start_time",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies what granularity to use when generating event summaries. If not specified, a single event summary would be returned for the specified time range. For hourly granularity, start and end times must align with hour boundaries (e.g., 00:00, 01:00, ..., 23:00). For daily granularity, start and end times must align with UTC day boundaries (00:00 UTC).",
            "enum": [
              "day",
              "hour"
            ],
            "in": "query",
            "name": "value_grouping_window",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing.meter_event_summary"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing/meters/[^/]+/event_summaries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BillingMeterResourceBillingMeterEventSummaryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of billing meter event summaries.</p>",
        "operationId": "GetBillingMetersIdEventSummaries"
      }
    },
    "/v1/billing/meters/{id}/reactivate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier for the object.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing.meter"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reactivates a billing meter</p>",
        "operationId": "PostBillingMetersIdReactivate"
      }
    },
    "/v1/billing_portal/configurations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration).",
            "in": "query",
            "name": "is_default",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/billing_portal.configuration"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/billing_portal/configurations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PortalPublicResourceConfigurationList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of configurations that describe the functionality of the customer portal.</p>",
        "operationId": "GetBillingPortalConfigurations"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The business information shown to customers in the portal.",
            "in": "formData",
            "name": "business_profile",
            "required": true,
            "type": "object"
          },
          {
            "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
            "in": "formData",
            "name": "default_return_url"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Information about the features available in the portal.",
            "in": "formData",
            "name": "features",
            "required": true,
            "type": "object"
          },
          {
            "description": "The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).",
            "in": "formData",
            "name": "login_page",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing_portal.configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a configuration that describes the functionality and behavior of a PortalSession</p>",
        "operationId": "PostBillingPortalConfigurations"
      }
    },
    "/v1/billing_portal/configurations/{configuration}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing_portal.configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a configuration that describes the functionality of the customer portal.</p>",
        "operationId": "GetBillingPortalConfigurationsConfiguration"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the configuration is active and can be used to create portal sessions.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "The business information shown to customers in the portal.",
            "in": "formData",
            "name": "business_profile",
            "type": "object"
          },
          {
            "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
            "in": "formData",
            "name": "default_return_url"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Information about the features available in the portal.",
            "in": "formData",
            "name": "features",
            "type": "object"
          },
          {
            "description": "The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).",
            "in": "formData",
            "name": "login_page",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing_portal.configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a configuration that describes the functionality of the customer portal.</p>",
        "operationId": "PostBillingPortalConfigurationsConfiguration"
      }
    },
    "/v1/billing_portal/sessions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of an existing [configuration](https://stripe.com/docs/api/customer_portal/configuration) to use for this session, describing its functionality and features. If not specified, the session uses the default configuration.",
            "in": "formData",
            "maxLength": 5000,
            "name": "configuration",
            "type": "string"
          },
          {
            "description": "The ID of an existing customer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.",
            "in": "formData",
            "name": "flow_data",
            "type": "object"
          },
          {
            "description": "The IETF language tag of the locale customer portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used.",
            "enum": [
              "auto",
              "bg",
              "cs",
              "da",
              "de",
              "el",
              "en",
              "en-AU",
              "en-CA",
              "en-GB",
              "en-IE",
              "en-IN",
              "en-NZ",
              "en-SG",
              "es",
              "es-419",
              "et",
              "fi",
              "fil",
              "fr",
              "fr-CA",
              "hr",
              "hu",
              "id",
              "it",
              "ja",
              "ko",
              "lt",
              "lv",
              "ms",
              "mt",
              "nb",
              "nl",
              "pl",
              "pt",
              "pt-BR",
              "ro",
              "ru",
              "sk",
              "sl",
              "sv",
              "th",
              "tr",
              "vi",
              "zh",
              "zh-HK",
              "zh-TW"
            ],
            "in": "formData",
            "name": "locale",
            "type": "string"
          },
          {
            "description": "The `on_behalf_of` account to use for this session. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.",
            "in": "formData",
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "The default URL to redirect customers to when they click on the portal's link to return to your website.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/billing_portal.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a session of the customer portal.</p>",
        "operationId": "PostBillingPortalSessions"
      }
    },
    "/v1/charges": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return charges that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return charges for the customer specified by this customer ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return charges for this transfer group, limited to 100.",
            "in": "query",
            "maxLength": 5000,
            "name": "transfer_group",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/charges",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>",
        "operationId": "GetCharges"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "in": "formData",
            "name": "application_fee",
            "type": "integer"
          },
          {
            "description": "A fee in cents (or local equivalent) that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/connect/direct-charges#collect-fees).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "Whether to immediately capture the charge. Defaults to `true`. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](https://stripe.com/docs/api#capture_charge) later. Uncaptured charges expire after a set number of days (7 by default). For more information, see the [authorizing charges and settling later](https://stripe.com/docs/charges/placing-a-hold) documentation.",
            "in": "formData",
            "name": "capture",
            "type": "boolean"
          },
          {
            "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "The ID of an existing customer that will be charged in this request.",
            "in": "formData",
            "maxLength": 500,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
            "in": "formData",
            "maxLength": 40000,
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "destination"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant).",
            "in": "formData",
            "maxLength": 5000,
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
            "in": "formData",
            "name": "radar_options",
            "type": "object"
          },
          {
            "description": "The email address to which this charge's [receipt](https://stripe.com/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a [Customer](https://stripe.com/docs/api/customers/object), the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
            "in": "formData",
            "name": "receipt_email",
            "type": "string"
          },
          {
            "description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
            "in": "formData",
            "name": "shipping",
            "type": "object",
            "required": false
          },
          {
            "description": "A payment source to be charged. This can be the ID of a [card](https://stripe.com/docs/api#cards) (i.e., credit or debit card), a [bank account](https://stripe.com/docs/api#bank_accounts), a [source](https://stripe.com/docs/api#sources), a [token](https://stripe.com/docs/api#tokens), or a [connected account](https://stripe.com/docs/connect/account-debits#charging-a-connected-account). For certain sources---namely, [cards](https://stripe.com/docs/api#cards), [bank accounts](https://stripe.com/docs/api#bank_accounts), and attached [sources](https://stripe.com/docs/api#sources)---you must also pass the ID of the associated customer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "For a non-card charge, text that appears on the customer's statement as the statement descriptor. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nFor a card charge, this value is ignored unless you don't specify a `statement_descriptor_suffix`, in which case this value is used as the suffix.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement. If the account has no prefix value, the suffix is concatenated to the account's statement descriptor.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor_suffix",
            "type": "string"
          },
          {
            "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options).",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/charge"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>This method is no longer recommended—use the <a href=\"/docs/api/payment_intents\">Payment Intents API</a>\nto initiate a new payment instead. Confirmation of the PaymentIntent creates the <code>Charge</code>\nobject used to request payment.</p>",
        "operationId": "PostCharges"
      }
    },
    "/v1/charges/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for charges](https://stripe.com/docs/search#query-fields-for-charges).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for charges you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetChargesSearch"
      }
    },
    "/v1/charges/{charge}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/charge"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>",
        "operationId": "GetChargesCharge"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
            "in": "formData",
            "maxLength": 40000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A set of key-value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Stripe will use the information you send to improve our fraud detection algorithms.",
            "in": "formData",
            "name": "fraud_details",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.",
            "in": "formData",
            "maxLength": 5000,
            "name": "receipt_email",
            "type": "string"
          },
          {
            "description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
            "in": "formData",
            "name": "shipping",
            "type": "object"
          },
          {
            "description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/charge"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostChargesCharge"
      }
    },
    "/v1/charges/{charge}/capture": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "An application fee to add on to this charge.",
            "in": "formData",
            "name": "application_fee",
            "type": "integer"
          },
          {
            "description": "An application fee amount to add on to this charge, which must be less than or equal to the original amount.",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.",
            "in": "formData",
            "name": "receipt_email",
            "type": "string"
          },
          {
            "description": "For a non-card charge, text that appears on the customer's statement as the statement descriptor. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nFor a card charge, this value is ignored unless you don't specify a `statement_descriptor_suffix`, in which case this value is used as the suffix.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement. If the account has no prefix value, the suffix is concatenated to the account's statement descriptor.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor_suffix",
            "type": "string"
          },
          {
            "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/charge"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Capture the payment of an existing, uncaptured charge that was created with the <code>capture</code> option set to false.</p>\n\n<p>Uncaptured payments expire a set number of days after they are created (<a href=\"/docs/charges/placing-a-hold\">7 by default</a>), after which they are marked as refunded and capture attempts will fail.</p>\n\n<p>Don’t use this method to capture a PaymentIntent-initiated charge. Use <a href=\"/docs/api/payment_intents/capture\">Capture a PaymentIntent</a>.</p>",
        "operationId": "PostChargesChargeCapture"
      }
    },
    "/v1/charges/{charge}/dispute": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a dispute for a specified charge.</p>",
        "operationId": "GetChargesChargeDispute"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
            "in": "formData",
            "name": "evidence",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
            "in": "formData",
            "name": "submit",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "",
        "operationId": "PostChargesChargeDispute"
      }
    },
    "/v1/charges/{charge}/dispute/close": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "",
        "operationId": "PostChargesChargeDisputeClose"
      }
    },
    "/v1/charges/{charge}/refund": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the charge to refund.",
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) representing how much of this charge to refund. Can refund only up to the remaining, unrefunded amount of the charge.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.",
            "in": "formData",
            "name": "instructions_email",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The identifier of the PaymentIntent to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_intent",
            "type": "string"
          },
          {
            "description": "String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.",
            "enum": [
              "duplicate",
              "fraudulent",
              "requested_by_customer"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "reason",
            "type": "string"
          },
          {
            "description": "Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.",
            "in": "formData",
            "name": "refund_application_fee",
            "type": "boolean"
          },
          {
            "description": "Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.",
            "in": "formData",
            "name": "reverse_transfer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/charge"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new refund, you must specify either a Charge or a PaymentIntent object.</p>\n\n<p>This action refunds a previously created charge that’s not refunded yet.\nFunds are refunded to the credit or debit card that’s originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can repeat this until the entire charge is refunded.</p>\n\n<p>After you entirely refund a charge, you can’t refund it again.\nThis method raises an error when it’s called on an already-refunded charge,\nor when you attempt to refund more money than is left on a charge.</p>",
        "operationId": "PostChargesChargeRefund"
      }
    },
    "/v1/charges/{charge}/refunds": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
        "operationId": "GetChargesChargeRefunds"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the charge to refund.",
            "in": "path",
            "maxLength": 5000,
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "Customer whose customer balance to refund from.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.",
            "in": "formData",
            "name": "instructions_email",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Origin of the refund",
            "enum": [
              "customer_balance"
            ],
            "in": "formData",
            "name": "origin",
            "type": "string"
          },
          {
            "description": "The identifier of the PaymentIntent to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_intent",
            "type": "string"
          },
          {
            "description": "String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.",
            "enum": [
              "duplicate",
              "fraudulent",
              "requested_by_customer"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "reason",
            "type": "string"
          },
          {
            "description": "Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.",
            "in": "formData",
            "name": "refund_application_fee",
            "type": "boolean"
          },
          {
            "description": "Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.",
            "in": "formData",
            "name": "reverse_transfer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can’t be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>",
        "operationId": "PostChargesChargeRefunds"
      }
    },
    "/v1/charges/{charge}/refunds/{refund}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing refund.</p>",
        "operationId": "GetChargesChargeRefundsRefund"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "charge",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update a specified refund.</p>",
        "operationId": "PostChargesChargeRefundsRefund"
      }
    },
    "/v1/checkout/sessions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return Checkout Sessions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return the Checkout Sessions for the Customer specified.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return the Checkout Sessions for the Customer details specified.",
            "in": "query",
            "name": "customer_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return the Checkout Session for the PaymentIntent specified.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return the Checkout Sessions for the Payment Link specified.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_link",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return the Checkout Sessions matching the given status.",
            "enum": [
              "complete",
              "expired",
              "open"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return the Checkout Session for the subscription specified.",
            "in": "query",
            "maxLength": 5000,
            "name": "subscription",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/checkout.session"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentPagesCheckoutSessionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Checkout Sessions.</p>",
        "operationId": "GetCheckoutSessions"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Configure actions after a Checkout Session has expired.",
            "in": "formData",
            "name": "after_expiration",
            "type": "object"
          },
          {
            "description": "Enables user redeemable promotion codes.",
            "in": "formData",
            "name": "allow_promotion_codes",
            "type": "boolean"
          },
          {
            "description": "Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Specify whether Checkout should collect the customer's billing address. Defaults to `auto`.",
            "enum": [
              "auto",
              "required"
            ],
            "in": "formData",
            "name": "billing_address_collection",
            "type": "string"
          },
          {
            "description": "If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website. This parameter is not allowed if ui_mode is `embedded`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "cancel_url",
            "type": "string"
          },
          {
            "description": "A unique string to reference the Checkout Session. This can be a\ncustomer ID, a cart ID, or similar, and can be used to reconcile the\nsession with your internal systems.",
            "in": "formData",
            "maxLength": 200,
            "name": "client_reference_id",
            "type": "string"
          },
          {
            "description": "Configure fields for the Checkout Session to gather active consent from customers.",
            "in": "formData",
            "name": "consent_collection",
            "type": "object"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Required in `setup` mode when `payment_method_types` is not set.",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
            "in": "formData",
            "items": {
              "properties": {
                "dropdown": {
                  "properties": {
                    "default_value": {
                      "maxLength": 100,
                      "type": "string"
                    },
                    "options": {
                      "items": {
                        "properties": {
                          "label": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "value": {
                            "maxLength": 100,
                            "type": "string"
                          }
                        },
                        "required": [
                          "label",
                          "value"
                        ],
                        "title": "custom_field_option_param",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "options"
                  ],
                  "title": "custom_field_dropdown_param",
                  "type": "object"
                },
                "key": {
                  "maxLength": 200,
                  "type": "string"
                },
                "label": {
                  "properties": {
                    "custom": {
                      "maxLength": 50,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "custom"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "custom",
                    "type"
                  ],
                  "title": "custom_field_label_param",
                  "type": "object"
                },
                "numeric": {
                  "properties": {
                    "default_value": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "maximum_length": {
                      "type": "integer"
                    },
                    "minimum_length": {
                      "type": "integer"
                    }
                  },
                  "title": "custom_field_numeric_param",
                  "type": "object"
                },
                "optional": {
                  "type": "boolean"
                },
                "text": {
                  "properties": {
                    "default_value": {
                      "maxLength": 255,
                      "type": "string"
                    },
                    "maximum_length": {
                      "type": "integer"
                    },
                    "minimum_length": {
                      "type": "integer"
                    }
                  },
                  "title": "custom_field_text_param",
                  "type": "object"
                },
                "type": {
                  "enum": [
                    "dropdown",
                    "numeric",
                    "text"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "key",
                "label",
                "type"
              ],
              "title": "custom_field_param",
              "type": "object"
            },
            "name": "custom_fields",
            "type": "array"
          },
          {
            "description": "Display additional text for your customers using custom text.",
            "in": "formData",
            "name": "custom_text",
            "type": "object"
          },
          {
            "description": "ID of an existing Customer, if one exists. In `payment` mode, the customer’s most recently saved card\npayment method will be used to prefill the email, name, card details, and billing address\non the Checkout page. In `subscription` mode, the customer’s [default payment method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method)\nwill be used if it’s a card, otherwise the most recently saved card will be used. A valid billing address, billing name and billing email are required on the payment method for Checkout to prefill the customer's card details.\n\nIf the Customer already has a valid [email](https://stripe.com/docs/api/customers/object#customer_object-email) set, the email will be prefilled and not editable in Checkout.\nIf the Customer does not have a valid `email`, Checkout will set the email entered during the session on the Customer.\n\nIf blank for Checkout Sessions in `subscription` mode or with `customer_creation` set as `always` in `payment` mode, Checkout will create a new Customer object based on information provided during the payment flow.\n\nYou can set [`payment_intent_data.setup_future_usage`](https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage) to have Checkout automatically attach the payment method to the Customer you pass in for future reuse.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "Configure whether a Checkout Session creates a [Customer](https://stripe.com/docs/api/customers) during Session confirmation.\n\nWhen a Customer is not created, you can still retrieve email, address, and other customer data entered in Checkout\nwith [customer_details](https://stripe.com/docs/api/checkout/sessions/object#checkout_session_object-customer_details).\n\nSessions that don't create Customers instead are grouped by [guest customers](https://stripe.com/docs/payments/checkout/guest-customers)\nin the Dashboard. Promotion codes limited to first time customers will return invalid for these Sessions.\n\nCan only be set in `payment` and `setup` mode.",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "customer_creation",
            "type": "string"
          },
          {
            "description": "If provided, this value will be used when the Customer object is created.\nIf not provided, customers will be asked to enter their email address.\nUse this parameter to prefill customer data if you already have an email\non file. To access information about the customer once a session is\ncomplete, use the `customer` field.",
            "in": "formData",
            "name": "customer_email",
            "type": "string"
          },
          {
            "description": "Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.",
            "in": "formData",
            "name": "customer_update",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The coupon or promotion code to apply to this Session. Currently, only up to one may be specified.",
            "in": "formData",
            "items": {
              "properties": {
                "coupon": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "promotion_code": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "title": "discount_params",
              "type": "object"
            },
            "name": "discounts",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The Epoch time in seconds at which the Checkout Session will expire. It can be anywhere from 30 minutes to 24 hours after Checkout Session creation. By default, this value is 24 hours from creation.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "Generate a post-purchase Invoice for one-time payments.",
            "in": "formData",
            "name": "invoice_creation",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of items the customer is purchasing. Use this parameter to pass one-time or recurring [Prices](https://stripe.com/docs/api/prices).\n\nFor `payment` mode, there is a maximum of 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.\n\nFor `subscription` mode, there is a maximum of 20 line items with recurring Prices and 20 line items with one-time Prices. Line items with one-time Prices will be on the initial invoice only.",
            "in": "formData",
            "items": {
              "properties": {
                "adjustable_quantity": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "maximum": {
                      "type": "integer"
                    },
                    "minimum": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "adjustable_quantity_params",
                  "type": "object"
                },
                "dynamic_tax_rates": {
                  "items": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "type": "array"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "product_data": {
                      "properties": {
                        "description": {
                          "maxLength": 40000,
                          "type": "string"
                        },
                        "images": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "name": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "tax_code": {
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "product_data",
                      "type": "object"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency"
                  ],
                  "title": "price_data_with_product_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {
                  "items": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "title": "line_item_params",
              "type": "object"
            },
            "name": "line_items",
            "type": "array"
          },
          {
            "description": "The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used.",
            "enum": [
              "auto",
              "bg",
              "cs",
              "da",
              "de",
              "el",
              "en",
              "en-GB",
              "es",
              "es-419",
              "et",
              "fi",
              "fil",
              "fr",
              "fr-CA",
              "hr",
              "hu",
              "id",
              "it",
              "ja",
              "ko",
              "lt",
              "lv",
              "ms",
              "mt",
              "nb",
              "nl",
              "pl",
              "pt",
              "pt-BR",
              "ro",
              "ru",
              "sk",
              "sl",
              "sv",
              "th",
              "tr",
              "vi",
              "zh",
              "zh-HK",
              "zh-TW"
            ],
            "in": "formData",
            "name": "locale",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The mode of the Checkout Session. Pass `subscription` if the Checkout Session includes at least one recurring item.",
            "enum": [
              "payment",
              "setup",
              "subscription"
            ],
            "in": "formData",
            "name": "mode",
            "type": "string"
          },
          {
            "description": "A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.",
            "in": "formData",
            "name": "payment_intent_data",
            "type": "object"
          },
          {
            "description": "Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.\nThis may occur if the Checkout Session includes a free trial or a discount.\n\nCan only be set in `subscription` mode. Defaults to `always`.\n\nIf you'd like information on how to collect a payment method outside of Checkout, read the guide on configuring [subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "payment_method_collection",
            "type": "string"
          },
          {
            "description": "The ID of the payment method configuration to use with this Checkout session.",
            "in": "formData",
            "maxLength": 100,
            "name": "payment_method_configuration",
            "type": "string"
          },
          {
            "description": "This parameter allows you to set some attributes on the payment method created during a Checkout session.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment-method-specific configuration.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of the types of payment methods (e.g., `card`) this Checkout Session can accept.\n\nYou can omit this attribute to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).\nSee [Dynamic Payment Methods](https://stripe.com/docs/payments/payment-methods/integration-options#using-dynamic-payment-methods) for more details.\n\nRead more about the supported payment methods and their requirements in our [payment\nmethod details guide](/docs/payments/checkout/payment-methods).\n\nIf multiple payment methods are passed, Checkout will dynamically reorder them to\nprioritize the most relevant payment methods based on the customer's location and\nother characteristics.",
            "in": "formData",
            "items": {
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "amazon_pay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "cashapp",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "klarna",
                "konbini",
                "link",
                "mobilepay",
                "multibanco",
                "oxxo",
                "p24",
                "paynow",
                "paypal",
                "pix",
                "promptpay",
                "revolut_pay",
                "sepa_debit",
                "sofort",
                "swish",
                "twint",
                "us_bank_account",
                "wechat_pay",
                "zip"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "Controls phone number collection settings for the session.\n\nWe recommend that you review your privacy policy and check with your legal contacts\nbefore using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).",
            "in": "formData",
            "name": "phone_number_collection",
            "type": "object"
          },
          {
            "description": "This parameter applies to `ui_mode: embedded`. Learn more about the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-success-page?payment-ui=embedded-form) of embedded sessions. Defaults to `always`.",
            "enum": [
              "always",
              "if_required",
              "never"
            ],
            "in": "formData",
            "name": "redirect_on_completion",
            "type": "string"
          },
          {
            "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the\npayment method's app or site. This parameter is required if ui_mode is `embedded`\nand redirect-based payment methods are enabled on the session.",
            "in": "formData",
            "maxLength": 5000,
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "Controls saved payment method settings for the session. Only available in `payment` and `subscription` mode.",
            "in": "formData",
            "name": "saved_payment_method_options",
            "type": "object"
          },
          {
            "description": "A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in `setup` mode.",
            "in": "formData",
            "name": "setup_intent_data",
            "type": "object"
          },
          {
            "description": "When set, provides configuration for Checkout to collect a shipping address from a customer.",
            "in": "formData",
            "name": "shipping_address_collection",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The shipping rate options to apply to this Session. Up to a maximum of 5.",
            "in": "formData",
            "items": {
              "properties": {
                "shipping_rate": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "shipping_rate_data": {
                  "properties": {
                    "delivery_estimate": {
                      "properties": {
                        "maximum": {
                          "properties": {
                            "unit": {
                              "enum": [
                                "business_day",
                                "day",
                                "hour",
                                "month",
                                "week"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "unit",
                            "value"
                          ],
                          "title": "delivery_estimate_bound",
                          "type": "object"
                        },
                        "minimum": {
                          "properties": {
                            "unit": {
                              "enum": [
                                "business_day",
                                "day",
                                "hour",
                                "month",
                                "week"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "unit",
                            "value"
                          ],
                          "title": "delivery_estimate_bound",
                          "type": "object"
                        }
                      },
                      "title": "delivery_estimate",
                      "type": "object"
                    },
                    "display_name": {
                      "maxLength": 100,
                      "type": "string"
                    },
                    "fixed_amount": {
                      "properties": {
                        "amount": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "currency_options": {
                          "additionalProperties": {
                            "properties": {
                              "amount": {
                                "type": "integer"
                              },
                              "tax_behavior": {
                                "enum": [
                                  "exclusive",
                                  "inclusive",
                                  "unspecified"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount"
                            ],
                            "title": "currency_option",
                            "type": "object"
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "title": "fixed_amount",
                      "type": "object"
                    },
                    "metadata": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "tax_code": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "fixed_amount"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "display_name"
                  ],
                  "title": "method_params",
                  "type": "object"
                }
              },
              "title": "shipping_option_params",
              "type": "object"
            },
            "name": "shipping_options",
            "type": "array"
          },
          {
            "description": "Describes the type of transaction being performed by Checkout in order to customize\nrelevant text on the page, such as the submit button. `submit_type` can only be\nspecified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.",
            "enum": [
              "auto",
              "book",
              "donate",
              "pay"
            ],
            "in": "formData",
            "name": "submit_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.",
            "in": "formData",
            "name": "subscription_data",
            "type": "object"
          },
          {
            "description": "The URL to which Stripe should send customers when payment or setup\nis complete.\nThis parameter is not allowed if ui_mode is `embedded`. If you’d like to use\ninformation from the successful Checkout Session on your page, read the\nguide on [customizing your success page](https://stripe.com/docs/payments/checkout/custom-success-page).",
            "in": "formData",
            "maxLength": 5000,
            "name": "success_url",
            "type": "string"
          },
          {
            "description": "Controls tax ID collection during checkout.",
            "in": "formData",
            "name": "tax_id_collection",
            "type": "object"
          },
          {
            "description": "The UI mode of the Session. Defaults to `hosted`.",
            "enum": [
              "embedded",
              "hosted"
            ],
            "in": "formData",
            "name": "ui_mode",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/checkout.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a Session object.</p>",
        "operationId": "PostCheckoutSessions"
      }
    },
    "/v1/checkout/sessions/{session}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 66,
            "name": "session",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/checkout.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Session object.</p>",
        "operationId": "GetCheckoutSessionsSession"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/checkout.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a Session object.</p>",
        "operationId": "PostCheckoutSessionsSession"
      }
    },
    "/v1/checkout/sessions/{session}/expire": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/checkout.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A Session can be expired when it is in one of these statuses: <code>open</code> </p>\n\n<p>After it expires, a customer can’t complete a Session and customers loading the Session see a message saying the Session is expired.</p>",
        "operationId": "PostCheckoutSessionsSessionExpire"
      }
    },
    "/v1/checkout/sessions/{session}/line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentPagesCheckoutSessionListLineItems",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a Checkout Session, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetCheckoutSessionsSessionLineItems"
      }
    },
    "/v1/climate/orders": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/climate.order"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/climate/orders",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ClimateRemovalsOrdersList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all Climate order objects. The orders are returned sorted by creation date, with the\nmost recently created orders appearing first.</p>",
        "operationId": "GetClimateOrders"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Requested amount of carbon removal units. Either this or `metric_tons` must be specified.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.",
            "in": "formData",
            "name": "beneficiary",
            "type": "object"
          },
          {
            "description": "Request currency for the order as a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a supported [settlement currency for your account](https://stripe.com/docs/currencies). If omitted, the account's default currency will be used.",
            "in": "formData",
            "maxLength": 5000,
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Requested number of tons for the order. Either this or `amount` must be specified.",
            "format": "decimal",
            "in": "formData",
            "name": "metric_tons",
            "type": "string"
          },
          {
            "description": "Unique identifier of the Climate product.",
            "in": "formData",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.order"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a Climate order object for a given Climate product. The order will be processed immediately\nafter creation and payment will be deducted your Stripe balance.</p>",
        "operationId": "PostClimateOrders"
      }
    },
    "/v1/climate/orders/{order}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Unique identifier of the order.",
            "in": "path",
            "maxLength": 5000,
            "name": "order",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.order"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Climate order object with the given ID.</p>",
        "operationId": "GetClimateOrdersOrder"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the order.",
            "in": "path",
            "maxLength": 5000,
            "name": "order",
            "required": true,
            "type": "string"
          },
          {
            "description": "Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.",
            "in": "formData",
            "name": "beneficiary"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.order"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified order by setting the values of the parameters passed.</p>",
        "operationId": "PostClimateOrdersOrder"
      }
    },
    "/v1/climate/orders/{order}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Unique identifier of the order.",
            "in": "path",
            "maxLength": 5000,
            "name": "order",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.order"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a Climate order. You can cancel an order within 24 hours of creation. Stripe refunds the\nreservation <code>amount_subtotal</code>, but not the <code>amount_fees</code> for user-triggered cancellations. Frontier\nmight cancel reservations if suppliers fail to deliver. If Frontier cancels the reservation, Stripe\nprovides 90 days advance notice and refunds the <code>amount_total</code>.</p>",
        "operationId": "PostClimateOrdersOrderCancel"
      }
    },
    "/v1/climate/products": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/climate.product"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/climate/products",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ClimateRemovalsProductsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all available Climate product objects.</p>",
        "operationId": "GetClimateProducts"
      }
    },
    "/v1/climate/products/{product}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.product"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Climate product with the given ID.</p>",
        "operationId": "GetClimateProductsProduct"
      }
    },
    "/v1/climate/suppliers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/climate.supplier"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/climate/suppliers",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ClimateRemovalsSuppliersList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all available Climate supplier objects.</p>",
        "operationId": "GetClimateSuppliers"
      }
    },
    "/v1/climate/suppliers/{supplier}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "supplier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/climate.supplier"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Climate supplier object.</p>",
        "operationId": "GetClimateSuppliersSupplier"
      }
    },
    "/v1/confirmation_tokens/{confirmation_token}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "confirmation_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/confirmation_token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an existing ConfirmationToken object</p>",
        "operationId": "GetConfirmationTokensConfirmationToken"
      }
    },
    "/v1/country_specs": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/country_spec"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/country_specs",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CountrySpecList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all Country Spec objects available in the API.</p>",
        "operationId": "GetCountrySpecs"
      }
    },
    "/v1/country_specs/{country}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "country",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/country_spec"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a Country Spec for a given Country code.</p>",
        "operationId": "GetCountrySpecsCountry"
      }
    },
    "/v1/coupons": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/coupon"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/coupons",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CouponsResourceCouponList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your coupons.</p>",
        "operationId": "GetCoupons"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed).",
            "in": "formData",
            "name": "amount_off",
            "type": "integer"
          },
          {
            "description": "A hash containing directions for what this Coupon will apply discounts to.",
            "in": "formData",
            "name": "applies_to",
            "type": "object"
          },
          {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "additionalProperties": {
              "properties": {
                "amount_off": {
                  "type": "integer"
                }
              },
              "required": [
                "amount_off"
              ],
              "title": "currency_option",
              "type": "object"
            },
            "description": "Coupons defined in each available currency option (only supported if `amount_off` is passed). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency_options",
            "type": "object"
          },
          {
            "description": "Specifies how long the discount will be in effect if used on a subscription. Defaults to `once`.",
            "enum": [
              "forever",
              "once",
              "repeating"
            ],
            "in": "formData",
            "name": "duration",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect.",
            "in": "formData",
            "name": "duration_in_months",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you.",
            "in": "formData",
            "maxLength": 5000,
            "name": "id",
            "type": "string"
          },
          {
            "description": "A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.",
            "in": "formData",
            "name": "max_redemptions",
            "type": "integer"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
            "in": "formData",
            "maxLength": 40,
            "name": "name",
            "type": "string"
          },
          {
            "description": "A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed).",
            "in": "formData",
            "name": "percent_off",
            "type": "number"
          },
          {
            "description": "Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.",
            "format": "unix-time",
            "in": "formData",
            "name": "redeem_by",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/coupon"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>\n\n<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>",
        "operationId": "PostCoupons"
      }
    },
    "/v1/coupons/{coupon}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "coupon",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_coupon"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>",
        "operationId": "DeleteCouponsCoupon"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "coupon",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/coupon"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the coupon with the given ID.</p>",
        "operationId": "GetCouponsCoupon"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "coupon",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "properties": {
                "amount_off": {
                  "type": "integer"
                }
              },
              "required": [
                "amount_off"
              ],
              "title": "currency_option",
              "type": "object"
            },
            "description": "Coupons defined in each available currency option (only supported if the coupon is amount-based). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
            "in": "formData",
            "maxLength": 40,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/coupon"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>",
        "operationId": "PostCouponsCoupon"
      }
    },
    "/v1/credit_notes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return credit notes that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return credit notes for the customer specified by this customer ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return credit notes for the invoice specified by this invoice ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "invoice",
            "required": false,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/credit_note"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CreditNotesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of credit notes.</p>",
        "operationId": "GetCreditNotes"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.",
            "in": "formData",
            "name": "credit_amount",
            "type": "integer"
          },
          {
            "description": "The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.",
            "format": "unix-time",
            "in": "formData",
            "name": "effective_at",
            "type": "integer"
          },
          {
            "description": "Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.",
            "enum": [
              "credit_note",
              "none"
            ],
            "in": "formData",
            "name": "email_type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "ID of the invoice.",
            "in": "formData",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Line items that make up the credit note.",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice_line_item": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_amounts": {},
                "tax_rates": {},
                "type": {
                  "enum": [
                    "custom_line_item",
                    "invoice_line_item"
                  ],
                  "type": "string"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "credit_note_line_item_params",
              "type": "object"
            },
            "name": "lines",
            "type": "array"
          },
          {
            "description": "The credit note's memo appears on the credit note PDF.",
            "in": "formData",
            "maxLength": 5000,
            "name": "memo",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.",
            "in": "formData",
            "name": "out_of_band_amount",
            "type": "integer"
          },
          {
            "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
            "enum": [
              "duplicate",
              "fraudulent",
              "order_change",
              "product_unsatisfactory"
            ],
            "in": "formData",
            "name": "reason",
            "type": "string"
          },
          {
            "description": "ID of an existing refund to link this credit note to.",
            "in": "formData",
            "name": "refund",
            "type": "string"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.",
            "in": "formData",
            "name": "refund_amount",
            "type": "integer"
          },
          {
            "description": "When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.",
            "in": "formData",
            "name": "shipping_cost",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/credit_note"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Issue a credit note to adjust the amount of a finalized invoice. For a <code>status=open</code> invoice, a credit note reduces\nits <code>amount_due</code>. For a <code>status=paid</code> invoice, a credit note does not affect its <code>amount_due</code>. Instead, it can result\nin any combination of the following:</p>\n\n<ul>\n<li>Refund: create a new refund (using <code>refund_amount</code>) or link an existing refund (using <code>refund</code>).</li>\n<li>Customer balance credit: credit the customer’s balance (using <code>credit_amount</code>) which will be automatically applied to their next invoice when it’s finalized.</li>\n<li>Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using <code>out_of_band_amount</code>).</li>\n</ul>\n\n<p>For post-payment credit notes the sum of the refund, credit and outside of Stripe amounts must equal the credit note total.</p>\n\n<p>You may issue multiple credit notes for an invoice. Each credit note will increment the invoice’s <code>pre_payment_credit_notes_amount</code>\nor <code>post_payment_credit_notes_amount</code> depending on its <code>status</code> at the time of credit note creation.</p>",
        "operationId": "PostCreditNotes"
      }
    },
    "/v1/credit_notes/preview": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note.",
            "in": "query",
            "name": "amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.",
            "in": "query",
            "name": "credit_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.",
            "format": "unix-time",
            "in": "query",
            "name": "effective_at",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.",
            "enum": [
              "credit_note",
              "none"
            ],
            "in": "query",
            "name": "email_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "ID of the invoice.",
            "in": "query",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "Line items that make up the credit note.",
            "in": "query",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice_line_item": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_amounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "tax_rate": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "taxable_amount": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "amount",
                          "tax_rate",
                          "taxable_amount"
                        ],
                        "title": "tax_amount_with_tax_rate_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "type": {
                  "enum": [
                    "custom_line_item",
                    "invoice_line_item"
                  ],
                  "type": "string"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "credit_note_line_item_params",
              "type": "object"
            },
            "name": "lines",
            "required": false,
            "type": "array"
          },
          {
            "description": "The credit note's memo appears on the credit note PDF.",
            "in": "query",
            "maxLength": 5000,
            "name": "memo",
            "required": false,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "query",
            "name": "metadata",
            "required": false,
            "type": "object"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.",
            "in": "query",
            "name": "out_of_band_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
            "enum": [
              "duplicate",
              "fraudulent",
              "order_change",
              "product_unsatisfactory"
            ],
            "in": "query",
            "name": "reason",
            "required": false,
            "type": "string"
          },
          {
            "description": "ID of an existing refund to link this credit note to.",
            "in": "query",
            "name": "refund",
            "required": false,
            "type": "string"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.",
            "in": "query",
            "name": "refund_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.",
            "in": "query",
            "name": "shipping_cost",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/credit_note"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Get a preview of a credit note without creating it.</p>",
        "operationId": "GetCreditNotesPreview"
      }
    },
    "/v1/credit_notes/preview/lines": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note.",
            "in": "query",
            "name": "amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.",
            "in": "query",
            "name": "credit_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.",
            "format": "unix-time",
            "in": "query",
            "name": "effective_at",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.",
            "enum": [
              "credit_note",
              "none"
            ],
            "in": "query",
            "name": "email_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "ID of the invoice.",
            "in": "query",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Line items that make up the credit note.",
            "in": "query",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice_line_item": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_amounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "tax_rate": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "taxable_amount": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "amount",
                          "tax_rate",
                          "taxable_amount"
                        ],
                        "title": "tax_amount_with_tax_rate_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "type": {
                  "enum": [
                    "custom_line_item",
                    "invoice_line_item"
                  ],
                  "type": "string"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "credit_note_line_item_params",
              "type": "object"
            },
            "name": "lines",
            "required": false,
            "type": "array"
          },
          {
            "description": "The credit note's memo appears on the credit note PDF.",
            "in": "query",
            "maxLength": 5000,
            "name": "memo",
            "required": false,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "query",
            "name": "metadata",
            "required": false,
            "type": "object"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.",
            "in": "query",
            "name": "out_of_band_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
            "enum": [
              "duplicate",
              "fraudulent",
              "order_change",
              "product_unsatisfactory"
            ],
            "in": "query",
            "name": "reason",
            "required": false,
            "type": "string"
          },
          {
            "description": "ID of an existing refund to link this credit note to.",
            "in": "query",
            "name": "refund",
            "required": false,
            "type": "string"
          },
          {
            "description": "The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.",
            "in": "query",
            "name": "refund_amount",
            "required": false,
            "type": "integer"
          },
          {
            "description": "When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.",
            "in": "query",
            "name": "shipping_cost",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/credit_note_line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CreditNoteLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a credit note preview, you’ll get a <strong>lines</strong> property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetCreditNotesPreviewLines"
      }
    },
    "/v1/credit_notes/{credit_note}/lines": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "credit_note",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/credit_note_line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CreditNoteLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a credit note, you’ll get a <strong>lines</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetCreditNotesCreditNoteLines"
      }
    },
    "/v1/credit_notes/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/credit_note"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the credit note object with the given identifier.</p>",
        "operationId": "GetCreditNotesId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Credit note memo.",
            "in": "formData",
            "maxLength": 5000,
            "name": "memo",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/credit_note"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing credit note.</p>",
        "operationId": "PostCreditNotesId"
      }
    },
    "/v1/credit_notes/{id}/void": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/credit_note"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Marks a credit note as void. Learn more about <a href=\"/docs/billing/invoices/credit-notes#voiding\">voiding credit notes</a>.</p>",
        "operationId": "PostCreditNotesIdVoid"
      }
    },
    "/v1/customer_sessions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Configuration for each component. Exactly 1 component must be enabled.",
            "in": "formData",
            "name": "components",
            "required": true,
            "type": "object"
          },
          {
            "description": "The ID of an existing customer for which to create the Customer Session.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a Customer Session object that includes a single-use client secret that you can use on your front-end to grant client-side API access for certain customer resources.</p>",
        "operationId": "PostCustomerSessions"
      }
    },
    "/v1/customers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return customers that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.",
            "in": "query",
            "maxLength": 512,
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Provides a list of customers that are associated with the specified test clock. The response will not include customers with test clocks if this parameter is not set.",
            "in": "query",
            "maxLength": 5000,
            "name": "test_clock",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/customer"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/customers",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CustomerResourceCustomerList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>",
        "operationId": "GetCustomers"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The customer's address.",
            "in": "formData",
            "name": "address"
          },
          {
            "description": "An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
            "in": "formData",
            "name": "balance",
            "type": "integer"
          },
          {
            "description": "Balance information and default balance settings for this customer.",
            "in": "formData",
            "name": "cash_balance",
            "type": "object"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
            "in": "formData",
            "maxLength": 512,
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "invoice_prefix",
            "type": "string"
          },
          {
            "description": "Default invoice settings for this customer.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The customer's full name or business name.",
            "in": "formData",
            "maxLength": 256,
            "name": "name",
            "type": "string"
          },
          {
            "description": "The sequence to be used on the customer's next invoice. Defaults to 1.",
            "in": "formData",
            "name": "next_invoice_sequence",
            "type": "integer"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "The customer's phone number.",
            "in": "formData",
            "maxLength": 20,
            "name": "phone",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Customer's preferred languages, ordered by preference.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "preferred_locales",
            "type": "array"
          },
          {
            "description": "The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "The customer's shipping information. Appears on invoices emailed to this customer.",
            "in": "formData",
            "name": "shipping"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Tax details about the customer.",
            "in": "formData",
            "name": "tax",
            "type": "object"
          },
          {
            "description": "The customer's tax exemption. One of `none`, `exempt`, or `reverse`.",
            "enum": [
              "",
              "exempt",
              "none",
              "reverse"
            ],
            "in": "formData",
            "name": "tax_exempt",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The customer's tax IDs.",
            "in": "formData",
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "ad_nrt",
                    "ae_trn",
                    "ar_cuit",
                    "au_abn",
                    "au_arn",
                    "bg_uic",
                    "bh_vat",
                    "bo_tin",
                    "br_cnpj",
                    "br_cpf",
                    "ca_bn",
                    "ca_gst_hst",
                    "ca_pst_bc",
                    "ca_pst_mb",
                    "ca_pst_sk",
                    "ca_qst",
                    "ch_uid",
                    "ch_vat",
                    "cl_tin",
                    "cn_tin",
                    "co_nit",
                    "cr_tin",
                    "de_stn",
                    "do_rcn",
                    "ec_ruc",
                    "eg_tin",
                    "es_cif",
                    "eu_oss_vat",
                    "eu_vat",
                    "gb_vat",
                    "ge_vat",
                    "hk_br",
                    "hr_oib",
                    "hu_tin",
                    "id_npwp",
                    "il_vat",
                    "in_gst",
                    "is_vat",
                    "jp_cn",
                    "jp_rn",
                    "jp_trn",
                    "ke_pin",
                    "kr_brn",
                    "kz_bin",
                    "li_uid",
                    "mx_rfc",
                    "my_frp",
                    "my_itn",
                    "my_sst",
                    "ng_tin",
                    "no_vat",
                    "no_voec",
                    "nz_gst",
                    "om_vat",
                    "pe_ruc",
                    "ph_tin",
                    "ro_tin",
                    "rs_pib",
                    "ru_inn",
                    "ru_kpp",
                    "sa_vat",
                    "sg_gst",
                    "sg_uen",
                    "si_tin",
                    "sv_nit",
                    "th_vat",
                    "tr_tin",
                    "tw_vat",
                    "ua_vat",
                    "us_ein",
                    "uy_ruc",
                    "ve_rif",
                    "vn_tin",
                    "za_vat"
                  ],
                  "maxLength": 5000,
                  "type": "string",
                  "x-stripeBypassValidation": true
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "title": "data_params",
              "type": "object"
            },
            "name": "tax_id_data",
            "type": "array"
          },
          {
            "description": "ID of the test clock to attach to the customer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "test_clock",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new customer object.</p>",
        "operationId": "PostCustomers"
      }
    },
    "/v1/customers/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for customers](https://stripe.com/docs/search#query-fields-for-customers).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/customer"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for customers you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetCustomersSearch"
      }
    },
    "/v1/customers/{customer}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_customer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>",
        "operationId": "DeleteCustomersCustomer"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Customer object.</p>",
        "operationId": "GetCustomersCustomer"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "The customer's address.",
            "in": "formData",
            "name": "address"
          },
          {
            "description": "An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
            "in": "formData",
            "name": "balance",
            "type": "integer"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Balance information and default balance settings for this customer.",
            "in": "formData",
            "name": "cash_balance",
            "type": "object"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "ID of Alipay account to make the customer's new default for invoice payments.",
            "in": "formData",
            "maxLength": 500,
            "name": "default_alipay_account",
            "type": "string"
          },
          {
            "description": "ID of bank account to make the customer's new default for invoice payments.",
            "in": "formData",
            "maxLength": 500,
            "name": "default_bank_account",
            "type": "string"
          },
          {
            "description": "ID of card to make the customer's new default for invoice payments.",
            "in": "formData",
            "maxLength": 500,
            "name": "default_card",
            "type": "string"
          },
          {
            "description": "If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method) parameter.\n\nProvide the ID of a payment source already attached to this customer to make it this customer's default payment source.\n\nIf you want to add a new payment source and make it the default, see the [source](https://stripe.com/docs/api/customers/update#update_customer-source) property.",
            "in": "formData",
            "maxLength": 500,
            "name": "default_source",
            "type": "string"
          },
          {
            "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
            "in": "formData",
            "maxLength": 512,
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "invoice_prefix",
            "type": "string"
          },
          {
            "description": "Default invoice settings for this customer.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The customer's full name or business name.",
            "in": "formData",
            "maxLength": 256,
            "name": "name",
            "type": "string"
          },
          {
            "description": "The sequence to be used on the customer's next invoice. Defaults to 1.",
            "in": "formData",
            "name": "next_invoice_sequence",
            "type": "integer"
          },
          {
            "description": "The customer's phone number.",
            "in": "formData",
            "maxLength": 20,
            "name": "phone",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Customer's preferred languages, ordered by preference.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "preferred_locales",
            "type": "array"
          },
          {
            "description": "The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "The customer's shipping information. Appears on invoices emailed to this customer.",
            "in": "formData",
            "name": "shipping"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Tax details about the customer.",
            "in": "formData",
            "name": "tax",
            "type": "object"
          },
          {
            "description": "The customer's tax exemption. One of `none`, `exempt`, or `reverse`.",
            "enum": [
              "",
              "exempt",
              "none",
              "reverse"
            ],
            "in": "formData",
            "name": "tax_exempt",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>\n\n<p>This request accepts mostly the same arguments as the customer creation call.</p>",
        "operationId": "PostCustomersCustomer"
      }
    },
    "/v1/customers/{customer}/balance_transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/customer_balance_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CustomerBalanceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of transactions that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>",
        "operationId": "GetCustomersCustomerBalanceTransactions"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "The integer amount in **cents (or local equivalent)** to apply to the customer's credit balance.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Specifies the [`invoice_credit_balance`](https://stripe.com/docs/api/customers/object#customer_object-invoice_credit_balance) that this transaction will apply to. If the customer's `currency` is not set, it will be updated to this value.",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 350,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an immutable transaction that updates the customer’s credit <a href=\"/docs/billing/customer/balance\">balance</a>.</p>",
        "operationId": "PostCustomersCustomerBalanceTransactions"
      }
    },
    "/v1/customers/{customer}/balance_transactions/{transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a specific customer balance transaction that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>",
        "operationId": "GetCustomersCustomerBalanceTransactionsTransaction"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 350,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Most credit balance transaction fields are immutable, but you may update its <code>description</code> and <code>metadata</code>.</p>",
        "operationId": "PostCustomersCustomerBalanceTransactionsTransaction"
      }
    },
    "/v1/customers/{customer}/bank_accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/bank_account"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>",
        "operationId": "GetCustomersCustomerBankAccounts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.",
            "in": "formData",
            "maxLength": 5000,
            "name": "alipay_account",
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Please refer to full [documentation](https://stripe.com/docs/api) instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
        "operationId": "PostCustomersCustomerBankAccounts"
      }
    },
    "/v1/customers/{customer}/bank_accounts/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a specified source for a given customer.</p>",
        "operationId": "DeleteCustomersCustomerBankAccountsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/bank_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>",
        "operationId": "GetCustomersCustomerBankAccountsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the person or business that owns the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_name",
            "type": "string"
          },
          {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_type",
            "type": "string"
          },
          {
            "description": "City/District/Suburb/Town/Village.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_city",
            "type": "string"
          },
          {
            "description": "Billing address country, if provided when creating card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_country",
            "type": "string"
          },
          {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line1",
            "type": "string"
          },
          {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line2",
            "type": "string"
          },
          {
            "description": "State/County/Province/Region.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_state",
            "type": "string"
          },
          {
            "description": "ZIP or postal code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_zip",
            "type": "string"
          },
          {
            "description": "Two digit number representing the card’s expiration month.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_month",
            "type": "string"
          },
          {
            "description": "Four digit number representing the card’s expiration year.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_year",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Cardholder name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "owner",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update a specified source for a given customer.</p>",
        "operationId": "PostCustomersCustomerBankAccountsId"
      }
    },
    "/v1/customers/{customer}/bank_accounts/{id}/verify": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
            "in": "formData",
            "items": {
              "type": "integer"
            },
            "name": "amounts",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/bank_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Verify a specified bank account for a given customer.</p>",
        "operationId": "PostCustomersCustomerBankAccountsIdVerify"
      }
    },
    "/v1/customers/{customer}/cards": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/card"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CardList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the <code>Customer</code> object.\nIf you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>",
        "operationId": "GetCustomersCustomerCards"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.",
            "in": "formData",
            "maxLength": 5000,
            "name": "alipay_account",
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Please refer to full [documentation](https://stripe.com/docs/api) instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
        "operationId": "PostCustomersCustomerCards"
      }
    },
    "/v1/customers/{customer}/cards/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a specified source for a given customer.</p>",
        "operationId": "DeleteCustomersCustomerCardsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>",
        "operationId": "GetCustomersCustomerCardsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the person or business that owns the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_name",
            "type": "string"
          },
          {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_type",
            "type": "string"
          },
          {
            "description": "City/District/Suburb/Town/Village.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_city",
            "type": "string"
          },
          {
            "description": "Billing address country, if provided when creating card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_country",
            "type": "string"
          },
          {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line1",
            "type": "string"
          },
          {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line2",
            "type": "string"
          },
          {
            "description": "State/County/Province/Region.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_state",
            "type": "string"
          },
          {
            "description": "ZIP or postal code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_zip",
            "type": "string"
          },
          {
            "description": "Two digit number representing the card’s expiration month.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_month",
            "type": "string"
          },
          {
            "description": "Four digit number representing the card’s expiration year.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_year",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Cardholder name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "owner",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update a specified source for a given customer.</p>",
        "operationId": "PostCustomersCustomerCardsId"
      }
    },
    "/v1/customers/{customer}/cash_balance": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/cash_balance"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a customer’s cash balance.</p>",
        "operationId": "GetCustomersCustomerCashBalance"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A hash of settings for this cash balance.",
            "in": "formData",
            "name": "settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/cash_balance"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Changes the settings on a customer’s cash balance.</p>",
        "operationId": "PostCustomersCustomerCashBalance"
      }
    },
    "/v1/customers/{customer}/cash_balance_transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "Customers with certain payments enabled have a cash balance, representing funds that were paid\nby the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions\nrepresent when funds are moved into or out of this balance. This includes funding by the customer, allocation\nto payments, and refunds to the customer.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/customer_cash_balance_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CustomerCashBalanceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of transactions that modified the customer’s <a href=\"/docs/payments/customer-balance\">cash balance</a>.</p>",
        "operationId": "GetCustomersCustomerCashBalanceTransactions"
      }
    },
    "/v1/customers/{customer}/cash_balance_transactions/{transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_cash_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a specific cash balance transaction, which updated the customer’s <a href=\"/docs/payments/customer-balance\">cash balance</a>.</p>",
        "operationId": "GetCustomersCustomerCashBalanceTransactionsTransaction"
      }
    },
    "/v1/customers/{customer}/discount": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_discount"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Removes the currently applied discount on a customer.</p>",
        "operationId": "DeleteCustomersCustomerDiscount"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/discount"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "",
        "operationId": "GetCustomersCustomerDiscount"
      }
    },
    "/v1/customers/{customer}/funding_instructions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Additional parameters for `bank_transfer` funding types",
            "in": "formData",
            "name": "bank_transfer",
            "required": true,
            "type": "object"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The `funding_type` to get the instructions for.",
            "enum": [
              "bank_transfer"
            ],
            "in": "formData",
            "name": "funding_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/funding_instructions"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve funding instructions for a customer cash balance. If funding instructions do not yet exist for the customer, new\nfunding instructions will be created. If funding instructions have already been created for a given customer, the same\nfunding instructions will be retrieved. In other words, we will return the same funding instructions each time.</p>",
        "operationId": "PostCustomersCustomerFundingInstructions"
      }
    },
    "/v1/customers/{customer}/payment_methods": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.",
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "in": "query",
            "name": "allow_redisplay",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.",
            "enum": [
              "acss_debit",
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "amazon_pay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "klarna",
              "konbini",
              "link",
              "mobilepay",
              "multibanco",
              "oxxo",
              "p24",
              "paynow",
              "paypal",
              "pix",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "swish",
              "twint",
              "us_bank_account",
              "wechat_pay",
              "zip"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_method"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "CustomerPaymentMethodResourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of PaymentMethods for a given Customer</p>",
        "operationId": "GetCustomersCustomerPaymentMethods"
      }
    },
    "/v1/customers/{customer}/payment_methods/{payment_method}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a PaymentMethod object for a given Customer.</p>",
        "operationId": "GetCustomersCustomerPaymentMethodsPaymentMethod"
      }
    },
    "/v1/customers/{customer}/sources": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter sources according to a particular object type.",
            "in": "query",
            "maxLength": 5000,
            "name": "object",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List sources for a specified customer.</p>",
        "operationId": "GetCustomersCustomerSources"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.",
            "in": "formData",
            "maxLength": 5000,
            "name": "alipay_account",
            "type": "string"
          },
          {
            "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.",
            "in": "formData",
            "name": "bank_account"
          },
          {
            "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Please refer to full [documentation](https://stripe.com/docs/api) instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
        "operationId": "PostCustomersCustomerSources"
      }
    },
    "/v1/customers/{customer}/sources/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a specified source for a given customer.</p>",
        "operationId": "DeleteCustomersCustomerSourcesId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 500,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a specified source for a given customer.</p>",
        "operationId": "GetCustomersCustomerSourcesId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the person or business that owns the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_name",
            "type": "string"
          },
          {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "account_holder_type",
            "type": "string"
          },
          {
            "description": "City/District/Suburb/Town/Village.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_city",
            "type": "string"
          },
          {
            "description": "Billing address country, if provided when creating card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_country",
            "type": "string"
          },
          {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line1",
            "type": "string"
          },
          {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_line2",
            "type": "string"
          },
          {
            "description": "State/County/Province/Region.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_state",
            "type": "string"
          },
          {
            "description": "ZIP or postal code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "address_zip",
            "type": "string"
          },
          {
            "description": "Two digit number representing the card’s expiration month.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_month",
            "type": "string"
          },
          {
            "description": "Four digit number representing the card’s expiration year.",
            "in": "formData",
            "maxLength": 5000,
            "name": "exp_year",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Cardholder name.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "owner",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update a specified source for a given customer.</p>",
        "operationId": "PostCustomersCustomerSourcesId"
      }
    },
    "/v1/customers/{customer}/sources/{id}/verify": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
            "in": "formData",
            "items": {
              "type": "integer"
            },
            "name": "amounts",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/bank_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Verify a specified bank account for a given customer.</p>",
        "operationId": "PostCustomersCustomerSourcesIdVerify"
      }
    },
    "/v1/customers/{customer}/subscriptions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can see a list of the customer’s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>",
        "operationId": "GetCustomersCustomerSubscriptions"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {
                  "items": {
                    "properties": {
                      "coupon": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "promotion_code": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data_with_negative_amounts",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "add_invoice_item_entry",
              "type": "object"
            },
            "name": "add_invoice_items",
            "type": "array"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.",
            "format": "unix-time",
            "in": "formData",
            "name": "backdate_start_date",
            "type": "integer"
          },
          {
            "description": "A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.",
            "format": "unix-time",
            "in": "formData",
            "name": "billing_cycle_anchor",
            "type": "integer",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.",
            "format": "unix-time",
            "in": "formData",
            "name": "cancel_at",
            "type": "integer"
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`.",
            "in": "formData",
            "name": "cancel_at_period_end",
            "type": "boolean"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_source",
            "type": "string"
          },
          {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "in": "formData",
            "items": {
              "properties": {
                "billing_thresholds": {},
                "discounts": {},
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "subscription_item_create_params",
              "type": "object"
            },
            "name": "items",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "Only applies to subscriptions with `collection_method=charge_automatically`.\n\nUse `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n\n`pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.\n\nSubscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "Payment settings to pass to invoices created by the subscription.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "in": "formData",
            "name": "pending_invoice_item_interval"
          },
          {
            "description": "The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_end"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_from_plan",
            "type": "boolean"
          },
          {
            "description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_period_days",
            "type": "integer"
          },
          {
            "description": "Settings related to subscription trials.",
            "in": "formData",
            "name": "trial_settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new subscription on an existing customer.</p>",
        "operationId": "PostCustomersCustomerSubscriptions"
      }
    },
    "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Can be set to `true` if `at_period_end` is not set to `true`. Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items.",
            "in": "formData",
            "name": "invoice_now",
            "type": "boolean"
          },
          {
            "description": "Can be set to `true` if `at_period_end` is not set to `true`. Will generate a proration invoice item that credits remaining unused time until the subscription period end.",
            "in": "formData",
            "name": "prorate",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
        "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the subscription with the given ID.</p>",
        "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {
                  "items": {
                    "properties": {
                      "coupon": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "promotion_code": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data_with_negative_amounts",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "add_invoice_item_entry",
              "type": "object"
            },
            "name": "add_invoice_items",
            "type": "array"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "now",
              "unchanged"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "billing_cycle_anchor",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.",
            "in": "formData",
            "name": "cancel_at"
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`.",
            "in": "formData",
            "name": "cancel_at_period_end",
            "type": "boolean"
          },
          {
            "description": "Details about why this subscription was cancelled",
            "in": "formData",
            "name": "cancellation_details",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "name": "default_source"
          },
          {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "in": "formData",
            "items": {
              "properties": {
                "billing_thresholds": {},
                "clear_usage": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "discounts": {},
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {},
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "subscription_item_update_params",
              "type": "object"
            },
            "name": "items",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).",
            "in": "formData",
            "name": "pause_collection"
          },
          {
            "description": "Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n\nUse `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "Payment settings to pass to invoices created by the subscription.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "in": "formData",
            "name": "pending_invoice_item_interval"
          },
          {
            "description": "The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#upcoming_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          },
          {
            "description": "If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.",
            "in": "formData",
            "name": "transfer_data"
          },
          {
            "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`.",
            "in": "formData",
            "name": "trial_end"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_from_plan",
            "type": "boolean"
          },
          {
            "description": "Settings related to subscription trials.",
            "in": "formData",
            "name": "trial_settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
        "operationId": "PostCustomersCustomerSubscriptionsSubscriptionExposedId"
      }
    },
    "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_discount"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Removes the currently applied discount on a customer.</p>",
        "operationId": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/discount"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "",
        "operationId": "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount"
      }
    },
    "/v1/customers/{customer}/tax_ids": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of tax IDs for a customer.</p>",
        "operationId": "GetCustomersCustomerTaxIds"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`",
            "enum": [
              "ad_nrt",
              "ae_trn",
              "ar_cuit",
              "au_abn",
              "au_arn",
              "bg_uic",
              "bh_vat",
              "bo_tin",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_uid",
              "ch_vat",
              "cl_tin",
              "cn_tin",
              "co_nit",
              "cr_tin",
              "de_stn",
              "do_rcn",
              "ec_ruc",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hr_oib",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "kz_bin",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "ng_tin",
              "no_vat",
              "no_voec",
              "nz_gst",
              "om_vat",
              "pe_ruc",
              "ph_tin",
              "ro_tin",
              "rs_pib",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "sv_nit",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "us_ein",
              "uy_ruc",
              "ve_rif",
              "vn_tin",
              "za_vat"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "type",
            "required": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Value of the tax ID.",
            "in": "formData",
            "name": "value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>tax_id</code> object for a customer.</p>",
        "operationId": "PostCustomersCustomerTaxIds"
      }
    },
    "/v1/customers/{customer}/tax_ids/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an existing <code>tax_id</code> object.</p>",
        "operationId": "DeleteCustomersCustomerTaxIdsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the <code>tax_id</code> object with the given identifier.</p>",
        "operationId": "GetCustomersCustomerTaxIdsId"
      }
    },
    "/v1/disputes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return disputes associated to the charge specified by this charge ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "charge",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return disputes that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return disputes associated to the PaymentIntent specified by this PaymentIntent ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/dispute"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/disputes",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "DisputeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your disputes.</p>",
        "operationId": "GetDisputes"
      }
    },
    "/v1/disputes/{dispute}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the dispute with the given ID.</p>",
        "operationId": "GetDisputesDispute"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
            "in": "formData",
            "name": "evidence",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
            "in": "formData",
            "name": "submit",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>\n\n<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>",
        "operationId": "PostDisputesDispute"
      }
    },
    "/v1/disputes/{dispute}/close": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>\n\n<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>",
        "operationId": "PostDisputesDisputeClose"
      }
    },
    "/v1/entitlements/active_entitlements": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the customer.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/entitlements.active_entitlement"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "EntitlementsResourceCustomerEntitlementList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of active entitlements for a customer</p>",
        "operationId": "GetEntitlementsActiveEntitlements"
      }
    },
    "/v1/entitlements/active_entitlements/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The ID of the entitlement.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/entitlements.active_entitlement"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve an active entitlement</p>",
        "operationId": "GetEntitlementsActiveEntitlementsId"
      }
    },
    "/v1/entitlements/features": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If set, filter results to only include features with the given archive status.",
            "in": "query",
            "name": "archived",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If set, filter results to only include features with the given lookup_key.",
            "in": "query",
            "maxLength": 5000,
            "name": "lookup_key",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/entitlements.feature"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/entitlements/features",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "EntitlementsResourceFeatureList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of features</p>",
        "operationId": "GetEntitlementsFeatures"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A unique key you provide as your own system identifier. This may be up to 80 characters.",
            "in": "formData",
            "maxLength": 80,
            "name": "lookup_key",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The feature's name, for your own purpose, not meant to be displayable to the customer.",
            "in": "formData",
            "maxLength": 80,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/entitlements.feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a feature</p>",
        "operationId": "PostEntitlementsFeatures"
      }
    },
    "/v1/entitlements/features/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The ID of the feature.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/entitlements.feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a feature</p>",
        "operationId": "GetEntitlementsFeaturesId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Inactive features cannot be attached to new products and will not be returned from the features list endpoint.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The feature's name, for your own purpose, not meant to be displayable to the customer.",
            "in": "formData",
            "maxLength": 80,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/entitlements.feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update a feature’s metadata or permanently deactivate it.</p>",
        "operationId": "PostEntitlementsFeaturesId"
      }
    },
    "/v1/ephemeral_keys": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the Customer you'd like to modify using the resulting ephemeral key.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The ID of the Issuing Card you'd like to access using the resulting ephemeral key.",
            "in": "formData",
            "maxLength": 5000,
            "name": "issuing_card",
            "type": "string"
          },
          {
            "description": "A single-use token, created by Stripe.js, used for creating ephemeral keys for Issuing Cards without exchanging sensitive information.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nonce",
            "type": "string"
          },
          {
            "description": "The ID of the Identity VerificationSession you'd like to access using the resulting ephemeral key",
            "in": "formData",
            "maxLength": 5000,
            "name": "verification_session",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/ephemeral_key"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a short-lived API key for a given resource.</p>",
        "operationId": "PostEphemeralKeys"
      }
    },
    "/v1/ephemeral_keys/{key}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "key",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/ephemeral_key"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Invalidates a short-lived API key for a given resource.</p>",
        "operationId": "DeleteEphemeralKeysKey"
      }
    },
    "/v1/events": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return events that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.",
            "in": "query",
            "name": "delivery_success",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.",
            "in": "query",
            "maxLength": 5000,
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "types",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/event"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/events",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "NotificationEventList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href=\"https://docs.stripe.com/api/events/object\">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>",
        "operationId": "GetEvents"
      }
    },
    "/v1/events/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/event"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an event if it was created in the last 30 days. Supply the unique identifier of the event, which you might have received in a webhook.</p>",
        "operationId": "GetEventsId"
      }
    },
    "/v1/exchange_rates": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/exchange_rate"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/exchange_rates",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExchangeRateList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>",
        "operationId": "GetExchangeRates"
      }
    },
    "/v1/exchange_rates/{rate_id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "rate_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/exchange_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the exchange rates from the given currency to every supported currency.</p>",
        "operationId": "GetExchangeRatesRateId"
      }
    },
    "/v1/file_links": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return links that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Filter links by their expiration status. By default, Stripe returns all links.",
            "in": "query",
            "name": "expired",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Only return links for the given file.",
            "in": "query",
            "maxLength": 5000,
            "name": "file",
            "required": false,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/file_link"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/file_links",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FileResourceFileLinkList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of file links.</p>",
        "operationId": "GetFileLinks"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The link isn't usable after this future timestamp.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "The ID of the file. The file's `purpose` must be one of the following: `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document_downloadable`, `issuing_regulatory_reporting`, `pci_document`, `selfie`, `sigma_scheduled_query`, `tax_document_user_upload`, or `terminal_reader_splashscreen`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "file",
            "required": true,
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/file_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new file link object.</p>",
        "operationId": "PostFileLinks"
      }
    },
    "/v1/file_links/{link}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "link",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/file_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the file link with the given ID.</p>",
        "operationId": "GetFileLinksLink"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "link",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A future timestamp after which the link will no longer be usable, or `now` to expire the link immediately.",
            "in": "formData",
            "name": "expires_at"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/file_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>",
        "operationId": "PostFileLinksLink"
      }
    },
    "/v1/files": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return files that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter queries by the file purpose. If you don't provide a purpose, the queries return unfiltered files.",
            "enum": [
              "account_requirement",
              "additional_verification",
              "business_icon",
              "business_logo",
              "customer_signature",
              "dispute_evidence",
              "document_provider_identity_document",
              "finance_report_run",
              "identity_document",
              "identity_document_downloadable",
              "issuing_regulatory_reporting",
              "pci_document",
              "selfie",
              "sigma_scheduled_query",
              "tax_document_user_upload",
              "terminal_reader_splashscreen"
            ],
            "in": "query",
            "maxLength": 5000,
            "name": "purpose",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/file"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/files",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FileResourceFileList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of the files that your account has access to. Stripe sorts and returns the files by their creation dates, placing the most recently created files at the top.</p>",
        "operationId": "GetFiles"
      },
      "post": {
        "servers": [
          {
            "url": "https://files.stripe.com/"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A file to upload. Make sure that the specifications follow RFC 2388, which defines file transfers for the `multipart/form-data` protocol.",
            "format": "binary",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional parameters that automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.",
            "in": "formData",
            "name": "file_link_data",
            "type": "object"
          },
          {
            "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
            "enum": [
              "account_requirement",
              "additional_verification",
              "business_icon",
              "business_logo",
              "customer_signature",
              "dispute_evidence",
              "identity_document",
              "issuing_regulatory_reporting",
              "pci_document",
              "tax_document_user_upload",
              "terminal_reader_splashscreen"
            ],
            "in": "formData",
            "name": "purpose",
            "required": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/file"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To upload a file to Stripe, you need to send a request of type <code>multipart/form-data</code>. Include the file you want to upload in the request, and the parameters for creating a file.</p>\n\n<p>All of Stripe’s officially supported Client libraries support sending <code>multipart/form-data</code>.</p>",
        "operationId": "PostFiles"
      }
    },
    "/v1/files/{file}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "file",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/file"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing file object. After you supply a unique file ID, Stripe returns the corresponding file object. Learn how to <a href=\"/docs/file-upload#download-file-contents\">access file contents</a>.</p>",
        "operationId": "GetFilesFile"
      }
    },
    "/v1/financial_connections/accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive.",
            "in": "query",
            "name": "account_holder",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If present, only return accounts that were collected as part of the given session.",
            "in": "query",
            "maxLength": 5000,
            "name": "session",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/financial_connections.account"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/financial_connections/accounts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankConnectionsResourceLinkedAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Financial Connections <code>Account</code> objects.</p>",
        "operationId": "GetFinancialConnectionsAccounts"
      }
    },
    "/v1/financial_connections/accounts/{account}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an Financial Connections <code>Account</code>.</p>",
        "operationId": "GetFinancialConnectionsAccountsAccount"
      }
    },
    "/v1/financial_connections/accounts/{account}/disconnect": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Disables your access to a Financial Connections <code>Account</code>. You will no longer be able to access data associated with the account (e.g. balances, transactions).</p>",
        "operationId": "PostFinancialConnectionsAccountsAccountDisconnect"
      }
    },
    "/v1/financial_connections/accounts/{account}/owners": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The ID of the ownership object to fetch owners from.",
            "in": "query",
            "maxLength": 5000,
            "name": "ownership",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/financial_connections.account_owner"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankConnectionsResourceOwnerList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all owners for a given <code>Account</code></p>",
        "operationId": "GetFinancialConnectionsAccountsAccountOwners"
      }
    },
    "/v1/financial_connections/accounts/{account}/refresh": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of account features that you would like to refresh.",
            "in": "formData",
            "items": {
              "enum": [
                "balance",
                "ownership",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "features",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Refreshes the data associated with a Financial Connections <code>Account</code>.</p>",
        "operationId": "PostFinancialConnectionsAccountsAccountRefresh"
      }
    },
    "/v1/financial_connections/accounts/{account}/subscribe": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of account features to which you would like to subscribe.",
            "in": "formData",
            "items": {
              "enum": [
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "features",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Subscribes to periodic refreshes of data associated with a Financial Connections <code>Account</code>.</p>",
        "operationId": "PostFinancialConnectionsAccountsAccountSubscribe"
      }
    },
    "/v1/financial_connections/accounts/{account}/unsubscribe": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of account features from which you would like to unsubscribe.",
            "in": "formData",
            "items": {
              "enum": [
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "features",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Unsubscribes from periodic refreshes of data associated with a Financial Connections <code>Account</code>.</p>",
        "operationId": "PostFinancialConnectionsAccountsAccountUnsubscribe"
      }
    },
    "/v1/financial_connections/sessions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The account holder to link accounts for.",
            "in": "formData",
            "name": "account_holder",
            "required": true,
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Filters to restrict the kinds of accounts to collect.",
            "in": "formData",
            "name": "filters",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "List of data features that you would like to request access to.\n\nPossible values are `balances`, `transactions`, `ownership`, and `payment_method`.",
            "in": "formData",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "payment_method",
                "transactions"
              ],
              "maxLength": 5000,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "permissions",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "List of data features that you would like to retrieve upon account creation.",
            "in": "formData",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "prefetch",
            "type": "array"
          },
          {
            "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
            "in": "formData",
            "maxLength": 5000,
            "name": "return_url",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To launch the Financial Connections authorization flow, create a <code>Session</code>. The session’s <code>client_secret</code> can be used to launch the flow using Stripe.js.</p>",
        "operationId": "PostFinancialConnectionsSessions"
      }
    },
    "/v1/financial_connections/sessions/{session}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Financial Connections <code>Session</code></p>",
        "operationId": "GetFinancialConnectionsSessionsSession"
      }
    },
    "/v1/financial_connections/transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the Stripe account whose transactions will be retrieved.",
            "in": "query",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter on the list based on the object `transacted_at` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with the following options:",
            "in": "query",
            "name": "transacted_at",
            "required": false
          },
          {
            "description": "A filter on the list based on the object `transaction_refresh` field. The value can be a dictionary with the following options:",
            "in": "query",
            "name": "transaction_refresh",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/financial_connections.transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/financial_connections/transactions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankConnectionsResourceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Financial Connections <code>Transaction</code> objects.</p>",
        "operationId": "GetFinancialConnectionsTransactions"
      }
    },
    "/v1/financial_connections/transactions/{transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Financial Connections <code>Transaction</code></p>",
        "operationId": "GetFinancialConnectionsTransactionsTransaction"
      }
    },
    "/v1/forwarding/requests": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Similar to other List endpoints, filters results based on created timestamp. You can pass gt, gte, lt, and lte timestamp values.",
            "in": "query",
            "name": "created",
            "required": false,
            "type": "object"
          },
          {
            "description": "A pagination cursor to fetch the previous page of the list. The value must be a ForwardingRequest ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination cursor to fetch the next page of the list. The value must be a ForwardingRequest ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "List of ForwardingRequest data.",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/forwarding.request"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ForwardingRequestList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all ForwardingRequest objects.</p>",
        "operationId": "GetForwardingRequests"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The field kinds to be replaced in the forwarded request.",
            "in": "formData",
            "items": {
              "enum": [
                "card_cvc",
                "card_expiry",
                "card_number",
                "cardholder_name"
              ],
              "type": "string"
            },
            "name": "replacements",
            "required": true,
            "type": "array"
          },
          {
            "description": "The request body and headers to be sent to the destination endpoint.",
            "in": "formData",
            "name": "request",
            "type": "object"
          },
          {
            "description": "The destination URL for the forwarded request. Must be supported by the config.",
            "in": "formData",
            "maxLength": 5000,
            "name": "url",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/forwarding.request"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a ForwardingRequest object.</p>",
        "operationId": "PostForwardingRequests"
      }
    },
    "/v1/forwarding/requests/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/forwarding.request"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a ForwardingRequest object.</p>",
        "operationId": "GetForwardingRequestsId"
      }
    },
    "/v1/identity/verification_reports": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.",
            "in": "query",
            "maxLength": 5000,
            "name": "client_reference_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return VerificationReports that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return VerificationReports of this type",
            "enum": [
              "document",
              "id_number"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "verification_session",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/identity.verification_report"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/identity/verification_reports",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "GelatoVerificationReportList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List all verification reports.</p>",
        "operationId": "GetIdentityVerificationReports"
      }
    },
    "/v1/identity/verification_reports/{report}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "report",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_report"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an existing VerificationReport</p>",
        "operationId": "GetIdentityVerificationReportsReport"
      }
    },
    "/v1/identity/verification_sessions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.",
            "in": "query",
            "maxLength": 5000,
            "name": "client_reference_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return VerificationSessions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maxLength": 5000,
            "name": "related_customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work).",
            "enum": [
              "canceled",
              "processing",
              "requires_input",
              "verified"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/identity.verification_session"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/identity/verification_sessions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "GelatoVerificationSessionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of VerificationSessions</p>",
        "operationId": "GetIdentityVerificationSessions"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.",
            "in": "formData",
            "maxLength": 5000,
            "name": "client_reference_id",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "A set of options for the session’s verification checks.",
            "in": "formData",
            "name": "options",
            "type": "object"
          },
          {
            "description": "Details provided about the user being verified. These details may be shown to the user.",
            "in": "formData",
            "name": "provided_details",
            "type": "object"
          },
          {
            "description": "Token referencing a Customer resource.",
            "in": "formData",
            "maxLength": 5000,
            "name": "related_customer",
            "type": "string"
          },
          {
            "description": "The URL that the user will be redirected to upon completing the verification flow.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed. You must provide a `type` if not passing `verification_flow`.",
            "enum": [
              "document",
              "id_number"
            ],
            "in": "formData",
            "name": "type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "The ID of a Verification Flow from the Dashboard. See https://docs.stripe.com/identity/verification-flows.",
            "in": "formData",
            "maxLength": 5000,
            "name": "verification_flow",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a VerificationSession object.</p>\n\n<p>After the VerificationSession is created, display a verification modal using the session <code>client_secret</code> or send your users to the session’s <code>url</code>.</p>\n\n<p>If your API key is in test mode, verification checks won’t actually process, though everything else will occur as if in live mode.</p>\n\n<p>Related guide: <a href=\"/docs/identity/verify-identity-documents\">Verify your users’ identity documents</a></p>",
        "operationId": "PostIdentityVerificationSessions"
      }
    },
    "/v1/identity/verification_sessions/{session}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a VerificationSession that was previously created.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to retrieve a valid\n<code>client_secret</code> or <code>url</code> to allow re-submission.</p>",
        "operationId": "GetIdentityVerificationSessionsSession"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "A set of options for the session’s verification checks.",
            "in": "formData",
            "name": "options",
            "type": "object"
          },
          {
            "description": "Details provided about the user being verified. These details may be shown to the user.",
            "in": "formData",
            "name": "provided_details",
            "type": "object"
          },
          {
            "description": "The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.",
            "enum": [
              "document",
              "id_number"
            ],
            "in": "formData",
            "name": "type",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a VerificationSession object.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to update the\nverification check and options.</p>",
        "operationId": "PostIdentityVerificationSessionsSession"
      }
    },
    "/v1/identity/verification_sessions/{session}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A VerificationSession object can be canceled when it is in <code>requires_input</code> <a href=\"/docs/identity/how-sessions-work\">status</a>.</p>\n\n<p>Once canceled, future submission attempts are disabled. This cannot be undone. <a href=\"/docs/identity/verification-sessions#cancel\">Learn more</a>.</p>",
        "operationId": "PostIdentityVerificationSessionsSessionCancel"
      }
    },
    "/v1/identity/verification_sessions/{session}/redact": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/identity.verification_session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Redact a VerificationSession to remove all collected information from Stripe. This will redact\nthe VerificationSession and all objects related to it, including VerificationReports, Events,\nrequest logs, etc.</p>\n\n<p>A VerificationSession object can be redacted when it is in <code>requires_input</code> or <code>verified</code>\n<a href=\"/docs/identity/how-sessions-work\">status</a>. Redacting a VerificationSession in <code>requires_action</code>\nstate will automatically cancel it.</p>\n\n<p>The redaction process may take up to four days. When the redaction process is in progress, the\nVerificationSession’s <code>redaction.status</code> field will be set to <code>processing</code>; when the process is\nfinished, it will change to <code>redacted</code> and an <code>identity.verification_session.redacted</code> event\nwill be emitted.</p>\n\n<p>Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all the\nfields that contain personal data will be replaced by the string <code>[redacted]</code> or a similar\nplaceholder. The <code>metadata</code> field will also be erased. Redacted objects cannot be updated or\nused for any purpose.</p>\n\n<p><a href=\"/docs/identity/verification-sessions#redact\">Learn more</a>.</p>",
        "operationId": "PostIdentityVerificationSessionsSessionRedact"
      }
    },
    "/v1/invoice_rendering_templates": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "active",
              "archived"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/invoice_rendering_template"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceRenderingTemplatesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List all templates, ordered by creation date, with the most recently created template appearing first.</p>",
        "operationId": "GetInvoiceRenderingTemplates"
      }
    },
    "/v1/invoice_rendering_templates/{template}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "template",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice_rendering_template"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an invoice rendering template with the given ID. It by default returns the latest version of the template. Optionally, specify a version to see previous versions.</p>",
        "operationId": "GetInvoiceRenderingTemplatesTemplate"
      }
    },
    "/v1/invoice_rendering_templates/{template}/archive": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "template",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice_rendering_template"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the status of an invoice rendering template to ‘archived’ so no new Stripe objects (customers, invoices, etc.) can reference it. The template can also no longer be updated. However, if the template is already set on a Stripe object, it will continue to be applied on invoices generated by it.</p>",
        "operationId": "PostInvoiceRenderingTemplatesTemplateArchive"
      }
    },
    "/v1/invoice_rendering_templates/{template}/unarchive": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "template",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice_rendering_template"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Unarchive an invoice rendering template so it can be used on new Stripe objects again.</p>",
        "operationId": "PostInvoiceRenderingTemplatesTemplateUnarchive"
      }
    },
    "/v1/invoiceitems": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return invoice items that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed.",
            "in": "query",
            "maxLength": 5000,
            "name": "invoice",
            "required": false,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied.",
            "in": "query",
            "name": "pending",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/invoiceitem"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/invoiceitems",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoicesItemsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>",
        "operationId": "GetInvoiceitems"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. Passing in a negative `amount` will reduce the `amount_due` on the invoice.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "The ID of the customer who will be billed when this invoice item is billed.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.",
            "in": "formData",
            "name": "discountable",
            "type": "boolean"
          },
          {
            "description": "The coupons and promotion codes to redeem into discounts for the invoice item or invoice line item.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. This is useful when adding invoice items in response to an invoice.created webhook. You can only add invoice items to draft invoices and there is a maximum of 250 items per invoice.",
            "in": "formData",
            "maxLength": 5000,
            "name": "invoice",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.",
            "in": "formData",
            "name": "period",
            "type": "object"
          },
          {
            "description": "The ID of the price object. One of `price` or `price_data` is required.",
            "in": "formData",
            "maxLength": 5000,
            "name": "price",
            "type": "string"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.",
            "in": "formData",
            "name": "price_data",
            "type": "object"
          },
          {
            "description": "Non-negative integer. The quantity of units for the invoice item.",
            "in": "formData",
            "name": "quantity",
            "type": "integer"
          },
          {
            "description": "The ID of a subscription to add this invoice item to. When left blank, the invoice item is added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.",
            "in": "formData",
            "maxLength": 5000,
            "name": "subscription",
            "type": "string"
          },
          {
            "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          },
          {
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
            "in": "formData",
            "name": "tax_code"
          },
          {
            "collectionFormat": "csv",
            "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "tax_rates",
            "type": "array"
          },
          {
            "description": "The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This `unit_amount` will be multiplied by the quantity to get the full amount. Passing in a negative `unit_amount` will reduce the `amount_due` on the invoice.",
            "in": "formData",
            "name": "unit_amount",
            "type": "integer"
          },
          {
            "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
            "format": "decimal",
            "in": "formData",
            "name": "unit_amount_decimal",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoiceitem"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an item to be added to a draft invoice (up to 250 items per invoice). If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>",
        "operationId": "PostInvoiceitems"
      }
    },
    "/v1/invoiceitems/{invoiceitem}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoiceitem",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_invoiceitem"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they’re not attached to invoices, or if it’s attached to a draft invoice.</p>",
        "operationId": "DeleteInvoiceitemsInvoiceitem"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoiceitem",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoiceitem"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the invoice item with the given ID.</p>",
        "operationId": "GetInvoiceitemsInvoiceitem"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoiceitem",
            "required": true,
            "type": "string"
          },
          {
            "description": "The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.",
            "in": "formData",
            "name": "discountable",
            "type": "boolean"
          },
          {
            "description": "The coupons, promotion codes & existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.",
            "in": "formData",
            "name": "period",
            "type": "object"
          },
          {
            "description": "The ID of the price object. One of `price` or `price_data` is required.",
            "in": "formData",
            "maxLength": 5000,
            "name": "price",
            "type": "string"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.",
            "in": "formData",
            "name": "price_data",
            "type": "object"
          },
          {
            "description": "Non-negative integer. The quantity of units for the invoice item.",
            "in": "formData",
            "name": "quantity",
            "type": "integer"
          },
          {
            "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          },
          {
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
            "in": "formData",
            "name": "tax_code"
          },
          {
            "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "tax_rates"
          },
          {
            "description": "The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
            "in": "formData",
            "name": "unit_amount",
            "type": "integer"
          },
          {
            "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
            "format": "decimal",
            "in": "formData",
            "name": "unit_amount_decimal",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoiceitem"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>",
        "operationId": "PostInvoiceitemsInvoiceitem"
      }
    },
    "/v1/invoices": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "query",
            "name": "collection_method",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return invoices that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return invoices for the customer specified by this customer ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "due_date",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
            "enum": [
              "draft",
              "open",
              "paid",
              "uncollectible",
              "void"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Only return invoices for the subscription specified by this subscription ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "subscription",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/invoice"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/invoices",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoicesResourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>",
        "operationId": "GetInvoices"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
            "in": "formData",
            "name": "account_tax_ids"
          },
          {
            "description": "A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.",
            "in": "formData",
            "name": "auto_advance",
            "type": "boolean"
          },
          {
            "description": "Settings for automatic tax lookup for this invoice.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The currency to create this invoice in. Defaults to that of `customer` if not specified.",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "A list of up to 4 custom fields to be displayed on the invoice.",
            "in": "formData",
            "name": "custom_fields"
          },
          {
            "description": "The ID of the customer who will be billed.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "The number of days from when the invoice is created until it is due. Valid only for invoices where `collection_method=send_invoice`.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_source",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The tax rates that will apply to any line item that does not have `tax_rates` set.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "default_tax_rates",
            "type": "array"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
            "in": "formData",
            "maxLength": 1500,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The coupons and promotion codes to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice's customer. Pass an empty string to avoid inheriting any discounts.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "description": "The date on which payment for this invoice is due. Valid only for invoices where `collection_method=send_invoice`.",
            "format": "unix-time",
            "in": "formData",
            "name": "due_date",
            "type": "integer"
          },
          {
            "description": "The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.",
            "format": "unix-time",
            "in": "formData",
            "name": "effective_at",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Footer to be displayed on the invoice.",
            "in": "formData",
            "maxLength": 5000,
            "name": "footer",
            "type": "string"
          },
          {
            "description": "Revise an existing invoice. The new invoice will be created in `status=draft`. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.",
            "in": "formData",
            "name": "from_invoice",
            "type": "object"
          },
          {
            "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
            "in": "formData",
            "name": "issuer",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.",
            "in": "formData",
            "maxLength": 26,
            "name": "number",
            "type": "string"
          },
          {
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "in": "formData",
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "Configuration settings for the PaymentIntent that is generated when the invoice is finalized.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "How to handle pending invoice items on invoice creation. Defaults to `exclude` if the parameter is omitted.",
            "enum": [
              "exclude",
              "include"
            ],
            "in": "formData",
            "name": "pending_invoice_items_behavior",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.",
            "in": "formData",
            "name": "rendering",
            "type": "object"
          },
          {
            "description": "Settings for the cost of shipping for this invoice.",
            "in": "formData",
            "name": "shipping_cost",
            "type": "object"
          },
          {
            "description": "Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.",
            "in": "formData",
            "name": "shipping_details",
            "type": "object"
          },
          {
            "description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription. The subscription's billing cycle and regular subscription events won't be affected.",
            "in": "formData",
            "maxLength": 5000,
            "name": "subscription",
            "type": "string"
          },
          {
            "description": "If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>This endpoint creates a draft invoice for a given customer. The invoice remains a draft until you <a href=\"#finalize_invoice\">finalize</a> the invoice, which allows you to <a href=\"#pay_invoice\">pay</a> or <a href=\"#send_invoice\">send</a> the invoice to your customers.</p>",
        "operationId": "PostInvoices"
      }
    },
    "/v1/invoices/create_preview": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Settings for automatic tax lookup for this invoice preview.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "The currency to preview this invoice in. Defaults to that of `customer` if not specified.",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "formData",
            "name": "customer_details",
            "type": "object"
          },
          {
            "description": "The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "List of invoice items to add or update in the upcoming invoice preview (up to 250).",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "discountable": {
                  "type": "boolean"
                },
                "discounts": {},
                "invoiceitem": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {},
                "period": {
                  "properties": {
                    "end": {
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "start": {
                      "format": "unix-time",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "end",
                    "start"
                  ],
                  "title": "period",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_behavior": {
                  "enum": [
                    "exclusive",
                    "inclusive",
                    "unspecified"
                  ],
                  "type": "string"
                },
                "tax_code": {},
                "tax_rates": {},
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "title": "invoice_item_preview_params",
              "type": "object"
            },
            "name": "invoice_items",
            "type": "array"
          },
          {
            "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
            "in": "formData",
            "name": "issuer",
            "type": "object"
          },
          {
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.",
            "enum": [
              "next",
              "recurring"
            ],
            "in": "formData",
            "name": "preview_mode",
            "type": "string"
          },
          {
            "description": "The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.",
            "in": "formData",
            "maxLength": 5000,
            "name": "schedule",
            "type": "string"
          },
          {
            "description": "The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.",
            "in": "formData",
            "name": "schedule_details",
            "type": "object"
          },
          {
            "description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
            "in": "formData",
            "maxLength": 5000,
            "name": "subscription",
            "type": "string"
          },
          {
            "description": "The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.",
            "in": "formData",
            "name": "subscription_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass the <code>subscription_details.proration_date</code> parameter when doing the actual subscription update. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_details.proration_date</code> value passed in the request. </p>\n\n<p>Note: Currency conversion calculations use the latest exchange rates. Exchange rates may vary between the time of the preview and the time of the actual invoice creation. <a href=\"https://docs.stripe.com/currencies/conversions\">Learn more</a></p>",
        "operationId": "PostInvoicesCreatePreview"
      }
    },
    "/v1/invoices/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/invoice"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for invoices you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetInvoicesSearch"
      }
    },
    "/v1/invoices/upcoming": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Settings for automatic tax lookup for this invoice preview.",
            "in": "query",
            "name": "automatic_tax",
            "required": false,
            "type": "object"
          },
          {
            "description": "The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "query",
            "maxLength": 5000,
            "name": "coupon",
            "required": false,
            "type": "string"
          },
          {
            "description": "The currency to preview this invoice in. Defaults to that of `customer` if not specified.",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "query",
            "name": "customer_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.",
            "in": "query",
            "name": "discounts",
            "required": false
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "List of invoice items to add or update in the upcoming invoice preview (up to 250).",
            "in": "query",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "discountable": {
                  "type": "boolean"
                },
                "discounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "coupon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "discount": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "promotion_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "discounts_data_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "invoiceitem": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "period": {
                  "properties": {
                    "end": {
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "start": {
                      "format": "unix-time",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "end",
                    "start"
                  ],
                  "title": "period",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_behavior": {
                  "enum": [
                    "exclusive",
                    "inclusive",
                    "unspecified"
                  ],
                  "type": "string"
                },
                "tax_code": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "title": "invoice_item_preview_params",
              "type": "object"
            },
            "name": "invoice_items",
            "required": false,
            "type": "array"
          },
          {
            "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
            "in": "query",
            "name": "issuer",
            "required": false,
            "type": "object"
          },
          {
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "in": "query",
            "name": "on_behalf_of",
            "required": false
          },
          {
            "description": "Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.",
            "enum": [
              "next",
              "recurring"
            ],
            "in": "query",
            "name": "preview_mode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.",
            "in": "query",
            "maxLength": 5000,
            "name": "schedule",
            "required": false,
            "type": "string"
          },
          {
            "description": "The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.",
            "in": "query",
            "name": "schedule_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
            "in": "query",
            "maxLength": 5000,
            "name": "subscription",
            "required": false,
            "type": "string"
          },
          {
            "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.",
            "in": "query",
            "name": "subscription_billing_cycle_anchor",
            "required": false
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.",
            "in": "query",
            "name": "subscription_cancel_at",
            "required": false
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.",
            "in": "query",
            "name": "subscription_cancel_at_period_end",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.",
            "in": "query",
            "name": "subscription_cancel_now",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.",
            "in": "query",
            "name": "subscription_default_tax_rates",
            "required": false
          },
          {
            "description": "The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.",
            "in": "query",
            "name": "subscription_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.",
            "in": "query",
            "items": {
              "properties": {
                "billing_thresholds": {
                  "anyOf": [
                    {
                      "properties": {
                        "usage_gte": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "usage_gte"
                      ],
                      "title": "item_billing_thresholds_param",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "clear_usage": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "discounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "coupon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "discount": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "promotion_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "discounts_data_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                }
              },
              "title": "subscription_item_update_params",
              "type": "object"
            },
            "name": "subscription_items",
            "required": false,
            "type": "array"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "query",
            "name": "subscription_proration_behavior",
            "required": false,
            "type": "string"
          },
          {
            "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.",
            "format": "unix-time",
            "in": "query",
            "name": "subscription_proration_date",
            "required": false,
            "type": "integer"
          },
          {
            "description": "For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.",
            "enum": [
              "now"
            ],
            "in": "query",
            "maxLength": 5000,
            "name": "subscription_resume_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.",
            "format": "unix-time",
            "in": "query",
            "name": "subscription_start_date",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.",
            "in": "query",
            "name": "subscription_trial_end",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass the <code>subscription_details.proration_date</code> parameter when doing the actual subscription update. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_details.proration_date</code> value passed in the request.</p>\n\n<p>Note: Currency conversion calculations use the latest exchange rates. Exchange rates may vary between the time of the preview and the time of the actual invoice creation. <a href=\"https://docs.stripe.com/currencies/conversions\">Learn more</a></p>",
        "operationId": "GetInvoicesUpcoming"
      }
    },
    "/v1/invoices/upcoming/lines": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Settings for automatic tax lookup for this invoice preview.",
            "in": "query",
            "name": "automatic_tax",
            "required": false,
            "type": "object"
          },
          {
            "description": "The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "query",
            "maxLength": 5000,
            "name": "coupon",
            "required": false,
            "type": "string"
          },
          {
            "description": "The currency to preview this invoice in. Defaults to that of `customer` if not specified.",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.",
            "in": "query",
            "name": "customer_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.",
            "in": "query",
            "name": "discounts",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "List of invoice items to add or update in the upcoming invoice preview (up to 250).",
            "in": "query",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "discountable": {
                  "type": "boolean"
                },
                "discounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "coupon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "discount": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "promotion_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "discounts_data_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "invoiceitem": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "period": {
                  "properties": {
                    "end": {
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "start": {
                      "format": "unix-time",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "end",
                    "start"
                  ],
                  "title": "period",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_behavior": {
                  "enum": [
                    "exclusive",
                    "inclusive",
                    "unspecified"
                  ],
                  "type": "string"
                },
                "tax_code": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "title": "invoice_item_preview_params",
              "type": "object"
            },
            "name": "invoice_items",
            "required": false,
            "type": "array"
          },
          {
            "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
            "in": "query",
            "name": "issuer",
            "required": false,
            "type": "object"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "in": "query",
            "name": "on_behalf_of",
            "required": false
          },
          {
            "description": "Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.",
            "enum": [
              "next",
              "recurring"
            ],
            "in": "query",
            "name": "preview_mode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.",
            "in": "query",
            "maxLength": 5000,
            "name": "schedule",
            "required": false,
            "type": "string"
          },
          {
            "description": "The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.",
            "in": "query",
            "name": "schedule_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
            "in": "query",
            "maxLength": 5000,
            "name": "subscription",
            "required": false,
            "type": "string"
          },
          {
            "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.",
            "in": "query",
            "name": "subscription_billing_cycle_anchor",
            "required": false
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.",
            "in": "query",
            "name": "subscription_cancel_at",
            "required": false
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.",
            "in": "query",
            "name": "subscription_cancel_at_period_end",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.",
            "in": "query",
            "name": "subscription_cancel_now",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.",
            "in": "query",
            "name": "subscription_default_tax_rates",
            "required": false
          },
          {
            "description": "The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.",
            "in": "query",
            "name": "subscription_details",
            "required": false,
            "type": "object"
          },
          {
            "description": "A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.",
            "in": "query",
            "items": {
              "properties": {
                "billing_thresholds": {
                  "anyOf": [
                    {
                      "properties": {
                        "usage_gte": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "usage_gte"
                      ],
                      "title": "item_billing_thresholds_param",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "clear_usage": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "discounts": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "coupon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "discount": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "promotion_code": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "discounts_data_param",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {
                  "anyOf": [
                    {
                      "items": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                }
              },
              "title": "subscription_item_update_params",
              "type": "object"
            },
            "name": "subscription_items",
            "required": false,
            "type": "array"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "query",
            "name": "subscription_proration_behavior",
            "required": false,
            "type": "string"
          },
          {
            "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.",
            "format": "unix-time",
            "in": "query",
            "name": "subscription_proration_date",
            "required": false,
            "type": "integer"
          },
          {
            "description": "For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.",
            "enum": [
              "now"
            ],
            "in": "query",
            "maxLength": 5000,
            "name": "subscription_resume_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.",
            "format": "unix-time",
            "in": "query",
            "name": "subscription_start_date",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.",
            "in": "query",
            "name": "subscription_trial_end",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetInvoicesUpcomingLines"
      }
    },
    "/v1/invoices/{invoice}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be <a href=\"#void_invoice\">voided</a>.</p>",
        "operationId": "DeleteInvoicesInvoice"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the invoice with the given ID.</p>",
        "operationId": "GetInvoicesInvoice"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
            "in": "formData",
            "name": "account_tax_ids"
          },
          {
            "description": "A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice.",
            "in": "formData",
            "name": "auto_advance",
            "type": "boolean"
          },
          {
            "description": "Settings for automatic tax lookup for this invoice.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically` or `send_invoice`. This field can be updated only on `draft` invoices.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "A list of up to 4 custom fields to be displayed on the invoice. If a value for `custom_fields` is specified, the list specified will replace the existing custom field list on this invoice. Pass an empty string to remove previously-defined fields.",
            "in": "formData",
            "name": "custom_fields"
          },
          {
            "description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
            "in": "formData",
            "name": "default_source"
          },
          {
            "description": "The tax rates that will apply to any line item that does not have `tax_rates` set. Pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
            "in": "formData",
            "maxLength": 1500,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The discounts that will apply to the invoice. Pass an empty string to remove previously-defined discounts.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "description": "The date on which payment for this invoice is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.",
            "format": "unix-time",
            "in": "formData",
            "name": "due_date",
            "type": "integer"
          },
          {
            "description": "The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.",
            "in": "formData",
            "name": "effective_at"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Footer to be displayed on the invoice.",
            "in": "formData",
            "maxLength": 5000,
            "name": "footer",
            "type": "string"
          },
          {
            "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
            "in": "formData",
            "name": "issuer",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.",
            "in": "formData",
            "name": "number"
          },
          {
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "Configuration settings for the PaymentIntent that is generated when the invoice is finalized.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.",
            "in": "formData",
            "name": "rendering",
            "type": "object"
          },
          {
            "description": "Settings for the cost of shipping for this invoice.",
            "in": "formData",
            "name": "shipping_cost"
          },
          {
            "description": "Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.",
            "in": "formData",
            "name": "shipping_details"
          },
          {
            "description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge. This will be unset if you POST an empty value.",
            "in": "formData",
            "name": "transfer_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Draft invoices are fully editable. Once an invoice is <a href=\"/docs/billing/invoices/workflow#finalized\">finalized</a>,\nmonetary values, as well as <code>collection_method</code>, become uneditable.</p>\n\n<p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or <a href=\"/docs/billing/invoices/reconciliation\">automatically reconciling</a> invoices, pass\n<code>auto_advance=false</code>.</p>",
        "operationId": "PostInvoicesInvoice"
      }
    },
    "/v1/invoices/{invoice}/add_lines": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "invoice_metadata"
          },
          {
            "collectionFormat": "csv",
            "description": "The line items to add.",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "discountable": {
                  "type": "boolean"
                },
                "discounts": {},
                "invoice_item": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {},
                "period": {
                  "properties": {
                    "end": {
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "start": {
                      "format": "unix-time",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "end",
                    "start"
                  ],
                  "title": "period",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "product_data": {
                      "properties": {
                        "description": {
                          "maxLength": 40000,
                          "type": "string"
                        },
                        "images": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "name": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "tax_code": {
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "product_data",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency"
                  ],
                  "title": "one_time_price_data_with_product_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_amounts": {},
                "tax_rates": {}
              },
              "title": "lines_data_param",
              "type": "object"
            },
            "name": "lines",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Adds multiple line items to an invoice. This is only possible when an invoice is still a draft.</p>",
        "operationId": "PostInvoicesInvoiceAddLines"
      }
    },
    "/v1/invoices/{invoice}/finalize": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.",
            "in": "formData",
            "name": "auto_advance",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you’d like to finalize a draft invoice manually, you can do so using this method.</p>",
        "operationId": "PostInvoicesInvoiceFinalize"
      }
    },
    "/v1/invoices/{invoice}/lines": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving an invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetInvoicesInvoiceLines"
      }
    },
    "/v1/invoices/{invoice}/lines/{line_item_id}": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Invoice ID of line item",
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "description": "Invoice line item ID",
            "in": "path",
            "maxLength": 5000,
            "name": "line_item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Controls whether discounts apply to this line item. Defaults to false for prorations or negative line items, and true for all other line items. Cannot be set to true for prorations.",
            "in": "formData",
            "name": "discountable",
            "type": "boolean"
          },
          {
            "description": "The coupons, promotion codes & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. For [type=subscription](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-type) line items, the incoming metadata specified on the request is directly used to set this value, in contrast to [type=invoiceitem](api/invoices/line_item#invoice_line_item_object-type) line items, where any existing metadata on the invoice line is merged with the incoming data.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.",
            "in": "formData",
            "name": "period",
            "type": "object"
          },
          {
            "description": "The ID of the price object. One of `price` or `price_data` is required.",
            "in": "formData",
            "maxLength": 5000,
            "name": "price",
            "type": "string"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.",
            "in": "formData",
            "name": "price_data",
            "type": "object"
          },
          {
            "description": "Non-negative integer. The quantity of units for the line item.",
            "in": "formData",
            "name": "quantity",
            "type": "integer"
          },
          {
            "description": "A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https://stripe.com/docs/api/invoices/object#invoice_object-default_tax_rates) or uses [automatic tax](https://stripe.com/docs/tax/invoicing). Pass an empty string to remove previously defined tax amounts.",
            "in": "formData",
            "name": "tax_amounts"
          },
          {
            "description": "The tax rates which apply to the line item. When set, the `default_tax_rates` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "tax_rates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/line_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an invoice’s line item. Some fields, such as <code>tax_amounts</code>, only live on the invoice line item,\nso they can only be updated through this endpoint. Other fields, such as <code>amount</code>, live on both the invoice\nitem and the invoice line item, so updates on this endpoint will propagate to the invoice item as well.\nUpdating an invoice’s line item is only possible before the invoice is finalized.</p>",
        "operationId": "PostInvoicesInvoiceLinesLineItemId"
      }
    },
    "/v1/invoices/{invoice}/mark_uncollectible": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>",
        "operationId": "PostInvoicesInvoiceMarkUncollectible"
      }
    },
    "/v1/invoices/{invoice}/pay": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "In cases where the source used to pay the invoice has insufficient funds, passing `forgive=true` controls whether a charge should be attempted for the full amount available on the source, up to the amount to fully pay the invoice. This effectively forgives the difference between the amount available on the source and the amount due. \n\nPassing `forgive=false` will fail the charge if the source hasn't been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference. Defaults to `false`.",
            "in": "formData",
            "name": "forgive",
            "type": "boolean"
          },
          {
            "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the payment_method param or the invoice's default_payment_method or default_source, if set.",
            "in": "formData",
            "name": "mandate"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `true` (off-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "Boolean representing whether an invoice is paid outside of Stripe. This will result in no charge being made. Defaults to `false`.",
            "in": "formData",
            "name": "paid_out_of_band",
            "type": "boolean"
          },
          {
            "description": "A PaymentMethod to be charged. The PaymentMethod must be the ID of a PaymentMethod belonging to the customer associated with the invoice being paid.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>",
        "operationId": "PostInvoicesInvoicePay"
      }
    },
    "/v1/invoices/{invoice}/remove_lines": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "invoice_metadata"
          },
          {
            "collectionFormat": "csv",
            "description": "The line items to remove.",
            "in": "formData",
            "items": {
              "properties": {
                "behavior": {
                  "enum": [
                    "delete",
                    "unassign"
                  ],
                  "type": "string"
                },
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "behavior",
                "id"
              ],
              "title": "lines_data_param",
              "type": "object"
            },
            "name": "lines",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Removes multiple line items from an invoice. This is only possible when an invoice is still a draft.</p>",
        "operationId": "PostInvoicesInvoiceRemoveLines"
      }
    },
    "/v1/invoices/{invoice}/send": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Stripe will automatically send invoices to customers according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>\n\n<p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>",
        "operationId": "PostInvoicesInvoiceSend"
      }
    },
    "/v1/invoices/{invoice}/update_lines": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. For [type=subscription](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-type) line items, the incoming metadata specified on the request is directly used to set this value, in contrast to [type=invoiceitem](api/invoices/line_item#invoice_line_item_object-type) line items, where any existing metadata on the invoice line is merged with the incoming data.",
            "in": "formData",
            "name": "invoice_metadata"
          },
          {
            "collectionFormat": "csv",
            "description": "The line items to update.",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "description": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "discountable": {
                  "type": "boolean"
                },
                "discounts": {},
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {},
                "period": {
                  "properties": {
                    "end": {
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "start": {
                      "format": "unix-time",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "end",
                    "start"
                  ],
                  "title": "period",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "product_data": {
                      "properties": {
                        "description": {
                          "maxLength": 40000,
                          "type": "string"
                        },
                        "images": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "name": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "tax_code": {
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "product_data",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency"
                  ],
                  "title": "one_time_price_data_with_product_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_amounts": {},
                "tax_rates": {}
              },
              "required": [
                "id"
              ],
              "title": "lines_data_param",
              "type": "object"
            },
            "name": "lines",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates multiple line items on an invoice. This is only possible when an invoice is still a draft.</p>",
        "operationId": "PostInvoicesInvoiceUpdateLines"
      }
    },
    "/v1/invoices/{invoice}/void": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "invoice",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href=\"#delete_invoice\">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>\n\n<p>Consult with local regulations to determine whether and how an invoice might be amended, canceled, or voided in the jurisdiction you’re doing business in. You might need to <a href=\"#create_invoice\">issue another invoice</a> or <a href=\"#create_credit_note\">credit note</a> instead. Stripe recommends that you consult with your legal counsel for advice specific to your business.</p>",
        "operationId": "PostInvoicesInvoiceVoid"
      }
    },
    "/v1/issuing/authorizations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return authorizations that belong to the given card.",
            "in": "query",
            "maxLength": 5000,
            "name": "card",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return authorizations that belong to the given cardholder.",
            "in": "query",
            "maxLength": 5000,
            "name": "cardholder",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return authorizations that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`.",
            "enum": [
              "closed",
              "pending",
              "reversed"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.authorization"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/authorizations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingAuthorizationList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingAuthorizations"
      }
    },
    "/v1/issuing/authorizations/{authorization}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Authorization</code> object.</p>",
        "operationId": "GetIssuingAuthorizationsAuthorization"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostIssuingAuthorizationsAuthorization"
      }
    },
    "/v1/issuing/authorizations/{authorization}/approve": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "If the authorization's `pending_request.is_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization. Must be positive (use [`decline`](https://stripe.com/docs/api/issuing/authorizations/decline) to decline an authorization request).",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>[Deprecated] Approves a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real-time authorization</a> flow. \nThis method is deprecated. Instead, <a href=\"/docs/issuing/controls/real-time-authorizations#authorization-handling\">respond directly to the webhook request to approve an authorization</a>.</p>",
        "operationId": "PostIssuingAuthorizationsAuthorizationApprove"
      }
    },
    "/v1/issuing/authorizations/{authorization}/decline": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "deprecated": true,
        "description": "<p>[Deprecated] Declines a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real time authorization</a> flow.\nThis method is deprecated. Instead, <a href=\"/docs/issuing/controls/real-time-authorizations#authorization-handling\">respond directly to the webhook request to decline an authorization</a>.</p>",
        "operationId": "PostIssuingAuthorizationsAuthorizationDecline"
      }
    },
    "/v1/issuing/cardholders": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return cardholders that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return cardholders that have the given email address.",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return cardholders that have the given phone number.",
            "in": "query",
            "name": "phone_number",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`.",
            "enum": [
              "active",
              "blocked",
              "inactive"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return cardholders that have the given type. One of `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.cardholder"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/cardholders",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingCardholderList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingCardholders"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The cardholder's billing address.",
            "in": "formData",
            "name": "billing",
            "required": true,
            "type": "object"
          },
          {
            "description": "Additional information about a `company` cardholder.",
            "in": "formData",
            "name": "company",
            "type": "object"
          },
          {
            "description": "The cardholder's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Additional information about an `individual` cardholder.",
            "in": "formData",
            "name": "individual",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The cardholder's name. This will be printed on cards issued to them. The maximum length of this field is 24 characters. This field cannot contain any special characters or numbers.",
            "in": "formData",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
            "in": "formData",
            "name": "phone_number",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.\n This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.",
            "in": "formData",
            "items": {
              "enum": [
                "de",
                "en",
                "es",
                "fr",
                "it"
              ],
              "type": "string"
            },
            "name": "preferred_locales",
            "type": "array"
          },
          {
            "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "in": "formData",
            "name": "spending_controls",
            "type": "object"
          },
          {
            "description": "Specifies whether to permit authorizations on this cardholder's cards. Defaults to `active`.",
            "enum": [
              "active",
              "inactive"
            ],
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "description": "One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details.",
            "enum": [
              "company",
              "individual"
            ],
            "in": "formData",
            "name": "type",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.cardholder"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>",
        "operationId": "PostIssuingCardholders"
      }
    },
    "/v1/issuing/cardholders/{cardholder}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "cardholder",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.cardholder"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Cardholder</code> object.</p>",
        "operationId": "GetIssuingCardholdersCardholder"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "cardholder",
            "required": true,
            "type": "string"
          },
          {
            "description": "The cardholder's billing address.",
            "in": "formData",
            "name": "billing",
            "type": "object"
          },
          {
            "description": "Additional information about a `company` cardholder.",
            "in": "formData",
            "name": "company",
            "type": "object"
          },
          {
            "description": "The cardholder's email address.",
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Additional information about an `individual` cardholder.",
            "in": "formData",
            "name": "individual",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure) for more details.",
            "in": "formData",
            "name": "phone_number",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.\n This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.",
            "in": "formData",
            "items": {
              "enum": [
                "de",
                "en",
                "es",
                "fr",
                "it"
              ],
              "type": "string"
            },
            "name": "preferred_locales",
            "type": "array"
          },
          {
            "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "in": "formData",
            "name": "spending_controls",
            "type": "object"
          },
          {
            "description": "Specifies whether to permit authorizations on this cardholder's cards.",
            "enum": [
              "active",
              "inactive"
            ],
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.cardholder"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostIssuingCardholdersCardholder"
      }
    },
    "/v1/issuing/cards": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return cards belonging to the Cardholder with the provided ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "cardholder",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return cards that were issued during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return cards that have the given expiration month.",
            "in": "query",
            "name": "exp_month",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return cards that have the given expiration year.",
            "in": "query",
            "name": "exp_year",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return cards that have the given last four digits.",
            "in": "query",
            "maxLength": 5000,
            "name": "last4",
            "required": false,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return cards that have the given status. One of `active`, `inactive`, or `canceled`.",
            "enum": [
              "active",
              "canceled",
              "inactive"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Only return cards that have the given type. One of `virtual` or `physical`.",
            "enum": [
              "physical",
              "virtual"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.card"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/cards",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingCardList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingCards"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) object with which the card will be associated.",
            "in": "formData",
            "maxLength": 5000,
            "name": "cardholder",
            "type": "string"
          },
          {
            "description": "The currency for the card.",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "in": "formData",
            "name": "financial_account",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The personalization design object belonging to this card.",
            "in": "formData",
            "maxLength": 5000,
            "name": "personalization_design",
            "type": "string"
          },
          {
            "description": "The desired PIN for this card.",
            "in": "formData",
            "name": "pin",
            "type": "object"
          },
          {
            "description": "The card this is meant to be a replacement for (if any).",
            "in": "formData",
            "maxLength": 5000,
            "name": "replacement_for",
            "type": "string"
          },
          {
            "description": "If `replacement_for` is specified, this should indicate why that card is being replaced.",
            "enum": [
              "damaged",
              "expired",
              "lost",
              "stolen"
            ],
            "in": "formData",
            "name": "replacement_reason",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "The second line to print on the card.",
            "in": "formData",
            "name": "second_line"
          },
          {
            "description": "The address where the card will be shipped.",
            "in": "formData",
            "name": "shipping",
            "type": "object"
          },
          {
            "description": "Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "in": "formData",
            "name": "spending_controls",
            "type": "object"
          },
          {
            "description": "Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.",
            "enum": [
              "active",
              "inactive"
            ],
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "description": "The type of card to issue. Possible values are `physical` or `virtual`.",
            "enum": [
              "physical",
              "virtual"
            ],
            "in": "formData",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an Issuing <code>Card</code> object.</p>",
        "operationId": "PostIssuingCards"
      }
    },
    "/v1/issuing/cards/{card}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Card</code> object.</p>",
        "operationId": "GetIssuingCardsCard"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reason why the `status` of this card is `canceled`.",
            "enum": [
              "lost",
              "stolen"
            ],
            "in": "formData",
            "name": "cancellation_reason",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "in": "formData",
            "maxLength": 5000,
            "name": "personalization_design",
            "type": "string"
          },
          {
            "description": "The desired new PIN for this card.",
            "in": "formData",
            "name": "pin",
            "type": "object"
          },
          {
            "description": "Updated shipping information for the card.",
            "in": "formData",
            "name": "shipping",
            "type": "object"
          },
          {
            "description": "Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "in": "formData",
            "name": "spending_controls",
            "type": "object"
          },
          {
            "description": "Dictates whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. If this card is being canceled because it was lost or stolen, this information should be provided as `cancellation_reason`.",
            "enum": [
              "active",
              "canceled",
              "inactive"
            ],
            "in": "formData",
            "name": "status",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostIssuingCardsCard"
      }
    },
    "/v1/issuing/disputes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return Issuing disputes that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Select Issuing disputes with the given status.",
            "enum": [
              "expired",
              "lost",
              "submitted",
              "unsubmitted",
              "won"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Select the Issuing dispute for the given transaction.",
            "in": "query",
            "maxLength": 5000,
            "name": "transaction",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.dispute"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/disputes",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingDisputeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingDisputes"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If not set, defaults to the full transaction amount.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Evidence provided for the dispute.",
            "in": "formData",
            "name": "evidence",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "transaction",
            "type": "string"
          },
          {
            "description": "Params for disputes related to Treasury FinancialAccounts",
            "in": "formData",
            "name": "treasury",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an Issuing <code>Dispute</code> object. Individual pieces of evidence within the <code>evidence</code> object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a> for more details about evidence requirements.</p>",
        "operationId": "PostIssuingDisputes"
      }
    },
    "/v1/issuing/disputes/{dispute}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Dispute</code> object.</p>",
        "operationId": "GetIssuingDisputesDispute"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "description": "The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Evidence provided for the dispute.",
            "in": "formData",
            "name": "evidence",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the <code>evidence</code> object can be unset by passing in an empty string.</p>",
        "operationId": "PostIssuingDisputesDispute"
      }
    },
    "/v1/issuing/disputes/{dispute}/submit": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "dispute",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.dispute"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Submits an Issuing <code>Dispute</code> to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a>.</p>",
        "operationId": "PostIssuingDisputesDisputeSubmit"
      }
    },
    "/v1/issuing/personalization_designs": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return personalization designs with the given lookup keys.",
            "in": "query",
            "items": {
              "maxLength": 200,
              "type": "string"
            },
            "name": "lookup_keys",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return personalization designs with the given preferences.",
            "in": "query",
            "name": "preferences",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return personalization designs with the given status.",
            "enum": [
              "active",
              "inactive",
              "rejected",
              "review"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.personalization_design"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/personalization_designs",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingPersonalizationDesignList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of personalization design objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingPersonalizationDesigns"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.",
            "in": "formData",
            "name": "card_logo",
            "type": "string"
          },
          {
            "description": "Hash containing carrier text, for use with physical bundles that support carrier text.",
            "in": "formData",
            "name": "carrier_text",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.",
            "in": "formData",
            "maxLength": 200,
            "name": "lookup_key",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Friendly display name.",
            "in": "formData",
            "maxLength": 200,
            "name": "name",
            "type": "string"
          },
          {
            "description": "The physical bundle object belonging to this personalization design.",
            "in": "formData",
            "maxLength": 5000,
            "name": "physical_bundle",
            "required": true,
            "type": "string"
          },
          {
            "description": "Information on whether this personalization design is used to create cards when one is not specified.",
            "in": "formData",
            "name": "preferences",
            "type": "object"
          },
          {
            "description": "If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.",
            "in": "formData",
            "name": "transfer_lookup_key",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a personalization design object.</p>",
        "operationId": "PostIssuingPersonalizationDesigns"
      }
    },
    "/v1/issuing/personalization_designs/{personalization_design}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a personalization design object.</p>",
        "operationId": "GetIssuingPersonalizationDesignsPersonalizationDesign"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": true,
            "type": "string"
          },
          {
            "description": "The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.",
            "in": "formData",
            "name": "card_logo"
          },
          {
            "description": "Hash containing carrier text, for use with physical bundles that support carrier text.",
            "in": "formData",
            "name": "carrier_text"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.",
            "in": "formData",
            "name": "lookup_key"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Friendly display name. Providing an empty string will set the field to null.",
            "in": "formData",
            "name": "name"
          },
          {
            "description": "The physical bundle object belonging to this personalization design.",
            "in": "formData",
            "maxLength": 5000,
            "name": "physical_bundle",
            "type": "string"
          },
          {
            "description": "Information on whether this personalization design is used to create cards when one is not specified.",
            "in": "formData",
            "name": "preferences",
            "type": "object"
          },
          {
            "description": "If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.",
            "in": "formData",
            "name": "transfer_lookup_key",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a card personalization object.</p>",
        "operationId": "PostIssuingPersonalizationDesignsPersonalizationDesign"
      }
    },
    "/v1/issuing/physical_bundles": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return physical bundles with the given status.",
            "enum": [
              "active",
              "inactive",
              "review"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return physical bundles with the given type.",
            "enum": [
              "custom",
              "standard"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.physical_bundle"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/physical_bundles",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingPhysicalBundleList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of physical bundle objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingPhysicalBundles"
      }
    },
    "/v1/issuing/physical_bundles/{physical_bundle}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "physical_bundle",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.physical_bundle"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a physical bundle object.</p>",
        "operationId": "GetIssuingPhysicalBundlesPhysicalBundle"
      }
    },
    "/v1/issuing/settlements/{settlement}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "settlement",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.settlement"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Settlement</code> object.</p>",
        "operationId": "GetIssuingSettlementsSettlement"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "settlement",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.settlement"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostIssuingSettlementsSettlement"
      }
    },
    "/v1/issuing/tokens": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Issuing card identifier to list tokens for.",
            "in": "query",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "Only return Issuing tokens that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Select Issuing tokens with the given status.",
            "enum": [
              "active",
              "deleted",
              "requested",
              "suspended"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.token"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingNetworkTokenList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all Issuing <code>Token</code> objects for a given card.</p>",
        "operationId": "GetIssuingTokens"
      }
    },
    "/v1/issuing/tokens/{token}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Token</code> object.</p>",
        "operationId": "GetIssuingTokensToken"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Specifies which status the token should be updated to.",
            "enum": [
              "active",
              "deleted",
              "suspended"
            ],
            "in": "formData",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Attempts to update the specified Issuing <code>Token</code> object to the status specified.</p>",
        "operationId": "PostIssuingTokensToken"
      }
    },
    "/v1/issuing/transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return transactions that belong to the given card.",
            "in": "query",
            "maxLength": 5000,
            "name": "card",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return transactions that belong to the given cardholder.",
            "in": "query",
            "maxLength": 5000,
            "name": "cardholder",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return transactions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return transactions that have the given type. One of `capture` or `refund`.",
            "enum": [
              "capture",
              "refund"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/issuing.transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/issuing/transactions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "IssuingTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetIssuingTransactions"
      }
    },
    "/v1/issuing/transactions/{transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an Issuing <code>Transaction</code> object.</p>",
        "operationId": "GetIssuingTransactionsTransaction"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostIssuingTransactionsTransaction"
      }
    },
    "/v1/link_account_sessions": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The account holder to link accounts for.",
            "in": "formData",
            "name": "account_holder",
            "required": true,
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Filters to restrict the kinds of accounts to collect.",
            "in": "formData",
            "name": "filters",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "List of data features that you would like to request access to.\n\nPossible values are `balances`, `transactions`, `ownership`, and `payment_method`.",
            "in": "formData",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "payment_method",
                "transactions"
              ],
              "maxLength": 5000,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "permissions",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "List of data features that you would like to retrieve upon account creation.",
            "in": "formData",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "prefetch",
            "type": "array"
          },
          {
            "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
            "in": "formData",
            "maxLength": 5000,
            "name": "return_url",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To launch the Financial Connections authorization flow, create a <code>Session</code>. The session’s <code>client_secret</code> can be used to launch the flow using Stripe.js.</p>",
        "operationId": "PostLinkAccountSessions"
      }
    },
    "/v1/link_account_sessions/{session}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "session",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.session"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Financial Connections <code>Session</code></p>",
        "operationId": "GetLinkAccountSessionsSession"
      }
    },
    "/v1/linked_accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive.",
            "in": "query",
            "name": "account_holder",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "If present, only return accounts that were collected as part of the given session.",
            "in": "query",
            "maxLength": 5000,
            "name": "session",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/financial_connections.account"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/financial_connections/accounts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankConnectionsResourceLinkedAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Financial Connections <code>Account</code> objects.</p>",
        "operationId": "GetLinkedAccounts"
      }
    },
    "/v1/linked_accounts/{account}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an Financial Connections <code>Account</code>.</p>",
        "operationId": "GetLinkedAccountsAccount"
      }
    },
    "/v1/linked_accounts/{account}/disconnect": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Disables your access to a Financial Connections <code>Account</code>. You will no longer be able to access data associated with the account (e.g. balances, transactions).</p>",
        "operationId": "PostLinkedAccountsAccountDisconnect"
      }
    },
    "/v1/linked_accounts/{account}/owners": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The ID of the ownership object to fetch owners from.",
            "in": "query",
            "maxLength": 5000,
            "name": "ownership",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/financial_connections.account_owner"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BankConnectionsResourceOwnerList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists all owners for a given <code>Account</code></p>",
        "operationId": "GetLinkedAccountsAccountOwners"
      }
    },
    "/v1/linked_accounts/{account}/refresh": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of account features that you would like to refresh.",
            "in": "formData",
            "items": {
              "enum": [
                "balance",
                "ownership",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "features",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/financial_connections.account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Refreshes the data associated with a Financial Connections <code>Account</code>.</p>",
        "operationId": "PostLinkedAccountsAccountRefresh"
      }
    },
    "/v1/mandates/{mandate}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "mandate",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/mandate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Mandate object.</p>",
        "operationId": "GetMandatesMandate"
      }
    },
    "/v1/payment_intents": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp or a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return PaymentIntents for the customer that this customer ID specifies.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_intent"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payment_intents",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of PaymentIntents.</p>",
        "operationId": "GetPaymentIntents"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "When you enable this parameter, this PaymentIntent accepts payment methods that you enable in the Dashboard and that are compatible with this PaymentIntent's other parameters.",
            "in": "formData",
            "name": "automatic_payment_methods",
            "type": "object"
          },
          {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "automatic_async",
              "manual"
            ],
            "in": "formData",
            "name": "capture_method",
            "type": "string"
          },
          {
            "description": "Set to `true` to attempt to [confirm this PaymentIntent](https://stripe.com/docs/api/payment_intents/confirm) immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, you can also provide the parameters available in the [Confirm API](https://stripe.com/docs/api/payment_intents/confirm).",
            "in": "formData",
            "name": "confirm",
            "type": "boolean"
          },
          {
            "description": "Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.",
            "enum": [
              "automatic",
              "manual"
            ],
            "in": "formData",
            "name": "confirmation_method",
            "type": "string"
          },
          {
            "description": "ID of the ConfirmationToken used to confirm this PaymentIntent.\n\nIf the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.",
            "in": "formData",
            "maxLength": 5000,
            "name": "confirmation_token",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) is set and this PaymentIntent's payment method is not `card_present`, then the payment method attaches to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete. If the payment method is `card_present` and isn't a digital wallet, then a [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card is created and attached to the Customer instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 1000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. Use this parameter for simpler integrations that don't handle customer actions, such as [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
            "in": "formData",
            "name": "error_on_requires_action",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "ID of the mandate that's used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
            "in": "formData",
            "maxLength": 5000,
            "name": "mandate",
            "type": "string"
          },
          {
            "description": "This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
            "in": "formData",
            "name": "mandate_data"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
            "in": "formData",
            "name": "off_session"
          },
          {
            "description": "The Stripe account ID that these funds are intended for. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.\n\nIf you omit this parameter with `confirm=true`, `customer.default_source` attaches as this PaymentIntent's payment instrument to improve migration for users of the Charges API. We recommend that you explicitly provide the `payment_method` moving forward.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "The ID of the payment method configuration to use with this PaymentIntent.",
            "in": "formData",
            "maxLength": 100,
            "name": "payment_method_configuration",
            "type": "string"
          },
          {
            "description": "If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\nin the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\nproperty on the PaymentIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this PaymentIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types (for example, a card) that this PaymentIntent can use. If you don't provide this, it defaults to [\"card\"]. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "Options to configure Radar. Learn more about [Radar Sessions](https://stripe.com/docs/radar/radar-session).",
            "in": "formData",
            "name": "radar_options",
            "type": "object"
          },
          {
            "description": "Email address to send the receipt to. If you specify `receipt_email` for a payment in live mode, you send a receipt regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
            "in": "formData",
            "name": "receipt_email",
            "type": "string"
          },
          {
            "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
            "enum": [
              "off_session",
              "on_session"
            ],
            "in": "formData",
            "name": "setup_future_usage",
            "type": "string"
          },
          {
            "description": "Shipping information for this PaymentIntent.",
            "in": "formData",
            "name": "shipping",
            "type": "object"
          },
          {
            "description": "Text that appears on the customer's statement as the statement descriptor for a non-card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nSetting this value for a card charge returns an error. For card charges, set the [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic) instead.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor_suffix",
            "type": "string"
          },
          {
            "description": "The parameters that you can use to automatically create a Transfer.\nLearn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          },
          {
            "description": "Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
            "in": "formData",
            "name": "use_stripe_sdk",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a PaymentIntent object.</p>\n\n<p>After the PaymentIntent is created, attach a payment method and <a href=\"/docs/api/payment_intents/confirm\">confirm</a>\nto continue the payment. Learn more about <a href=\"/docs/payments/payment-intents\">the available payment flows\nwith the Payment Intents API</a>.</p>\n\n<p>When you use <code>confirm=true</code> during creation, it’s equivalent to creating\nand confirming the PaymentIntent in the same call. You can use any parameters\navailable in the <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> when you supply\n<code>confirm=true</code>.</p>",
        "operationId": "PostPaymentIntents"
      }
    },
    "/v1/payment_intents/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for payment intents](https://stripe.com/docs/search#query-fields-for-payment-intents).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_intent"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for PaymentIntents you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetPaymentIntentsSearch"
      }
    },
    "/v1/payment_intents/{intent}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The client secret of the PaymentIntent. We require it if you use a publishable key to retrieve the source.",
            "in": "query",
            "maxLength": 5000,
            "name": "client_secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p>\n\n<p>You can retrieve a PaymentIntent client-side using a publishable key when the <code>client_secret</code> is in the query string. </p>\n\n<p>If you retrieve a PaymentIntent with a publishable key, it only returns a subset of properties. Refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>",
        "operationId": "GetPaymentIntentsIntent"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "application_fee_amount"
          },
          {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "automatic_async",
              "manual"
            ],
            "in": "formData",
            "name": "capture_method",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) is set and this PaymentIntent's payment method is not `card_present`, then the payment method attaches to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete. If the payment method is `card_present` and isn't a digital wallet, then a [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card is created and attached to the Customer instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 1000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent. To unset this field to null, pass in an empty string.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "The ID of the payment method configuration to use with this PaymentIntent.",
            "in": "formData",
            "maxLength": 100,
            "name": "payment_method_configuration",
            "type": "string"
          },
          {
            "description": "If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\nin the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\nproperty on the PaymentIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment-method-specific configuration for this PaymentIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types (for example, card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
            "in": "formData",
            "name": "receipt_email"
          },
          {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).\n\nIf you've already set `setup_future_usage` and you're performing a request using a publishable key, you can only update the value from `on_session` to `off_session`.",
            "enum": [
              "",
              "off_session",
              "on_session"
            ],
            "in": "formData",
            "name": "setup_future_usage",
            "type": "string"
          },
          {
            "description": "Shipping information for this PaymentIntent.",
            "in": "formData",
            "name": "shipping"
          },
          {
            "description": "Text that appears on the customer's statement as the statement descriptor for a non-card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nSetting this value for a card charge returns an error. For card charges, set the [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic) instead.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor_suffix",
            "type": "string"
          },
          {
            "description": "Use this parameter to automatically create a Transfer when the payment succeeds. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "A string that identifies the resulting payment as part of a group. You can only provide `transfer_group` if it hasn't been set. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates properties on a PaymentIntent object without confirming.</p>\n\n<p>Depending on which properties you update, you might need to confirm the\nPaymentIntent again. For example, updating the <code>payment_method</code>\nalways requires you to confirm the PaymentIntent again. If you prefer to\nupdate and confirm at the same time, we recommend updating properties through\nthe <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> instead.</p>",
        "operationId": "PostPaymentIntentsIntent"
      }
    },
    "/v1/payment_intents/{intent}/apply_customer_balance": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Amount that you intend to apply to this PaymentIntent from the customer’s cash balance.\n\nA positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (for example, 100 cents to charge 1 USD or 100 to charge 100 JPY, a zero-decimal currency).\n\nThe maximum amount is the amount of the PaymentIntent.\n\nWhen you omit the amount, it defaults to the remaining amount requested on the PaymentIntent.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Manually reconcile the remaining amount for a <code>customer_balance</code> PaymentIntent.</p>",
        "operationId": "PostPaymentIntentsIntentApplyCustomerBalance"
      }
    },
    "/v1/payment_intents/{intent}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reason for canceling this PaymentIntent. Possible values are: `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`",
            "enum": [
              "abandoned",
              "duplicate",
              "fraudulent",
              "requested_by_customer"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "cancellation_reason",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can cancel a PaymentIntent object when it’s in one of these statuses: <code>requires_payment_method</code>, <code>requires_capture</code>, <code>requires_confirmation</code>, <code>requires_action</code> or, <a href=\"/docs/payments/intents\">in rare cases</a>, <code>processing</code>. </p>\n\n<p>After it’s canceled, no additional charges are made by the PaymentIntent and any operations on the PaymentIntent fail with an error. For PaymentIntents with a <code>status</code> of <code>requires_capture</code>, the remaining <code>amount_capturable</code> is automatically refunded. </p>\n\n<p>You can’t cancel the PaymentIntent for a Checkout Session. <a href=\"/docs/api/checkout/sessions/expire\">Expire the Checkout Session</a> instead.</p>",
        "operationId": "PostPaymentIntentsIntentCancel"
      }
    },
    "/v1/payment_intents/{intent}/capture": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount is automatically refunded. Defaults to the full `amount_capturable` if it's not provided.",
            "in": "formData",
            "name": "amount_to_capture",
            "type": "integer"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Defaults to `true`. When capturing a PaymentIntent, setting `final_capture` to `false` notifies Stripe to not release the remaining uncaptured funds to make sure that they're captured in future requests. You can only use this setting when [multicapture](https://stripe.com/docs/payments/multicapture) is available for PaymentIntents.",
            "in": "formData",
            "name": "final_capture",
            "type": "boolean"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Text that appears on the customer's statement as the statement descriptor for a non-card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nSetting this value for a card charge returns an error. For card charges, set the [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic) instead.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor_suffix",
            "type": "string"
          },
          {
            "description": "The parameters that you can use to automatically create a transfer after the payment\nis captured. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Capture the funds of an existing uncaptured PaymentIntent when its status is <code>requires_capture</code>.</p>\n\n<p>Uncaptured PaymentIntents are cancelled a set number of days (7 by default) after their creation.</p>\n\n<p>Learn more about <a href=\"/docs/payments/capture-later\">separate authorization and capture</a>.</p>",
        "operationId": "PostPaymentIntentsIntentCapture"
      }
    },
    "/v1/payment_intents/{intent}/confirm": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "automatic_async",
              "manual"
            ],
            "in": "formData",
            "name": "capture_method",
            "type": "string"
          },
          {
            "description": "The client secret of the PaymentIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "ID of the ConfirmationToken used to confirm this PaymentIntent.\n\nIf the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.",
            "in": "formData",
            "maxLength": 5000,
            "name": "confirmation_token",
            "type": "string"
          },
          {
            "description": "Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication).",
            "in": "formData",
            "name": "error_on_requires_action",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "ID of the mandate that's used for this payment.",
            "in": "formData",
            "maxLength": 5000,
            "name": "mandate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "mandate_data"
          },
          {
            "description": "Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards).",
            "in": "formData",
            "name": "off_session"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\nin the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\nproperty on the PaymentIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this PaymentIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types (for example, a card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "Options to configure Radar. Learn more about [Radar Sessions](https://stripe.com/docs/radar/radar-session).",
            "in": "formData",
            "name": "radar_options",
            "type": "object"
          },
          {
            "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
            "in": "formData",
            "name": "receipt_email"
          },
          {
            "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.\nIf you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.\nThis parameter is only used for cards and other redirect-based payment methods.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).\n\nIf you've already set `setup_future_usage` and you're performing a request using a publishable key, you can only update the value from `on_session` to `off_session`.",
            "enum": [
              "",
              "off_session",
              "on_session"
            ],
            "in": "formData",
            "name": "setup_future_usage",
            "type": "string"
          },
          {
            "description": "Shipping information for this PaymentIntent.",
            "in": "formData",
            "name": "shipping"
          },
          {
            "description": "Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
            "in": "formData",
            "name": "use_stripe_sdk",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Confirm that your customer intends to pay with current or provided\npayment method. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.\nIf the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If payment fails,\nthe PaymentIntent transitions to the <code>requires_payment_method</code> status or the\n<code>canceled</code> status if the confirmation limit is reached. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).\nIf the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted\nusing our <a href=\"/docs/stripe-js/reference#stripe-handle-card-payment\">client SDKs</a>\nand the PaymentIntent’s <a href=\"#payment_intent_object-client_secret\">client_secret</a>.\nAfter <code>next_action</code>s are handled by the client, no additional\nconfirmation is required to complete the payment.\nIf the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be\ninitiated using a secret key.\nIf any actions are required for the payment, the PaymentIntent will\nreturn to the <code>requires_confirmation</code> state\nafter those actions are completed. Your server needs to then\nexplicitly re-confirm the PaymentIntent to initiate the next payment\nattempt.\nThere is a variable upper limit on how many times a PaymentIntent can be confirmed.\nAfter this limit is reached, any further calls to this endpoint will\ntransition the PaymentIntent to the <code>canceled</code> state.</p>",
        "operationId": "PostPaymentIntentsIntentConfirm"
      }
    },
    "/v1/payment_intents/{intent}/increment_authorization": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated total amount that you intend to collect from the cardholder. This amount must be greater than the currently authorized amount.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 1000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Text that appears on the customer's statement as the statement descriptor for a non-card or card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "The parameters used to automatically create a transfer after the payment is captured.\nLearn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Perform an incremental authorization on an eligible\n<a href=\"/docs/api/payment_intents/object\">PaymentIntent</a>. To be eligible, the\nPaymentIntent’s status must be <code>requires_capture</code> and\n<a href=\"/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported\">incremental_authorization_supported</a>\nmust be <code>true</code>.</p>\n\n<p>Incremental authorizations attempt to increase the authorized amount on\nyour customer’s card to the new, higher <code>amount</code> provided. Similar to the\ninitial authorization, incremental authorizations can be declined. A\nsingle PaymentIntent can call this endpoint multiple times to further\nincrease the authorized amount.</p>\n\n<p>If the incremental authorization succeeds, the PaymentIntent object\nreturns with the updated\n<a href=\"/docs/api/payment_intents/object#payment_intent_object-amount\">amount</a>.\nIf the incremental authorization fails, a\n<a href=\"/docs/error-codes#card-declined\">card_declined</a> error returns, and no other\nfields on the PaymentIntent or Charge update. The PaymentIntent\nobject remains capturable for the previously authorized amount.</p>\n\n<p>Each PaymentIntent can have a maximum of 10 incremental authorization attempts, including declines.\nAfter it’s captured, a PaymentIntent can no longer be incremented.</p>\n\n<p>Learn more about <a href=\"/docs/terminal/features/incremental-authorizations\">incremental authorizations</a>.</p>",
        "operationId": "PostPaymentIntentsIntentIncrementAuthorization"
      }
    },
    "/v1/payment_intents/{intent}/verify_microdeposits": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
            "in": "formData",
            "items": {
              "type": "integer"
            },
            "name": "amounts",
            "type": "array"
          },
          {
            "description": "The client secret of the PaymentIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "A six-character code starting with SM present in the microdeposit sent to the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "descriptor_code",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Verifies microdeposits on a PaymentIntent object.</p>",
        "operationId": "PostPaymentIntentsIntentVerifyMicrodeposits"
      }
    },
    "/v1/payment_links": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return payment links that are active or inactive (e.g., pass `false` to list all inactive payment links).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_link"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payment_links",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentLinksResourcePaymentLinkList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your payment links.</p>",
        "operationId": "GetPaymentLinks"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Behavior after the purchase is complete.",
            "in": "formData",
            "name": "after_completion",
            "type": "object"
          },
          {
            "description": "Enables user redeemable promotion codes.",
            "in": "formData",
            "name": "allow_promotion_codes",
            "type": "boolean"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Can only be applied when there are no line items with recurring prices.",
            "in": "formData",
            "name": "application_fee_amount",
            "type": "integer"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.",
            "in": "formData",
            "name": "application_fee_percent",
            "type": "number"
          },
          {
            "description": "Configuration for automatic tax collection.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Configuration for collecting the customer's billing address. Defaults to `auto`.",
            "enum": [
              "auto",
              "required"
            ],
            "in": "formData",
            "name": "billing_address_collection",
            "type": "string"
          },
          {
            "description": "Configure fields to gather active consent from customers.",
            "in": "formData",
            "name": "consent_collection",
            "type": "object"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies) and supported by each line item's price.",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
            "in": "formData",
            "items": {
              "properties": {
                "dropdown": {
                  "properties": {
                    "options": {
                      "items": {
                        "properties": {
                          "label": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "value": {
                            "maxLength": 100,
                            "type": "string"
                          }
                        },
                        "required": [
                          "label",
                          "value"
                        ],
                        "title": "custom_field_option_param",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "options"
                  ],
                  "title": "custom_field_dropdown_param",
                  "type": "object"
                },
                "key": {
                  "maxLength": 200,
                  "type": "string"
                },
                "label": {
                  "properties": {
                    "custom": {
                      "maxLength": 50,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "custom"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "custom",
                    "type"
                  ],
                  "title": "custom_field_label_param",
                  "type": "object"
                },
                "numeric": {
                  "properties": {
                    "maximum_length": {
                      "type": "integer"
                    },
                    "minimum_length": {
                      "type": "integer"
                    }
                  },
                  "title": "custom_field_numeric_param",
                  "type": "object"
                },
                "optional": {
                  "type": "boolean"
                },
                "text": {
                  "properties": {
                    "maximum_length": {
                      "type": "integer"
                    },
                    "minimum_length": {
                      "type": "integer"
                    }
                  },
                  "title": "custom_field_text_param",
                  "type": "object"
                },
                "type": {
                  "enum": [
                    "dropdown",
                    "numeric",
                    "text"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "key",
                "label",
                "type"
              ],
              "title": "custom_field_param",
              "type": "object"
            },
            "name": "custom_fields",
            "type": "array"
          },
          {
            "description": "Display additional text for your customers using custom text.",
            "in": "formData",
            "name": "custom_text",
            "type": "object"
          },
          {
            "description": "Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers).",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "customer_creation",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The custom message to be displayed to a customer when a payment link is no longer active.",
            "in": "formData",
            "maxLength": 500,
            "name": "inactive_message",
            "type": "string"
          },
          {
            "description": "Generate a post-purchase Invoice for one-time payments.",
            "in": "formData",
            "name": "invoice_creation",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported.",
            "in": "formData",
            "items": {
              "properties": {
                "adjustable_quantity": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "maximum": {
                      "type": "integer"
                    },
                    "minimum": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "adjustable_quantity_params",
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              },
              "required": [
                "price",
                "quantity"
              ],
              "title": "line_items_create_params",
              "type": "object"
            },
            "name": "line_items",
            "required": true,
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The account on behalf of which to charge.",
            "in": "formData",
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.",
            "in": "formData",
            "name": "payment_intent_data",
            "type": "object"
          },
          {
            "description": "Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.\n\nCan only be set in `subscription` mode. Defaults to `always`.\n\nIf you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "payment_method_collection",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types that customers can use. If no value is passed, Stripe will dynamically show relevant payment methods from your [payment method settings](https://dashboard.stripe.com/settings/payment_methods) (20+ payment methods [supported](https://stripe.com/docs/payments/payment-methods/integration-options#payment-method-product-support)).",
            "in": "formData",
            "items": {
              "enum": [
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "cashapp",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "klarna",
                "konbini",
                "link",
                "mobilepay",
                "multibanco",
                "oxxo",
                "p24",
                "paynow",
                "paypal",
                "pix",
                "promptpay",
                "sepa_debit",
                "sofort",
                "swish",
                "twint",
                "us_bank_account",
                "wechat_pay",
                "zip"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "Controls phone number collection settings during checkout.\n\nWe recommend that you review your privacy policy and check with your legal contacts.",
            "in": "formData",
            "name": "phone_number_collection",
            "type": "object"
          },
          {
            "description": "Settings that restrict the usage of a payment link.",
            "in": "formData",
            "name": "restrictions",
            "type": "object"
          },
          {
            "description": "Configuration for collecting the customer's shipping address.",
            "in": "formData",
            "name": "shipping_address_collection",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The shipping rate options to apply to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.",
            "in": "formData",
            "items": {
              "properties": {
                "shipping_rate": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "title": "shipping_option_params",
              "type": "object"
            },
            "name": "shipping_options",
            "type": "array"
          },
          {
            "description": "Describes the type of transaction being performed in order to customize relevant text on the page, such as the submit button. Changing this value will also affect the hostname in the [url](https://stripe.com/docs/api/payment_links/payment_links/object#url) property (example: `donate.stripe.com`).",
            "enum": [
              "auto",
              "book",
              "donate",
              "pay"
            ],
            "in": "formData",
            "name": "submit_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.",
            "in": "formData",
            "name": "subscription_data",
            "type": "object"
          },
          {
            "description": "Controls tax ID collection during checkout.",
            "in": "formData",
            "name": "tax_id_collection",
            "type": "object"
          },
          {
            "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a payment link.</p>",
        "operationId": "PostPaymentLinks"
      }
    },
    "/v1/payment_links/{payment_link}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_link",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a payment link.</p>",
        "operationId": "GetPaymentLinksPaymentLink"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_link",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Behavior after the purchase is complete.",
            "in": "formData",
            "name": "after_completion",
            "type": "object"
          },
          {
            "description": "Enables user redeemable promotion codes.",
            "in": "formData",
            "name": "allow_promotion_codes",
            "type": "boolean"
          },
          {
            "description": "Configuration for automatic tax collection.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Configuration for collecting the customer's billing address. Defaults to `auto`.",
            "enum": [
              "auto",
              "required"
            ],
            "in": "formData",
            "name": "billing_address_collection",
            "type": "string"
          },
          {
            "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
            "in": "formData",
            "name": "custom_fields"
          },
          {
            "description": "Display additional text for your customers using custom text.",
            "in": "formData",
            "name": "custom_text",
            "type": "object"
          },
          {
            "description": "Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers).",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "customer_creation",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The custom message to be displayed to a customer when a payment link is no longer active.",
            "in": "formData",
            "name": "inactive_message"
          },
          {
            "description": "Generate a post-purchase Invoice for one-time payments.",
            "in": "formData",
            "name": "invoice_creation",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported.",
            "in": "formData",
            "items": {
              "properties": {
                "adjustable_quantity": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "maximum": {
                      "type": "integer"
                    },
                    "minimum": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "adjustable_quantity_params",
                  "type": "object"
                },
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "title": "line_items_update_params",
              "type": "object"
            },
            "name": "line_items",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.",
            "in": "formData",
            "name": "payment_intent_data",
            "type": "object"
          },
          {
            "description": "Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.\n\nCan only be set in `subscription` mode. Defaults to `always`.\n\nIf you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).",
            "enum": [
              "always",
              "if_required"
            ],
            "in": "formData",
            "name": "payment_method_collection",
            "type": "string"
          },
          {
            "description": "The list of payment method types that customers can use. Pass an empty string to enable dynamic payment methods that use your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).",
            "in": "formData",
            "name": "payment_method_types"
          },
          {
            "description": "Settings that restrict the usage of a payment link.",
            "in": "formData",
            "name": "restrictions"
          },
          {
            "description": "Configuration for collecting the customer's shipping address.",
            "in": "formData",
            "name": "shipping_address_collection"
          },
          {
            "description": "When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.",
            "in": "formData",
            "name": "subscription_data",
            "type": "object"
          },
          {
            "description": "Controls tax ID collection during checkout.",
            "in": "formData",
            "name": "tax_id_collection",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_link"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a payment link.</p>",
        "operationId": "PostPaymentLinksPaymentLink"
      }
    },
    "/v1/payment_links/{payment_link}/line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_link",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentLinksResourceListLineItems",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a payment link, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetPaymentLinksPaymentLinkLineItems"
      }
    },
    "/v1/payment_method_configurations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Connect application to filter by.",
            "in": "query",
            "name": "application",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_method_configuration"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payment_method_configurations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentMethodConfigResourcePaymentMethodConfigurationsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List payment method configurations</p>",
        "operationId": "GetPaymentMethodConfigurations"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Canadian pre-authorized debit payments, check this [page](https://stripe.com/docs/payments/acss-debit) for more details like country availability.",
            "in": "formData",
            "name": "acss_debit",
            "type": "object"
          },
          {
            "description": "[Affirm](https://www.affirm.com/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https://stripe.com/docs/payments/affirm) for more details like country availability.",
            "in": "formData",
            "name": "affirm",
            "type": "object"
          },
          {
            "description": "Afterpay gives your customers a way to pay for purchases in installments, check this [page](https://stripe.com/docs/payments/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.",
            "in": "formData",
            "name": "afterpay_clearpay",
            "type": "object"
          },
          {
            "description": "Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer's login credentials. Check this [page](https://stripe.com/docs/payments/alipay) for more details.",
            "in": "formData",
            "name": "alipay",
            "type": "object"
          },
          {
            "description": "Amazon Pay is a wallet payment method that lets your customers check out the same way as on Amazon.",
            "in": "formData",
            "name": "amazon_pay",
            "type": "object"
          },
          {
            "description": "Stripe users can accept [Apple Pay](/payments/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](/pricing) is the same as other card transactions. Check this [page](https://stripe.com/docs/apple-pay) for more details.",
            "in": "formData",
            "name": "apple_pay",
            "type": "object"
          },
          {
            "description": "Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.",
            "in": "formData",
            "name": "apple_pay_later",
            "type": "object"
          },
          {
            "description": "Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https://stripe.com/docs/payments/au-becs-debit) for more details.",
            "in": "formData",
            "name": "au_becs_debit",
            "type": "object"
          },
          {
            "description": "Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https://stripe.com/docs/payments/payment-methods/bacs-debit) for more details.",
            "in": "formData",
            "name": "bacs_debit",
            "type": "object"
          },
          {
            "description": "Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https://stripe.com/docs/api/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https://stripe.com/docs/payments/bancontact) for more details.",
            "in": "formData",
            "name": "bancontact",
            "type": "object"
          },
          {
            "description": "BLIK is a [single use](https://stripe.com/docs/payments/payment-methods#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https://stripe.com/docs/payments/blik) for more details.",
            "in": "formData",
            "name": "blik",
            "type": "object"
          },
          {
            "description": "Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https://stripe.com/docs/payments/boleto) for more details.",
            "in": "formData",
            "name": "boleto",
            "type": "object"
          },
          {
            "description": "Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.",
            "in": "formData",
            "name": "card",
            "type": "object"
          },
          {
            "description": "Cartes Bancaires is France's local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https://stripe.com/docs/payments/cartes-bancaires) for more details.",
            "in": "formData",
            "name": "cartes_bancaires",
            "type": "object"
          },
          {
            "description": "Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https://stripe.com/docs/payments/cash-app-pay) for more details.",
            "in": "formData",
            "name": "cashapp",
            "type": "object"
          },
          {
            "description": "Uses a customer’s [cash balance](https://stripe.com/docs/payments/customer-balance) for the payment. The cash balance can be funded via a bank transfer. Check this [page](https://stripe.com/docs/payments/bank-transfers) for more details.",
            "in": "formData",
            "name": "customer_balance",
            "type": "object"
          },
          {
            "description": "EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https://stripe.com/docs/payments/eps) for more details.",
            "in": "formData",
            "name": "eps",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https://stripe.com/docs/payments/fpx) for more details.",
            "in": "formData",
            "name": "fpx",
            "type": "object"
          },
          {
            "description": "giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https://stripe.com/docs/payments/giropay) for more details.",
            "in": "formData",
            "name": "giropay",
            "type": "object"
          },
          {
            "description": "Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer's Google account. Check this [page](https://stripe.com/docs/google-pay) for more details.",
            "in": "formData",
            "name": "google_pay",
            "type": "object"
          },
          {
            "description": "GrabPay is a payment method developed by [Grab](https://www.grab.com/sg/consumer/finance/pay/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https://stripe.com/docs/payments/grabpay) for more details.",
            "in": "formData",
            "name": "grabpay",
            "type": "object"
          },
          {
            "description": "iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https://stripe.com/docs/payments/ideal) for more details.",
            "in": "formData",
            "name": "ideal",
            "type": "object"
          },
          {
            "description": "JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https://support.stripe.com/questions/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.",
            "in": "formData",
            "name": "jcb",
            "type": "object"
          },
          {
            "description": "Klarna gives customers a range of [payment options](https://stripe.com/docs/payments/klarna#payment-options) during checkout. Available payment options vary depending on the customer's billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https://stripe.com/docs/payments/klarna) for more details.",
            "in": "formData",
            "name": "klarna",
            "type": "object"
          },
          {
            "description": "Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https://stripe.com/docs/payments/konbini) for more details.",
            "in": "formData",
            "name": "konbini",
            "type": "object"
          },
          {
            "description": "[Link](https://stripe.com/docs/payments/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.",
            "in": "formData",
            "name": "link",
            "type": "object"
          },
          {
            "description": "MobilePay is a [single-use](https://stripe.com/docs/payments/payment-methods#usage) card wallet payment method used in Denmark and Finland. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the MobilePay app. Check this [page](https://stripe.com/docs/payments/mobilepay) for more details.",
            "in": "formData",
            "name": "mobilepay",
            "type": "object"
          },
          {
            "description": "Stripe users in Europe and the United States can accept Multibanco payments from customers in Portugal using [Sources](https://stripe.com/docs/sources)—a single integration path for creating payments using any supported method.",
            "in": "formData",
            "name": "multibanco",
            "type": "object"
          },
          {
            "description": "Configuration name.",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "type": "string"
          },
          {
            "description": "OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https://stripe.com/docs/payments/oxxo) for more details.",
            "in": "formData",
            "name": "oxxo",
            "type": "object"
          },
          {
            "description": "Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https://stripe.com/docs/payments/p24) for more details.",
            "in": "formData",
            "name": "p24",
            "type": "object"
          },
          {
            "description": "Configuration's parent configuration. Specify to create a child configuration.",
            "in": "formData",
            "maxLength": 100,
            "name": "parent",
            "type": "string"
          },
          {
            "description": "PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https://stripe.com/docs/payments/paynow) for more details.",
            "in": "formData",
            "name": "paynow",
            "type": "object"
          },
          {
            "description": "PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https://stripe.com/docs/payments/paypal) for more details.",
            "in": "formData",
            "name": "paypal",
            "type": "object"
          },
          {
            "description": "PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https://stripe.com/docs/payments/promptpay) for more details.",
            "in": "formData",
            "name": "promptpay",
            "type": "object"
          },
          {
            "description": "Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.",
            "in": "formData",
            "name": "revolut_pay",
            "type": "object"
          },
          {
            "description": "The [Single Euro Payments Area (SEPA)](https://en.wikipedia.org/wiki/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https://stripe.com/docs/payments/sepa-debit) for more details.",
            "in": "formData",
            "name": "sepa_debit",
            "type": "object"
          },
          {
            "description": "Stripe users in Europe and the United States can use the [Payment Intents API](https://stripe.com/docs/payments/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https://www.sofort.com/) payments from customers. Check this [page](https://stripe.com/docs/payments/sofort) for more details.",
            "in": "formData",
            "name": "sofort",
            "type": "object"
          },
          {
            "description": "Swish is a [real-time](https://stripe.com/docs/payments/real-time) payment method popular in Sweden. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the Swish mobile app and the Swedish BankID mobile app. Check this [page](https://stripe.com/docs/payments/swish) for more details.",
            "in": "formData",
            "name": "swish",
            "type": "object"
          },
          {
            "description": "Twint is a payment method popular in Switzerland. It allows customers to pay using their mobile phone. Check this [page](https://docs.stripe.com/payments/twint) for more details.",
            "in": "formData",
            "name": "twint",
            "type": "object"
          },
          {
            "description": "Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https://stripe.com/docs/payments/ach-debit) for more details.",
            "in": "formData",
            "name": "us_bank_account",
            "type": "object"
          },
          {
            "description": "WeChat, owned by Tencent, is China's leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food/nutrition. Check this [page](https://stripe.com/docs/payments/wechat-pay) for more details.",
            "in": "formData",
            "name": "wechat_pay",
            "type": "object"
          },
          {
            "description": "Zip gives your customers a way to split purchases over a series of payments. Check this [page](https://stripe.com/docs/payments/zip) for more details like country availability.",
            "in": "formData",
            "name": "zip",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a payment method configuration</p>",
        "operationId": "PostPaymentMethodConfigurations"
      }
    },
    "/v1/payment_method_configurations/{configuration}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve payment method configuration</p>",
        "operationId": "GetPaymentMethodConfigurationsConfiguration"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "Canadian pre-authorized debit payments, check this [page](https://stripe.com/docs/payments/acss-debit) for more details like country availability.",
            "in": "formData",
            "name": "acss_debit",
            "type": "object"
          },
          {
            "description": "Whether the configuration can be used for new payments.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "[Affirm](https://www.affirm.com/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https://stripe.com/docs/payments/affirm) for more details like country availability.",
            "in": "formData",
            "name": "affirm",
            "type": "object"
          },
          {
            "description": "Afterpay gives your customers a way to pay for purchases in installments, check this [page](https://stripe.com/docs/payments/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.",
            "in": "formData",
            "name": "afterpay_clearpay",
            "type": "object"
          },
          {
            "description": "Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer's login credentials. Check this [page](https://stripe.com/docs/payments/alipay) for more details.",
            "in": "formData",
            "name": "alipay",
            "type": "object"
          },
          {
            "description": "Amazon Pay is a wallet payment method that lets your customers check out the same way as on Amazon.",
            "in": "formData",
            "name": "amazon_pay",
            "type": "object"
          },
          {
            "description": "Stripe users can accept [Apple Pay](/payments/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](/pricing) is the same as other card transactions. Check this [page](https://stripe.com/docs/apple-pay) for more details.",
            "in": "formData",
            "name": "apple_pay",
            "type": "object"
          },
          {
            "description": "Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.",
            "in": "formData",
            "name": "apple_pay_later",
            "type": "object"
          },
          {
            "description": "Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https://stripe.com/docs/payments/au-becs-debit) for more details.",
            "in": "formData",
            "name": "au_becs_debit",
            "type": "object"
          },
          {
            "description": "Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https://stripe.com/docs/payments/payment-methods/bacs-debit) for more details.",
            "in": "formData",
            "name": "bacs_debit",
            "type": "object"
          },
          {
            "description": "Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https://stripe.com/docs/api/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https://stripe.com/docs/payments/bancontact) for more details.",
            "in": "formData",
            "name": "bancontact",
            "type": "object"
          },
          {
            "description": "BLIK is a [single use](https://stripe.com/docs/payments/payment-methods#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https://stripe.com/docs/payments/blik) for more details.",
            "in": "formData",
            "name": "blik",
            "type": "object"
          },
          {
            "description": "Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https://stripe.com/docs/payments/boleto) for more details.",
            "in": "formData",
            "name": "boleto",
            "type": "object"
          },
          {
            "description": "Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.",
            "in": "formData",
            "name": "card",
            "type": "object"
          },
          {
            "description": "Cartes Bancaires is France's local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https://stripe.com/docs/payments/cartes-bancaires) for more details.",
            "in": "formData",
            "name": "cartes_bancaires",
            "type": "object"
          },
          {
            "description": "Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https://stripe.com/docs/payments/cash-app-pay) for more details.",
            "in": "formData",
            "name": "cashapp",
            "type": "object"
          },
          {
            "description": "Uses a customer’s [cash balance](https://stripe.com/docs/payments/customer-balance) for the payment. The cash balance can be funded via a bank transfer. Check this [page](https://stripe.com/docs/payments/bank-transfers) for more details.",
            "in": "formData",
            "name": "customer_balance",
            "type": "object"
          },
          {
            "description": "EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https://stripe.com/docs/payments/eps) for more details.",
            "in": "formData",
            "name": "eps",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https://stripe.com/docs/payments/fpx) for more details.",
            "in": "formData",
            "name": "fpx",
            "type": "object"
          },
          {
            "description": "giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https://stripe.com/docs/payments/giropay) for more details.",
            "in": "formData",
            "name": "giropay",
            "type": "object"
          },
          {
            "description": "Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer's Google account. Check this [page](https://stripe.com/docs/google-pay) for more details.",
            "in": "formData",
            "name": "google_pay",
            "type": "object"
          },
          {
            "description": "GrabPay is a payment method developed by [Grab](https://www.grab.com/sg/consumer/finance/pay/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https://stripe.com/docs/payments/grabpay) for more details.",
            "in": "formData",
            "name": "grabpay",
            "type": "object"
          },
          {
            "description": "iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https://stripe.com/docs/payments/ideal) for more details.",
            "in": "formData",
            "name": "ideal",
            "type": "object"
          },
          {
            "description": "JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https://support.stripe.com/questions/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.",
            "in": "formData",
            "name": "jcb",
            "type": "object"
          },
          {
            "description": "Klarna gives customers a range of [payment options](https://stripe.com/docs/payments/klarna#payment-options) during checkout. Available payment options vary depending on the customer's billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https://stripe.com/docs/payments/klarna) for more details.",
            "in": "formData",
            "name": "klarna",
            "type": "object"
          },
          {
            "description": "Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https://stripe.com/docs/payments/konbini) for more details.",
            "in": "formData",
            "name": "konbini",
            "type": "object"
          },
          {
            "description": "[Link](https://stripe.com/docs/payments/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.",
            "in": "formData",
            "name": "link",
            "type": "object"
          },
          {
            "description": "MobilePay is a [single-use](https://stripe.com/docs/payments/payment-methods#usage) card wallet payment method used in Denmark and Finland. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the MobilePay app. Check this [page](https://stripe.com/docs/payments/mobilepay) for more details.",
            "in": "formData",
            "name": "mobilepay",
            "type": "object"
          },
          {
            "description": "Stripe users in Europe and the United States can accept Multibanco payments from customers in Portugal using [Sources](https://stripe.com/docs/sources)—a single integration path for creating payments using any supported method.",
            "in": "formData",
            "name": "multibanco",
            "type": "object"
          },
          {
            "description": "Configuration name.",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "type": "string"
          },
          {
            "description": "OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https://stripe.com/docs/payments/oxxo) for more details.",
            "in": "formData",
            "name": "oxxo",
            "type": "object"
          },
          {
            "description": "Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https://stripe.com/docs/payments/p24) for more details.",
            "in": "formData",
            "name": "p24",
            "type": "object"
          },
          {
            "description": "PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https://stripe.com/docs/payments/paynow) for more details.",
            "in": "formData",
            "name": "paynow",
            "type": "object"
          },
          {
            "description": "PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https://stripe.com/docs/payments/paypal) for more details.",
            "in": "formData",
            "name": "paypal",
            "type": "object"
          },
          {
            "description": "PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https://stripe.com/docs/payments/promptpay) for more details.",
            "in": "formData",
            "name": "promptpay",
            "type": "object"
          },
          {
            "description": "Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.",
            "in": "formData",
            "name": "revolut_pay",
            "type": "object"
          },
          {
            "description": "The [Single Euro Payments Area (SEPA)](https://en.wikipedia.org/wiki/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https://stripe.com/docs/payments/sepa-debit) for more details.",
            "in": "formData",
            "name": "sepa_debit",
            "type": "object"
          },
          {
            "description": "Stripe users in Europe and the United States can use the [Payment Intents API](https://stripe.com/docs/payments/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https://www.sofort.com/) payments from customers. Check this [page](https://stripe.com/docs/payments/sofort) for more details.",
            "in": "formData",
            "name": "sofort",
            "type": "object"
          },
          {
            "description": "Swish is a [real-time](https://stripe.com/docs/payments/real-time) payment method popular in Sweden. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the Swish mobile app and the Swedish BankID mobile app. Check this [page](https://stripe.com/docs/payments/swish) for more details.",
            "in": "formData",
            "name": "swish",
            "type": "object"
          },
          {
            "description": "Twint is a payment method popular in Switzerland. It allows customers to pay using their mobile phone. Check this [page](https://docs.stripe.com/payments/twint) for more details.",
            "in": "formData",
            "name": "twint",
            "type": "object"
          },
          {
            "description": "Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https://stripe.com/docs/payments/ach-debit) for more details.",
            "in": "formData",
            "name": "us_bank_account",
            "type": "object"
          },
          {
            "description": "WeChat, owned by Tencent, is China's leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food/nutrition. Check this [page](https://stripe.com/docs/payments/wechat-pay) for more details.",
            "in": "formData",
            "name": "wechat_pay",
            "type": "object"
          },
          {
            "description": "Zip gives your customers a way to split purchases over a series of payments. Check this [page](https://stripe.com/docs/payments/zip) for more details like country availability.",
            "in": "formData",
            "name": "zip",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Update payment method configuration</p>",
        "operationId": "PostPaymentMethodConfigurationsConfiguration"
      }
    },
    "/v1/payment_method_domains": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The domain name that this payment method domain object represents.",
            "in": "query",
            "maxLength": 5000,
            "name": "domain_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Whether this payment method domain is enabled. If the domain is not enabled, payment methods will not appear in Elements",
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_method_domain"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payment_method_domains",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentMethodDomainResourcePaymentMethodDomainList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Lists the details of existing payment method domains.</p>",
        "operationId": "GetPaymentMethodDomains"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The domain name that this payment method domain object represents.",
            "in": "formData",
            "maxLength": 5000,
            "name": "domain_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.",
            "in": "formData",
            "name": "enabled",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a payment method domain.</p>",
        "operationId": "PostPaymentMethodDomains"
      }
    },
    "/v1/payment_method_domains/{payment_method_domain}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method_domain",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing payment method domain.</p>",
        "operationId": "GetPaymentMethodDomainsPaymentMethodDomain"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method_domain",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.",
            "in": "formData",
            "name": "enabled",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing payment method domain.</p>",
        "operationId": "PostPaymentMethodDomainsPaymentMethodDomain"
      }
    },
    "/v1/payment_method_domains/{payment_method_domain}/validate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method_domain",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method_domain"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Some payment methods such as Apple Pay require additional steps to verify a domain. If the requirements weren’t satisfied when the domain was created, the payment method will be inactive on the domain.\nThe payment method doesn’t appear in Elements for this domain until it is active.</p>\n\n<p>To activate a payment method on an existing payment method domain, complete the required validation steps specific to the payment method, and then validate the payment method domain with this endpoint.</p>\n\n<p>Related guides: <a href=\"/docs/payments/payment-methods/pmd-registration\">Payment method domains</a>.</p>",
        "operationId": "PostPaymentMethodDomainsPaymentMethodDomainValidate"
      }
    },
    "/v1/payment_methods": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the customer whose PaymentMethods will be retrieved.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.",
            "enum": [
              "acss_debit",
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "amazon_pay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "klarna",
              "konbini",
              "link",
              "mobilepay",
              "multibanco",
              "oxxo",
              "p24",
              "paynow",
              "paypal",
              "pix",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "swish",
              "twint",
              "us_bank_account",
              "wechat_pay",
              "zip"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payment_method"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payment_methods",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentMethodList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of PaymentMethods for Treasury flows. If you want to list the PaymentMethods attached to a Customer for payments, you should use the <a href=\"/docs/api/payment_methods/customer_list\">List a Customer’s PaymentMethods</a> API instead.</p>",
        "operationId": "GetPaymentMethods"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If this is an `acss_debit` PaymentMethod, this hash contains details about the ACSS Debit payment method.",
            "in": "formData",
            "name": "acss_debit",
            "type": "object"
          },
          {
            "description": "If this is an `affirm` PaymentMethod, this hash contains details about the Affirm payment method.",
            "in": "formData",
            "name": "affirm",
            "type": "object"
          },
          {
            "description": "If this is an `AfterpayClearpay` PaymentMethod, this hash contains details about the AfterpayClearpay payment method.",
            "in": "formData",
            "name": "afterpay_clearpay",
            "type": "object"
          },
          {
            "description": "If this is an `Alipay` PaymentMethod, this hash contains details about the Alipay payment method.",
            "in": "formData",
            "name": "alipay",
            "type": "object"
          },
          {
            "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.",
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "in": "formData",
            "name": "allow_redisplay",
            "type": "string"
          },
          {
            "description": "If this is a AmazonPay PaymentMethod, this hash contains details about the AmazonPay payment method.",
            "in": "formData",
            "name": "amazon_pay",
            "type": "object"
          },
          {
            "description": "If this is an `au_becs_debit` PaymentMethod, this hash contains details about the bank account.",
            "in": "formData",
            "name": "au_becs_debit",
            "type": "object"
          },
          {
            "description": "If this is a `bacs_debit` PaymentMethod, this hash contains details about the Bacs Direct Debit bank account.",
            "in": "formData",
            "name": "bacs_debit",
            "type": "object"
          },
          {
            "description": "If this is a `bancontact` PaymentMethod, this hash contains details about the Bancontact payment method.",
            "in": "formData",
            "name": "bancontact",
            "type": "object"
          },
          {
            "description": "Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.",
            "in": "formData",
            "name": "billing_details",
            "type": "object"
          },
          {
            "description": "If this is a `blik` PaymentMethod, this hash contains details about the BLIK payment method.",
            "in": "formData",
            "name": "blik",
            "type": "object"
          },
          {
            "description": "If this is a `boleto` PaymentMethod, this hash contains details about the Boleto payment method.",
            "in": "formData",
            "name": "boleto",
            "type": "object"
          },
          {
            "description": "If this is a `card` PaymentMethod, this hash contains the user's card details. For backwards compatibility, you can alternatively provide a Stripe token (e.g., for Apple Pay, Amex Express Checkout, or legacy Checkout) into the card hash with format `card: {token: \"tok_visa\"}`. When providing a card number, you must meet the requirements for [PCI compliance](https://stripe.com/docs/security#validating-pci-compliance). We strongly recommend using Stripe.js instead of interacting with this API directly.",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "description": "If this is a `cashapp` PaymentMethod, this hash contains details about the Cash App Pay payment method.",
            "in": "formData",
            "name": "cashapp",
            "type": "object"
          },
          {
            "description": "The `Customer` to whom the original PaymentMethod is attached.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "If this is a `customer_balance` PaymentMethod, this hash contains details about the CustomerBalance payment method.",
            "in": "formData",
            "name": "customer_balance",
            "type": "object"
          },
          {
            "description": "If this is an `eps` PaymentMethod, this hash contains details about the EPS payment method.",
            "in": "formData",
            "name": "eps",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "If this is an `fpx` PaymentMethod, this hash contains details about the FPX payment method.",
            "in": "formData",
            "name": "fpx",
            "type": "object"
          },
          {
            "description": "If this is a `giropay` PaymentMethod, this hash contains details about the Giropay payment method.",
            "in": "formData",
            "name": "giropay",
            "type": "object"
          },
          {
            "description": "If this is a `grabpay` PaymentMethod, this hash contains details about the GrabPay payment method.",
            "in": "formData",
            "name": "grabpay",
            "type": "object"
          },
          {
            "description": "If this is an `ideal` PaymentMethod, this hash contains details about the iDEAL payment method.",
            "in": "formData",
            "name": "ideal",
            "type": "object"
          },
          {
            "description": "If this is an `interac_present` PaymentMethod, this hash contains details about the Interac Present payment method.",
            "in": "formData",
            "name": "interac_present",
            "type": "object"
          },
          {
            "description": "If this is a `klarna` PaymentMethod, this hash contains details about the Klarna payment method.",
            "in": "formData",
            "name": "klarna",
            "type": "object"
          },
          {
            "description": "If this is a `konbini` PaymentMethod, this hash contains details about the Konbini payment method.",
            "in": "formData",
            "name": "konbini",
            "type": "object"
          },
          {
            "description": "If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.",
            "in": "formData",
            "name": "link",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "If this is a `mobilepay` PaymentMethod, this hash contains details about the MobilePay payment method.",
            "in": "formData",
            "name": "mobilepay",
            "type": "object"
          },
          {
            "description": "If this is a `multibanco` PaymentMethod, this hash contains details about the Multibanco payment method.",
            "in": "formData",
            "name": "multibanco",
            "type": "object"
          },
          {
            "description": "If this is an `oxxo` PaymentMethod, this hash contains details about the OXXO payment method.",
            "in": "formData",
            "name": "oxxo",
            "type": "object"
          },
          {
            "description": "If this is a `p24` PaymentMethod, this hash contains details about the P24 payment method.",
            "in": "formData",
            "name": "p24",
            "type": "object"
          },
          {
            "description": "The PaymentMethod to share.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "If this is a `paynow` PaymentMethod, this hash contains details about the PayNow payment method.",
            "in": "formData",
            "name": "paynow",
            "type": "object"
          },
          {
            "description": "If this is a `paypal` PaymentMethod, this hash contains details about the PayPal payment method.",
            "in": "formData",
            "name": "paypal",
            "type": "object"
          },
          {
            "description": "If this is a `pix` PaymentMethod, this hash contains details about the Pix payment method.",
            "in": "formData",
            "name": "pix",
            "type": "object"
          },
          {
            "description": "If this is a `promptpay` PaymentMethod, this hash contains details about the PromptPay payment method.",
            "in": "formData",
            "name": "promptpay",
            "type": "object"
          },
          {
            "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
            "in": "formData",
            "name": "radar_options",
            "type": "object"
          },
          {
            "description": "If this is a `Revolut Pay` PaymentMethod, this hash contains details about the Revolut Pay payment method.",
            "in": "formData",
            "name": "revolut_pay",
            "type": "object"
          },
          {
            "description": "If this is a `sepa_debit` PaymentMethod, this hash contains details about the SEPA debit bank account.",
            "in": "formData",
            "name": "sepa_debit",
            "type": "object"
          },
          {
            "description": "If this is a `sofort` PaymentMethod, this hash contains details about the SOFORT payment method.",
            "in": "formData",
            "name": "sofort",
            "type": "object"
          },
          {
            "description": "If this is a `swish` PaymentMethod, this hash contains details about the Swish payment method.",
            "in": "formData",
            "name": "swish",
            "type": "object"
          },
          {
            "description": "If this is a TWINT PaymentMethod, this hash contains details about the TWINT payment method.",
            "in": "formData",
            "name": "twint",
            "type": "object"
          },
          {
            "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
            "enum": [
              "acss_debit",
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "amazon_pay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "klarna",
              "konbini",
              "link",
              "mobilepay",
              "multibanco",
              "oxxo",
              "p24",
              "paynow",
              "paypal",
              "pix",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "swish",
              "twint",
              "us_bank_account",
              "wechat_pay",
              "zip"
            ],
            "in": "formData",
            "name": "type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.",
            "in": "formData",
            "name": "us_bank_account",
            "type": "object"
          },
          {
            "description": "If this is an `wechat_pay` PaymentMethod, this hash contains details about the wechat_pay payment method.",
            "in": "formData",
            "name": "wechat_pay",
            "type": "object"
          },
          {
            "description": "If this is a `zip` PaymentMethod, this hash contains details about the Zip payment method.",
            "in": "formData",
            "name": "zip",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a PaymentMethod object. Read the <a href=\"/docs/stripe-js/reference#stripe-create-payment-method\">Stripe.js reference</a> to learn how to create PaymentMethods via Stripe.js.</p>\n\n<p>Instead of creating a PaymentMethod directly, we recommend using the <a href=\"/docs/payments/accept-a-payment\">PaymentIntents</a> API to accept a payment immediately or the <a href=\"/docs/payments/save-and-reuse\">SetupIntent</a> API to collect payment method details ahead of a future payment.</p>",
        "operationId": "PostPaymentMethods"
      }
    },
    "/v1/payment_methods/{payment_method}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a PaymentMethod object attached to the StripeAccount. To retrieve a payment method attached to a Customer, you should use <a href=\"/docs/api/payment_methods/customer\">Retrieve a Customer’s PaymentMethods</a></p>",
        "operationId": "GetPaymentMethodsPaymentMethod"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.",
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "in": "formData",
            "name": "allow_redisplay",
            "type": "string"
          },
          {
            "description": "Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.",
            "in": "formData",
            "name": "billing_details",
            "type": "object"
          },
          {
            "description": "If this is a `card` PaymentMethod, this hash contains the user's card details.",
            "in": "formData",
            "name": "card",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.",
            "in": "formData",
            "name": "link",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.",
            "in": "formData",
            "name": "us_bank_account",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated.</p>",
        "operationId": "PostPaymentMethodsPaymentMethod"
      }
    },
    "/v1/payment_methods/{payment_method}/attach": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the customer to which to attach the PaymentMethod.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Attaches a PaymentMethod object to a Customer.</p>\n\n<p>To attach a new PaymentMethod to a customer for future payments, we recommend you use a <a href=\"/docs/api/setup_intents\">SetupIntent</a>\nor a PaymentIntent with <a href=\"/docs/api/payment_intents/create#create_payment_intent-setup_future_usage\">setup_future_usage</a>.\nThese approaches will perform any necessary steps to set up the PaymentMethod for future payments. Using the <code>/v1/payment_methods/:id/attach</code>\nendpoint without first using a SetupIntent or PaymentIntent with <code>setup_future_usage</code> does not optimize the PaymentMethod for\nfuture use, which makes later declines and payment friction more likely.\nSee <a href=\"/docs/payments/payment-intents#future-usage\">Optimizing cards for future payments</a> for more information about setting up\nfuture payments.</p>\n\n<p>To use this PaymentMethod as the default for invoice or subscription payments,\nset <a href=\"/docs/api/customers/update#update_customer-invoice_settings-default_payment_method\"><code>invoice_settings.default_payment_method</code></a>,\non the Customer to the PaymentMethod’s ID.</p>",
        "operationId": "PostPaymentMethodsPaymentMethodAttach"
      }
    },
    "/v1/payment_methods/{payment_method}/detach": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payment_method"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Detaches a PaymentMethod object from a Customer. After a PaymentMethod is detached, it can no longer be used for a payment or re-attached to a Customer.</p>",
        "operationId": "PostPaymentMethodsPaymentMethodDetach"
      }
    },
    "/v1/payouts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return payouts that are expected to arrive during the given date interval.",
            "in": "query",
            "name": "arrival_date",
            "required": false
          },
          {
            "description": "Only return payouts that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "The ID of an external account - only return payouts sent to this external account.",
            "in": "query",
            "name": "destination",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`.",
            "in": "query",
            "maxLength": 5000,
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/payout"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/payouts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PayoutList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of existing payouts sent to third-party bank accounts or payouts that Stripe sent to you. The payouts return in sorted order, with the most recently created payouts appearing first.</p>",
        "operationId": "GetPayouts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A positive integer in cents representing how much to payout.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The ID of a bank account or a card to send the payout to. If you don't provide a destination, we use the default external account for the specified currency.",
            "in": "formData",
            "name": "destination",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The method used to send this payout, which is `standard` or `instant`. We support `instant` for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).",
            "enum": [
              "instant",
              "standard"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "method",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "The balance type of your Stripe balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the Balances API. One of `bank_account`, `card`, or `fpx`.",
            "enum": [
              "bank_account",
              "card",
              "fpx"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "source_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A string that displays on the recipient's bank or card statement (up to 22 characters). A `statement_descriptor` that's longer than 22 characters return an error. Most banks truncate this information and display it inconsistently. Some banks might not display it at all.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To send funds to your own bank account, create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must cover the payout amount. If it doesn’t, you receive an “Insufficient Funds” error.</p>\n\n<p>If your API key is in test mode, money won’t actually be sent, though every other action occurs as if you’re in live mode.</p>\n\n<p>If you create a manual payout on a Stripe account that uses multiple payment source types, you need to specify the source type balance that the payout draws from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>",
        "operationId": "PostPayouts"
      }
    },
    "/v1/payouts/{payout}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payout",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list. Stripe returns the corresponding payout information.</p>",
        "operationId": "GetPayoutsPayout"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payout",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified payout by setting the values of the parameters you pass. We don’t change parameters that you don’t provide. This request only accepts the metadata as arguments.</p>",
        "operationId": "PostPayoutsPayout"
      }
    },
    "/v1/payouts/{payout}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payout",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can cancel a previously created payout if its status is <code>pending</code>. Stripe refunds the funds to your available balance. You can’t cancel automatic Stripe payouts.</p>",
        "operationId": "PostPayoutsPayoutCancel"
      }
    },
    "/v1/payouts/{payout}/reverse": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "payout",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reverses a payout by debiting the destination bank account. At this time, you can only reverse payouts for connected accounts to US bank accounts. If the payout is manual and in the <code>pending</code> status, use <code>/v1/payouts/:id/cancel</code> instead.</p>\n\n<p>By requesting a reversal through <code>/v1/payouts/:id/reverse</code>, you confirm that the authorized signatory of the selected bank account authorizes the debit on the bank account and that no other authorization is required.</p>",
        "operationId": "PostPayoutsPayoutReverse"
      }
    },
    "/v1/plans": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return plans that are active or inactive (e.g., pass `false` to list all inactive plans).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return plans for the given product.",
            "in": "query",
            "maxLength": 5000,
            "name": "product",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/plan"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/plans",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PlanList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your plans.</p>",
        "operationId": "GetPlans"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Whether the plan is currently available for new subscriptions. Defaults to `true`.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
            "enum": [
              "last_during_period",
              "last_ever",
              "max",
              "sum"
            ],
            "in": "formData",
            "name": "aggregate_usage",
            "type": "string"
          },
          {
            "description": "A positive integer in cents (or local equivalent) (or 0 for a free plan) representing how much to charge on a recurring basis.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Same as `amount`, but accepts a decimal value with at most 12 decimal places. Only one of `amount` and `amount_decimal` can be set.",
            "format": "decimal",
            "in": "formData",
            "name": "amount_decimal",
            "type": "string"
          },
          {
            "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
            "enum": [
              "per_unit",
              "tiered"
            ],
            "in": "formData",
            "name": "billing_scheme",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.",
            "in": "formData",
            "maxLength": 5000,
            "name": "id",
            "type": "string"
          },
          {
            "description": "Specifies billing frequency. Either `day`, `week`, `month` or `year`.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "in": "formData",
            "name": "interval",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of three years interval allowed (3 years, 36 months, or 156 weeks).",
            "in": "formData",
            "name": "interval_count",
            "type": "integer"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The meter tracking the usage of a metered price",
            "in": "formData",
            "maxLength": 5000,
            "name": "meter",
            "type": "string"
          },
          {
            "description": "A brief description of the plan, hidden from customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nickname",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "product"
          },
          {
            "collectionFormat": "csv",
            "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
            "in": "formData",
            "items": {
              "properties": {
                "flat_amount": {
                  "type": "integer"
                },
                "flat_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                },
                "up_to": {}
              },
              "required": [
                "up_to"
              ],
              "title": "tier",
              "type": "object"
            },
            "name": "tiers",
            "type": "array"
          },
          {
            "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.",
            "enum": [
              "graduated",
              "volume"
            ],
            "in": "formData",
            "name": "tiers_mode",
            "type": "string"
          },
          {
            "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
            "in": "formData",
            "name": "transform_usage",
            "type": "object"
          },
          {
            "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
            "in": "formData",
            "name": "trial_period_days",
            "type": "integer"
          },
          {
            "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
            "enum": [
              "licensed",
              "metered"
            ],
            "in": "formData",
            "name": "usage_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can now model subscriptions more flexibly using the <a href=\"#prices\">Prices API</a>. It replaces the Plans API and is backwards compatible to simplify your migration.</p>",
        "operationId": "PostPlans"
      }
    },
    "/v1/plans/{plan}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_plan"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>",
        "operationId": "DeletePlansPlan"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the plan with the given ID.</p>",
        "operationId": "GetPlansPlan"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "plan",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the plan is currently available for new subscriptions.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "A brief description of the plan, hidden from customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nickname",
            "type": "string"
          },
          {
            "description": "The product the plan belongs to. This cannot be changed once it has been used in a subscription or subscription schedule.",
            "in": "formData",
            "maxLength": 5000,
            "name": "product",
            "type": "string"
          },
          {
            "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
            "in": "formData",
            "name": "trial_period_days",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/plan"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>",
        "operationId": "PostPlansPlan"
      }
    },
    "/v1/prices": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return prices for the given currency.",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return the price with these lookup_keys, if any exist. You can specify up to 10 lookup_keys.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "lookup_keys",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return prices for the given product.",
            "in": "query",
            "maxLength": 5000,
            "name": "product",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return prices with these recurring fields.",
            "in": "query",
            "name": "recurring",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return prices of type `recurring` or `one_time`.",
            "enum": [
              "one_time",
              "recurring"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/price"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/prices",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PriceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your active prices, excluding <a href=\"/docs/products-prices/pricing-models#inline-pricing\">inline prices</a>. For the list of inactive prices, set <code>active</code> to false.</p>",
        "operationId": "GetPrices"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Whether the price can be used for new purchases. Defaults to `true`.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
            "enum": [
              "per_unit",
              "tiered"
            ],
            "in": "formData",
            "name": "billing_scheme",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "properties": {
                "custom_unit_amount": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "maximum": {
                      "type": "integer"
                    },
                    "minimum": {
                      "type": "integer"
                    },
                    "preset": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "custom_unit_amount",
                  "type": "object"
                },
                "tax_behavior": {
                  "enum": [
                    "exclusive",
                    "inclusive",
                    "unspecified"
                  ],
                  "type": "string"
                },
                "tiers": {
                  "items": {
                    "properties": {
                      "flat_amount": {
                        "type": "integer"
                      },
                      "flat_amount_decimal": {
                        "format": "decimal",
                        "type": "string"
                      },
                      "unit_amount": {
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "format": "decimal",
                        "type": "string"
                      },
                      "up_to": {
                        "anyOf": [
                          {
                            "enum": [
                              "inf"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      }
                    },
                    "required": [
                      "up_to"
                    ],
                    "title": "tier",
                    "type": "object"
                  },
                  "type": "array"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                }
              },
              "title": "currency_option",
              "type": "object"
            },
            "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency_options",
            "type": "object"
          },
          {
            "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
            "in": "formData",
            "name": "custom_unit_amount",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
            "in": "formData",
            "maxLength": 200,
            "name": "lookup_key",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "A brief description of the price, hidden from customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nickname",
            "type": "string"
          },
          {
            "description": "The ID of the product that this price will belong to.",
            "in": "formData",
            "maxLength": 5000,
            "name": "product",
            "type": "string"
          },
          {
            "description": "These fields can be used to create a new product that this price will belong to.",
            "in": "formData",
            "name": "product_data",
            "type": "object"
          },
          {
            "description": "The recurring components of a price such as `interval` and `usage_type`.",
            "in": "formData",
            "name": "recurring",
            "type": "object"
          },
          {
            "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
            "in": "formData",
            "items": {
              "properties": {
                "flat_amount": {
                  "type": "integer"
                },
                "flat_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                },
                "unit_amount": {
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "format": "decimal",
                  "type": "string"
                },
                "up_to": {}
              },
              "required": [
                "up_to"
              ],
              "title": "tier",
              "type": "object"
            },
            "name": "tiers",
            "type": "array"
          },
          {
            "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.",
            "enum": [
              "graduated",
              "volume"
            ],
            "in": "formData",
            "name": "tiers_mode",
            "type": "string"
          },
          {
            "description": "If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.",
            "in": "formData",
            "name": "transfer_lookup_key",
            "type": "boolean"
          },
          {
            "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
            "in": "formData",
            "name": "transform_quantity",
            "type": "object"
          },
          {
            "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge. One of `unit_amount`, `unit_amount_decimal`, or `custom_unit_amount` is required, unless `billing_scheme=tiered`.",
            "in": "formData",
            "name": "unit_amount",
            "type": "integer"
          },
          {
            "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
            "format": "decimal",
            "in": "formData",
            "name": "unit_amount_decimal",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/price"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new price for an existing product. The price can be recurring or one-time.</p>",
        "operationId": "PostPrices"
      }
    },
    "/v1/prices/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for prices](https://stripe.com/docs/search#query-fields-for-prices).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/price"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for prices you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetPricesSearch"
      }
    },
    "/v1/prices/{price}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "price",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/price"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the price with the given ID.</p>",
        "operationId": "GetPricesPrice"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "price",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the price can be used for new purchases. Defaults to `true`.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency_options"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
            "in": "formData",
            "maxLength": 200,
            "name": "lookup_key",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "A brief description of the price, hidden from customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "nickname",
            "type": "string"
          },
          {
            "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          },
          {
            "description": "If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.",
            "in": "formData",
            "name": "transfer_lookup_key",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/price"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified price by setting the values of the parameters passed. Any parameters not provided are left unchanged.</p>",
        "operationId": "PostPricesPrice"
      }
    },
    "/v1/products": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return products that are active or inactive (e.g., pass `false` to list all inactive products).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Only return products that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before).",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "ids",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return products that can be shipped (i.e., physical, not digital products).",
            "in": "query",
            "name": "shippable",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return products with the given url.",
            "in": "query",
            "maxLength": 5000,
            "name": "url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/product"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/products",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ProductList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>",
        "operationId": "GetProducts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Whether the product is currently available for purchase. Defaults to `true`.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object. This Price will be set as the default price for this product.",
            "in": "formData",
            "name": "default_price_data",
            "type": "object"
          },
          {
            "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
            "in": "formData",
            "maxLength": 40000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "id",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
            "in": "formData",
            "items": {
              "type": "string"
            },
            "name": "images",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).",
            "in": "formData",
            "items": {
              "properties": {
                "name": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "features",
              "type": "object"
            },
            "name": "marketing_features",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The product's name, meant to be displayable to the customer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The dimensions of this product for shipping purposes.",
            "in": "formData",
            "name": "package_dimensions",
            "type": "object"
          },
          {
            "description": "Whether this product is shipped (i.e., physical goods).",
            "in": "formData",
            "name": "shippable",
            "type": "boolean"
          },
          {
            "description": "An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.\n\nThis may be up to 22 characters. The statement description may not include `<`, `>`, `\\`, `\"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.\n It must contain at least one letter. Only used for subscription payments.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
            "in": "formData",
            "name": "tax_code",
            "type": "string"
          },
          {
            "description": "A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.",
            "in": "formData",
            "maxLength": 12,
            "name": "unit_label",
            "type": "string"
          },
          {
            "description": "A URL of a publicly-accessible webpage for this product.",
            "in": "formData",
            "maxLength": 5000,
            "name": "url",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new product object.</p>",
        "operationId": "PostProducts"
      }
    },
    "/v1/products/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for products](https://stripe.com/docs/search#query-fields-for-products).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/product"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for products you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetProductsSearch"
      }
    },
    "/v1/products/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_product"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Delete a product. Deleting a product is only possible if it has no prices associated with it. Additionally, deleting a product with <code>type=good</code> is only possible if it has no SKUs associated with it.</p>",
        "operationId": "DeleteProductsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>",
        "operationId": "GetProductsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the product is available for purchase.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_price",
            "type": "string"
          },
          {
            "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
            "in": "formData",
            "name": "description"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
            "in": "formData",
            "name": "images"
          },
          {
            "description": "A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).",
            "in": "formData",
            "name": "marketing_features"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The product's name, meant to be displayable to the customer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "name",
            "type": "string"
          },
          {
            "description": "The dimensions of this product for shipping purposes.",
            "in": "formData",
            "name": "package_dimensions"
          },
          {
            "description": "Whether this product is shipped (i.e., physical goods).",
            "in": "formData",
            "name": "shippable",
            "type": "boolean"
          },
          {
            "description": "An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.\n\nThis may be up to 22 characters. The statement description may not include `<`, `>`, `\\`, `\"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.\n It must contain at least one letter. May only be set if `type=service`. Only used for subscription payments.",
            "in": "formData",
            "maxLength": 22,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
            "in": "formData",
            "name": "tax_code"
          },
          {
            "description": "A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal. May only be set if `type=service`.",
            "in": "formData",
            "name": "unit_label"
          },
          {
            "description": "A URL of a publicly-accessible webpage for this product.",
            "in": "formData",
            "name": "url"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostProductsId"
      }
    },
    "/v1/products/{product}/features": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/product_feature"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "EntitlementsResourceProductFeatureList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve a list of features for a product</p>",
        "operationId": "GetProductsProductFeatures"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the [Feature](https://stripe.com/docs/api/entitlements/feature) object attached to this product.",
            "in": "formData",
            "maxLength": 5000,
            "name": "entitlement_feature",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/product_feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a product_feature, which represents a feature attachment to a product</p>",
        "operationId": "PostProductsProductFeatures"
      }
    },
    "/v1/products/{product}/features/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_product_feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes the feature attachment to a product</p>",
        "operationId": "DeleteProductsProductFeaturesId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The ID of the product_feature.",
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the product.",
            "in": "path",
            "maxLength": 5000,
            "name": "product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/product_feature"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a product_feature, which represents a feature attachment to a product</p>",
        "operationId": "GetProductsProductFeaturesId"
      }
    },
    "/v1/promotion_codes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter promotion codes by whether they are active.",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Only return promotion codes that have this case-insensitive code.",
            "in": "query",
            "maxLength": 5000,
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return promotion codes for this coupon.",
            "in": "query",
            "maxLength": 5000,
            "name": "coupon",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return promotion codes that are restricted to this customer.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/promotion_code"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/promotion_codes",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PromotionCodesResourcePromotionCodeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your promotion codes.</p>",
        "operationId": "GetPromotionCodes"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Whether the promotion code is currently active.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. Valid characters are lower case letters (a-z), upper case letters (A-Z), and digits (0-9).\n\nIf left blank, we will generate one automatically.",
            "in": "formData",
            "maxLength": 500,
            "name": "code",
            "type": "string"
          },
          {
            "description": "The coupon for this promotion code.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "required": true,
            "type": "string"
          },
          {
            "description": "The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon's `redeems_by`.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon's `max_redemptions`.",
            "in": "formData",
            "name": "max_redemptions",
            "type": "integer"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Settings that restrict the redemption of the promotion code.",
            "in": "formData",
            "name": "restrictions",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/promotion_code"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A promotion code points to a coupon. You can optionally restrict the code to a specific customer, redemption limit, and expiration date.</p>",
        "operationId": "PostPromotionCodes"
      }
    },
    "/v1/promotion_codes/{promotion_code}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "promotion_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/promotion_code"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the promotion code with the given ID. In order to retrieve a promotion code by the customer-facing <code>code</code> use <a href=\"/docs/api/promotion_codes/list\">list</a> with the desired <code>code</code>.</p>",
        "operationId": "GetPromotionCodesPromotionCode"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "promotion_code",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the promotion code is currently active. A promotion code can only be reactivated when the coupon is still valid and the promotion code is otherwise redeemable.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Settings that restrict the redemption of the promotion code.",
            "in": "formData",
            "name": "restrictions",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/promotion_code"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified promotion code by setting the values of the parameters passed. Most fields are, by design, not editable.</p>",
        "operationId": "PostPromotionCodesPromotionCode"
      }
    },
    "/v1/quotes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the customer whose quotes will be retrieved.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The status of the quote.",
            "enum": [
              "accepted",
              "canceled",
              "draft",
              "open"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Provides a list of quotes that are associated with the specified test clock. The response will not include quotes with test clocks if this and the customer parameter is not set.",
            "in": "query",
            "maxLength": 5000,
            "name": "test_clock",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/quote"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/quotes",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "QuotesResourceQuoteList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your quotes.</p>",
        "operationId": "GetQuotes"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field.",
            "in": "formData",
            "name": "application_fee_amount"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "The tax rates that will apply to any line item that does not have `tax_rates` set.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "A description that will be displayed on the quote PDF. If no value is passed, the default description configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.",
            "in": "formData",
            "name": "description"
          },
          {
            "description": "The discounts applied to the quote.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch. If no value is passed, the default expiration date configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "A footer that will be displayed on the quote PDF. If no value is passed, the default footer configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.",
            "in": "formData",
            "name": "footer"
          },
          {
            "description": "Clone an existing quote. The new quote will be created in `status=draft`. When using this parameter, you cannot specify any other parameters except for `expires_at`.",
            "in": "formData",
            "name": "from_quote",
            "type": "object"
          },
          {
            "description": "A header that will be displayed on the quote PDF. If no value is passed, the default header configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.",
            "in": "formData",
            "name": "header"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {},
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "line_item_create_params",
              "type": "object"
            },
            "name": "line_items",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The account on behalf of which to charge.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.",
            "in": "formData",
            "name": "subscription_data",
            "type": "object"
          },
          {
            "description": "ID of the test clock to attach to the quote.",
            "in": "formData",
            "maxLength": 5000,
            "name": "test_clock",
            "type": "string"
          },
          {
            "description": "The data with which to automatically create a Transfer for each of the invoices.",
            "in": "formData",
            "name": "transfer_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A quote models prices and services for a customer. Default options for <code>header</code>, <code>description</code>, <code>footer</code>, and <code>expires_at</code> can be set in the dashboard via the <a href=\"https://dashboard.stripe.com/settings/billing/quote\">quote template</a>.</p>",
        "operationId": "PostQuotes"
      }
    },
    "/v1/quotes/{quote}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the quote with the given ID.</p>",
        "operationId": "GetQuotesQuote"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field.",
            "in": "formData",
            "name": "application_fee_amount"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "The tax rates that will apply to any line item that does not have `tax_rates` set.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "A description that will be displayed on the quote PDF.",
            "in": "formData",
            "name": "description"
          },
          {
            "description": "The discounts applied to the quote.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          },
          {
            "description": "A footer that will be displayed on the quote PDF.",
            "in": "formData",
            "name": "footer"
          },
          {
            "description": "A header that will be displayed on the quote PDF.",
            "in": "formData",
            "name": "header"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {},
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "line_item_update_params",
              "type": "object"
            },
            "name": "line_items",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The account on behalf of which to charge.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.",
            "in": "formData",
            "name": "subscription_data",
            "type": "object"
          },
          {
            "description": "The data with which to automatically create a Transfer for each of the invoices.",
            "in": "formData",
            "name": "transfer_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A quote models prices and services for a customer.</p>",
        "operationId": "PostQuotesQuote"
      }
    },
    "/v1/quotes/{quote}/accept": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Accepts the specified quote.</p>",
        "operationId": "PostQuotesQuoteAccept"
      }
    },
    "/v1/quotes/{quote}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels the quote.</p>",
        "operationId": "PostQuotesQuoteCancel"
      }
    },
    "/v1/quotes/{quote}/computed_upfront_line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "QuotesResourceListLineItems",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a quote, there is an includable <a href=\"https://stripe.com/docs/api/quotes/object#quote_object-computed-upfront-line_items\"><strong>computed.upfront.line_items</strong></a> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of upfront line items.</p>",
        "operationId": "GetQuotesQuoteComputedUpfrontLineItems"
      }
    },
    "/v1/quotes/{quote}/finalize": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/quote"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Finalizes the quote.</p>",
        "operationId": "PostQuotesQuoteFinalize"
      }
    },
    "/v1/quotes/{quote}/line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "QuotesResourceListLineItems",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When retrieving a quote, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetQuotesQuoteLineItems"
      }
    },
    "/v1/quotes/{quote}/pdf": {
      "get": {
        "servers": [
          {
            "url": "https://files.stripe.com/"
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/pdf",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "quote",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Download the PDF for a finalized quote. Explanation for special handling can be found <a href=\"https://docs.stripe.com/quotes/overview#quote_pdf\">here</a></p>",
        "operationId": "GetQuotesQuotePdf"
      }
    },
    "/v1/radar/early_fraud_warnings": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return early fraud warnings for the charge specified by this charge ID.",
            "in": "query",
            "name": "charge",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return early fraud warnings that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/radar.early_fraud_warning"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/radar/early_fraud_warnings",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RadarEarlyFraudWarningList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of early fraud warnings.</p>",
        "operationId": "GetRadarEarlyFraudWarnings"
      }
    },
    "/v1/radar/early_fraud_warnings/{early_fraud_warning}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "early_fraud_warning",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.early_fraud_warning"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an early fraud warning that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#early_fraud_warning_object\">early fraud warning</a> object reference for more details.</p>",
        "operationId": "GetRadarEarlyFraudWarningsEarlyFraudWarning"
      }
    },
    "/v1/radar/value_list_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return items that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return items belonging to the parent list whose value matches the specified value (using an \"is like\" match).",
            "in": "query",
            "maxLength": 800,
            "name": "value",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier for the parent value list this item belongs to.",
            "in": "query",
            "maxLength": 5000,
            "name": "value_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/radar.value_list_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/radar/value_list_items",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RadarListListItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetRadarValueListItems"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The value of the item (whose type must match the type of the parent value list).",
            "in": "formData",
            "maxLength": 800,
            "name": "value",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the value list which the created item will be added to.",
            "in": "formData",
            "maxLength": 5000,
            "name": "value_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.value_list_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>",
        "operationId": "PostRadarValueListItems"
      }
    },
    "/v1/radar/value_list_items/{item}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_radar.value_list_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>",
        "operationId": "DeleteRadarValueListItemsItem"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.value_list_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>ValueListItem</code> object.</p>",
        "operationId": "GetRadarValueListItemsItem"
      }
    },
    "/v1/radar/value_lists": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The alias used to reference the value list when writing rules.",
            "in": "query",
            "maxLength": 100,
            "name": "alias",
            "required": false,
            "type": "string"
          },
          {
            "description": "A value contained within a value list - returns all value lists containing this value.",
            "in": "query",
            "maxLength": 800,
            "name": "contains",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return value lists that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/radar.value_list"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/radar/value_lists",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RadarListListList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetRadarValueLists"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the value list for use in rules.",
            "in": "formData",
            "maxLength": 100,
            "name": "alias",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Type of the items in the value list. One of `card_fingerprint`, `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`. Use `string` if the item type is unknown or mixed.",
            "enum": [
              "card_bin",
              "card_fingerprint",
              "case_sensitive_string",
              "country",
              "customer_id",
              "email",
              "ip_address",
              "sepa_debit_fingerprint",
              "string",
              "us_bank_account_fingerprint"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "item_type",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The human-readable name of the value list.",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.value_list"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>",
        "operationId": "PostRadarValueLists"
      }
    },
    "/v1/radar/value_lists/{value_list}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "value_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_radar.value_list"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>",
        "operationId": "DeleteRadarValueListsValueList"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "value_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.value_list"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>ValueList</code> object.</p>",
        "operationId": "GetRadarValueListsValueList"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "value_list",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the value list for use in rules.",
            "in": "formData",
            "maxLength": 100,
            "name": "alias",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The human-readable name of the value list.",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/radar.value_list"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>",
        "operationId": "PostRadarValueListsValueList"
      }
    },
    "/v1/refunds": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return refunds for the charge specified by this charge ID.",
            "in": "query",
            "name": "charge",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return refunds that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return refunds for the PaymentIntent specified by this ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/refunds",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "APIMethodRefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of all refunds you created. We return the refunds in sorted order, with the most recent refunds appearing first. The 10 most recent refunds are always available by default on the Charge object.</p>",
        "operationId": "GetRefunds"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "The identifier of the charge to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "charge",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "Customer whose customer balance to refund from.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.",
            "in": "formData",
            "name": "instructions_email",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Origin of the refund",
            "enum": [
              "customer_balance"
            ],
            "in": "formData",
            "name": "origin",
            "type": "string"
          },
          {
            "description": "The identifier of the PaymentIntent to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_intent",
            "type": "string"
          },
          {
            "description": "String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.",
            "enum": [
              "duplicate",
              "fraudulent",
              "requested_by_customer"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "reason",
            "type": "string"
          },
          {
            "description": "Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.",
            "in": "formData",
            "name": "refund_application_fee",
            "type": "boolean"
          },
          {
            "description": "Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.",
            "in": "formData",
            "name": "reverse_transfer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can’t be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>",
        "operationId": "PostRefunds"
      }
    },
    "/v1/refunds/{refund}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing refund.</p>",
        "operationId": "GetRefundsRefund"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the refund that you specify by setting the values of the passed parameters. Any parameters that you don’t provide remain unchanged.</p>\n\n<p>This request only accepts <code>metadata</code> as an argument.</p>",
        "operationId": "PostRefundsRefund"
      }
    },
    "/v1/refunds/{refund}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a refund with a status of <code>requires_action</code>.</p>\n\n<p>You can’t cancel refunds in other states. Only refunds for payment methods that require customer action can enter the <code>requires_action</code> state.</p>",
        "operationId": "PostRefundsRefundCancel"
      }
    },
    "/v1/reporting/report_runs": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return Report Runs that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/reporting.report_run"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/reporting/report_runs",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FinancialReportingFinanceReportRunList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Report Runs, with the most recent appearing first.</p>",
        "operationId": "GetReportingReportRuns"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.",
            "in": "formData",
            "name": "parameters",
            "type": "object"
          },
          {
            "description": "The ID of the [report type](https://stripe.com/docs/reporting/statements/api#report-types) to run, such as `\"balance.summary.1\"`.",
            "in": "formData",
            "name": "report_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/reporting.report_run"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new object and begin running the report. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
        "operationId": "PostReportingReportRuns"
      }
    },
    "/v1/reporting/report_runs/{report_run}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "report_run",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/reporting.report_run"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing Report Run.</p>",
        "operationId": "GetReportingReportRunsReportRun"
      }
    },
    "/v1/reporting/report_types": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/reporting.report_type"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FinancialReportingFinanceReportTypeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a full list of Report Types.</p>",
        "operationId": "GetReportingReportTypes"
      }
    },
    "/v1/reporting/report_types/{report_type}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "name": "report_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/reporting.report_type"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a Report Type. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
        "operationId": "GetReportingReportTypesReportType"
      }
    },
    "/v1/reviews": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return reviews that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/review"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RadarReviewList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetReviews"
      }
    },
    "/v1/reviews/{review}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "review",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/review"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>Review</code> object.</p>",
        "operationId": "GetReviewsReview"
      }
    },
    "/v1/reviews/{review}/approve": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "review",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/review"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>",
        "operationId": "PostReviewsReviewApprove"
      }
    },
    "/v1/setup_attempts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A filter on the list, based on the object `created` field. The value\ncan be a string with an integer Unix timestamp or a\ndictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return SetupAttempts created by the SetupIntent specified by\nthis ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "setup_intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/setup_attempt"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/setup_attempts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsSetupIntentSetupAttemptList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of SetupAttempts that associate with a provided SetupIntent.</p>",
        "operationId": "GetSetupAttempts"
      }
    },
    "/v1/setup_intents": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "in": "query",
            "name": "attach_to_self",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return SetupIntents for the customer specified by this customer ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return SetupIntents that associate with the specified payment method.",
            "in": "query",
            "maxLength": 5000,
            "name": "payment_method",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/setup_intent"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/setup_intents",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsSetupIntentList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of SetupIntents.</p>",
        "operationId": "GetSetupIntents"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "in": "formData",
            "name": "attach_to_self",
            "type": "boolean"
          },
          {
            "description": "When you enable this parameter, this SetupIntent accepts payment methods that you enable in the Dashboard and that are compatible with its other parameters.",
            "in": "formData",
            "name": "automatic_payment_methods",
            "type": "object"
          },
          {
            "description": "Set to `true` to attempt to confirm this SetupIntent immediately. This parameter defaults to `false`. If a card is the attached payment method, you can provide a `return_url` in case further authentication is necessary.",
            "in": "formData",
            "name": "confirm",
            "type": "boolean"
          },
          {
            "description": "ID of the ConfirmationToken used to confirm this SetupIntent.\n\nIf the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.",
            "in": "formData",
            "maxLength": 5000,
            "name": "confirmation_token",
            "type": "string"
          },
          {
            "description": "ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 1000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
            "in": "formData",
            "items": {
              "enum": [
                "inbound",
                "outbound"
              ],
              "type": "string"
            },
            "name": "flow_directions",
            "type": "array"
          },
          {
            "description": "This hash contains details about the mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).",
            "in": "formData",
            "name": "mandate_data"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The Stripe account ID created for this SetupIntent.",
            "in": "formData",
            "name": "on_behalf_of",
            "type": "string"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "The ID of the payment method configuration to use with this SetupIntent.",
            "in": "formData",
            "maxLength": 100,
            "name": "payment_method_configuration",
            "type": "string"
          },
          {
            "description": "When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\nvalue in the SetupIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this SetupIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types (for example, card) that this SetupIntent can use. If you don't provide this, it defaults to [\"card\"].",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "payment_method_types",
            "type": "array"
          },
          {
            "description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. To redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "If you populate this hash, this SetupIntent generates a `single_use` mandate after successful completion.",
            "in": "formData",
            "name": "single_use",
            "type": "object"
          },
          {
            "description": "Indicates how the payment method is intended to be used in the future. If not provided, this value defaults to `off_session`.",
            "enum": [
              "off_session",
              "on_session"
            ],
            "in": "formData",
            "name": "usage",
            "type": "string"
          },
          {
            "description": "Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
            "in": "formData",
            "name": "use_stripe_sdk",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a SetupIntent object.</p>\n\n<p>After you create the SetupIntent, attach a payment method and <a href=\"/docs/api/setup_intents/confirm\">confirm</a>\nit to collect any required permissions to charge the payment method later.</p>",
        "operationId": "PostSetupIntents"
      }
    },
    "/v1/setup_intents/{intent}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The client secret of the SetupIntent. We require this string if you use a publishable key to retrieve the SetupIntent.",
            "in": "query",
            "maxLength": 5000,
            "name": "client_secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a SetupIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#setup_intent_object\">SetupIntent</a> object reference for more details.</p>",
        "operationId": "GetSetupIntentsIntent"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "in": "formData",
            "name": "attach_to_self",
            "type": "boolean"
          },
          {
            "description": "ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 1000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
            "in": "formData",
            "items": {
              "enum": [
                "inbound",
                "outbound"
              ],
              "type": "string"
            },
            "name": "flow_directions",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent. To unset this field to null, pass in an empty string.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "The ID of the payment method configuration to use with this SetupIntent.",
            "in": "formData",
            "maxLength": 100,
            "name": "payment_method_configuration",
            "type": "string"
          },
          {
            "description": "When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\nvalue in the SetupIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this SetupIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of payment method types (for example, card) that this SetupIntent can set up. If you don't provide this array, it defaults to [\"card\"].",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "payment_method_types",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a SetupIntent object.</p>",
        "operationId": "PostSetupIntentsIntent"
      }
    },
    "/v1/setup_intents/{intent}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reason for canceling this SetupIntent. Possible values are: `abandoned`, `requested_by_customer`, or `duplicate`",
            "enum": [
              "abandoned",
              "duplicate",
              "requested_by_customer"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "cancellation_reason",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can cancel a SetupIntent object when it’s in one of these statuses: <code>requires_payment_method</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>\n\n<p>After you cancel it, setup is abandoned and any operations on the SetupIntent fail with an error. You can’t cancel the SetupIntent for a Checkout Session. <a href=\"/docs/api/checkout/sessions/expire\">Expire the Checkout Session</a> instead.</p>",
        "operationId": "PostSetupIntentsIntentCancel"
      }
    },
    "/v1/setup_intents/{intent}/confirm": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The client secret of the SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "ID of the ConfirmationToken used to confirm this SetupIntent.\n\nIf the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.",
            "in": "formData",
            "maxLength": 5000,
            "name": "confirmation_token",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "in": "formData",
            "name": "mandate_data"
          },
          {
            "description": "ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\nvalue in the SetupIntent.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this SetupIntent.",
            "in": "formData",
            "name": "payment_method_options",
            "type": "object"
          },
          {
            "description": "The URL to redirect your customer back to after they authenticate on the payment method's app or site.\nIf you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.\nThis parameter is only used for cards and other redirect-based payment methods.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.",
            "in": "formData",
            "name": "use_stripe_sdk",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Confirm that your customer intends to set up the current or\nprovided payment method. For example, you would confirm a SetupIntent\nwhen a customer hits the “Save” button on a payment method management\npage on your website.</p>\n\n<p>If the selected payment method does not require any additional\nsteps from the customer, the SetupIntent will transition to the\n<code>succeeded</code> status.</p>\n\n<p>Otherwise, it will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If setup fails,\nthe SetupIntent will transition to the\n<code>requires_payment_method</code> status or the <code>canceled</code> status if the\nconfirmation limit is reached.</p>",
        "operationId": "PostSetupIntentsIntentConfirm"
      }
    },
    "/v1/setup_intents/{intent}/verify_microdeposits": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "intent",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
            "in": "formData",
            "items": {
              "type": "integer"
            },
            "name": "amounts",
            "type": "array"
          },
          {
            "description": "The client secret of the SetupIntent.",
            "in": "formData",
            "maxLength": 5000,
            "name": "client_secret",
            "type": "string"
          },
          {
            "description": "A six-character code starting with SM present in the microdeposit sent to the bank account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "descriptor_code",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/setup_intent"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Verifies microdeposits on a SetupIntent object.</p>",
        "operationId": "PostSetupIntentsIntentVerifyMicrodeposits"
      }
    },
    "/v1/shipping_rates": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return shipping rates that are active or inactive.",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return shipping rates for the given currency.",
            "in": "query",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/shipping_rate"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/shipping_rates",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ShippingResourcesShippingRateList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your shipping rates.</p>",
        "operationId": "GetShippingRates"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "in": "formData",
            "name": "delivery_estimate",
            "type": "object"
          },
          {
            "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "in": "formData",
            "maxLength": 100,
            "name": "display_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.",
            "in": "formData",
            "name": "fixed_amount",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          },
          {
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.",
            "in": "formData",
            "name": "tax_code",
            "type": "string"
          },
          {
            "description": "The type of calculation to use on the shipping rate.",
            "enum": [
              "fixed_amount"
            ],
            "in": "formData",
            "name": "type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/shipping_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new shipping rate object.</p>",
        "operationId": "PostShippingRates"
      }
    },
    "/v1/shipping_rates/{shipping_rate_token}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "shipping_rate_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/shipping_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns the shipping rate object with the given ID.</p>",
        "operationId": "GetShippingRatesShippingRateToken"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "shipping_rate_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Whether the shipping rate can be used for new purchases. Defaults to `true`.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.",
            "in": "formData",
            "name": "fixed_amount",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "in": "formData",
            "name": "tax_behavior",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/shipping_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing shipping rate object.</p>",
        "operationId": "PostShippingRatesShippingRateToken"
      }
    },
    "/v1/sigma/scheduled_query_runs": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/scheduled_query_run"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/sigma/scheduled_query_runs",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SigmaScheduledQueryRunList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of scheduled query runs.</p>",
        "operationId": "GetSigmaScheduledQueryRuns"
      }
    },
    "/v1/sigma/scheduled_query_runs/{scheduled_query_run}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "scheduled_query_run",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/scheduled_query_run"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an scheduled query run.</p>",
        "operationId": "GetSigmaScheduledQueryRunsScheduledQueryRun"
      }
    },
    "/v1/sources": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources. Not supported for `receiver` type sources, where charge amount may not be specified until funds land.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).",
            "in": "formData",
            "maxLength": 500,
            "name": "customer",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.",
            "enum": [
              "code_verification",
              "none",
              "receiver",
              "redirect"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "flow",
            "type": "string"
          },
          {
            "description": "Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.",
            "in": "formData",
            "name": "mandate",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The source to share.",
            "in": "formData",
            "maxLength": 5000,
            "name": "original_source",
            "type": "string"
          },
          {
            "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
            "in": "formData",
            "name": "owner",
            "type": "object"
          },
          {
            "description": "Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).",
            "in": "formData",
            "name": "receiver",
            "type": "object"
          },
          {
            "description": "Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).",
            "in": "formData",
            "name": "redirect",
            "type": "object"
          },
          {
            "description": "Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.",
            "in": "formData",
            "name": "source_order",
            "type": "object"
          },
          {
            "description": "An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.",
            "in": "formData",
            "maxLength": 5000,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "An optional token used to create the source. When passed, token properties will override source parameters.",
            "in": "formData",
            "maxLength": 5000,
            "name": "token",
            "type": "string"
          },
          {
            "description": "The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Cloning card Sources](https://stripe.com/docs/sources/connect#cloning-card-sources) guide)",
            "in": "formData",
            "maxLength": 5000,
            "name": "type",
            "type": "string"
          },
          {
            "enum": [
              "reusable",
              "single_use"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "usage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new source object.</p>",
        "operationId": "PostSources"
      }
    },
    "/v1/sources/{source}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The client secret of the source. Required if a publishable key is used to retrieve the source.",
            "in": "query",
            "maxLength": 5000,
            "name": "client_secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>",
        "operationId": "GetSourcesSource"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "description": "Amount associated with the source.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.",
            "in": "formData",
            "name": "mandate",
            "type": "object"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
            "in": "formData",
            "name": "owner",
            "type": "object"
          },
          {
            "description": "Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.",
            "in": "formData",
            "name": "source_order",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>",
        "operationId": "PostSourcesSource"
      }
    },
    "/v1/sources/{source}/mandate_notifications/{mandate_notification}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "mandate_notification",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source_mandate_notification"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a new Source MandateNotification.</p>",
        "operationId": "GetSourcesSourceMandateNotificationsMandateNotification"
      }
    },
    "/v1/sources/{source}/source_transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/source_transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>List source transactions for a given source.</p>",
        "operationId": "GetSourcesSourceSourceTransactions"
      }
    },
    "/v1/sources/{source}/source_transactions/{source_transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source_transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>",
        "operationId": "GetSourcesSourceSourceTransactionsSourceTransaction"
      }
    },
    "/v1/sources/{source}/verify": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "The values needed to verify the source.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "values",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/source"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Verify a given source.</p>",
        "operationId": "PostSourcesSourceVerify"
      }
    },
    "/v1/subscription_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The ID of the subscription whose items will be retrieved.",
            "in": "query",
            "maxLength": 5000,
            "name": "subscription",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/subscription_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/subscription_items",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionsItemsSubscriptionItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your subscription items for a given subscription.</p>",
        "operationId": "GetSubscriptionItems"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription item.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n\nUse `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "The ID of the price object.",
            "in": "formData",
            "maxLength": 5000,
            "name": "price",
            "type": "string"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
            "in": "formData",
            "name": "price_data",
            "type": "object"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          },
          {
            "description": "The quantity you'd like to apply to the subscription item you're creating.",
            "in": "formData",
            "name": "quantity",
            "type": "integer"
          },
          {
            "description": "The identifier of the subscription to modify.",
            "in": "formData",
            "maxLength": 5000,
            "name": "subscription",
            "required": true,
            "type": "string"
          },
          {
            "description": "A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "tax_rates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>",
        "operationId": "PostSubscriptionItems"
      }
    },
    "/v1/subscription_items/{item}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "item",
            "required": true,
            "type": "string"
          },
          {
            "description": "Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`.",
            "in": "formData",
            "name": "clear_usage",
            "type": "boolean"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_subscription_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>",
        "operationId": "DeleteSubscriptionItemsItem"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the subscription item with the given ID.</p>",
        "operationId": "GetSubscriptionItemsItem"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "item",
            "required": true,
            "type": "string"
          },
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription item.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n\nUse `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "The ID of the price object. One of `price` or `price_data` is required. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.",
            "in": "formData",
            "maxLength": 5000,
            "name": "price",
            "type": "string"
          },
          {
            "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.",
            "in": "formData",
            "name": "price_data",
            "type": "object"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          },
          {
            "description": "The quantity you'd like to apply to the subscription item you're creating.",
            "in": "formData",
            "name": "quantity",
            "type": "integer"
          },
          {
            "description": "A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "tax_rates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_item"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the plan or quantity of an item on a current subscription.</p>",
        "operationId": "PostSubscriptionItemsItem"
      }
    },
    "/v1/subscription_items/{subscription_item}/usage_record_summaries": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscription_item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/usage_record_summary"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "UsageEventsResourceUsageRecordSummaryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that’s been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the month of September).</p>\n\n<p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn’t ended yet. Since new usage records can still be added, the returned summary information for the subscription item’s ID should be seen as unstable until the subscription billing period ends.</p>",
        "operationId": "GetSubscriptionItemsSubscriptionItemUsageRecordSummaries"
      }
    },
    "/v1/subscription_items/{subscription_item}/usage_records": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription_item",
            "required": true,
            "type": "string"
          },
          {
            "description": "Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp. If the subscription has [billing thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds), `increment` is the only allowed value.",
            "enum": [
              "increment",
              "set"
            ],
            "in": "formData",
            "name": "action",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The usage quantity for the specified timestamp.",
            "in": "formData",
            "name": "quantity",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`, and must not be in the future. When passing `\"now\"`, Stripe records usage for the current time. Default is `\"now\"` if a value is not provided.",
            "in": "formData",
            "name": "timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/usage_record"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>\n\n<p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href=\"https://stripe.com/docs/billing/subscriptions/metered-billing\">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>\n\n<p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan’s <code>aggregate_usage</code> <a href=\"/docs/api/plans/create#create_plan-aggregate_usage\">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>\n\n<p>The default pricing model for metered billing is <a href=\"/docs/api/plans/object#plan_object-billing_scheme\">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href=\"https://stripe.com/docs/billing/subscriptions/tiers\">tiered pricing</a> model.</p>",
        "operationId": "PostSubscriptionItemsSubscriptionItemUsageRecords"
      }
    },
    "/v1/subscription_schedules": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return subscription schedules that were created canceled the given date interval.",
            "in": "query",
            "name": "canceled_at",
            "required": false
          },
          {
            "description": "Only return subscription schedules that completed during the given date interval.",
            "in": "query",
            "name": "completed_at",
            "required": false
          },
          {
            "description": "Only return subscription schedules that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return subscription schedules for the given customer.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return subscription schedules that were released during the given date interval.",
            "in": "query",
            "name": "released_at",
            "required": false
          },
          {
            "description": "Only return subscription schedules that have not started yet.",
            "in": "query",
            "name": "scheduled",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/subscription_schedule"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/subscription_schedules",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionSchedulesResourceScheduleList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the list of your subscription schedules.</p>",
        "operationId": "GetSubscriptionSchedules"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the customer to create the subscription schedule for.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "Object representing the subscription schedule's default settings.",
            "in": "formData",
            "name": "default_settings",
            "type": "object"
          },
          {
            "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.",
            "enum": [
              "cancel",
              "none",
              "release",
              "renew"
            ],
            "in": "formData",
            "name": "end_behavior",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Migrate an existing subscription to be managed by a subscription schedule. If this parameter is set, a subscription schedule will be created using the subscription's item(s), set to auto-renew using the subscription's interval. When using this parameter, other parameters (such as phase values) cannot be set. To create a subscription schedule with other modifications, we recommend making two separate API calls.",
            "in": "formData",
            "maxLength": 5000,
            "name": "from_subscription",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "collectionFormat": "csv",
            "description": "List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase.",
            "in": "formData",
            "items": {
              "properties": {
                "add_invoice_items": {
                  "items": {
                    "properties": {
                      "discounts": {
                        "items": {
                          "properties": {
                            "coupon": {
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "promotion_code": {
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "price": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "price_data": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "product": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "tax_behavior": {
                            "enum": [
                              "exclusive",
                              "inclusive",
                              "unspecified"
                            ],
                            "type": "string"
                          },
                          "unit_amount": {
                            "type": "integer"
                          },
                          "unit_amount_decimal": {
                            "format": "decimal",
                            "type": "string"
                          }
                        },
                        "required": [
                          "currency",
                          "product"
                        ],
                        "title": "one_time_price_data_with_negative_amounts",
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "tax_rates": {}
                    },
                    "title": "add_invoice_item_entry",
                    "type": "object"
                  },
                  "type": "array"
                },
                "application_fee_percent": {
                  "type": "number"
                },
                "automatic_tax": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "liability": {
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "account",
                            "self"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "param",
                      "type": "object"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "automatic_tax_config",
                  "type": "object"
                },
                "billing_cycle_anchor": {
                  "enum": [
                    "automatic",
                    "phase_start"
                  ],
                  "type": "string"
                },
                "billing_thresholds": {},
                "collection_method": {
                  "enum": [
                    "charge_automatically",
                    "send_invoice"
                  ],
                  "type": "string"
                },
                "coupon": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "default_payment_method": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "default_tax_rates": {},
                "description": {},
                "discounts": {},
                "end_date": {
                  "format": "unix-time",
                  "type": "integer"
                },
                "invoice_settings": {
                  "properties": {
                    "account_tax_ids": {},
                    "days_until_due": {
                      "type": "integer"
                    },
                    "issuer": {
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "account",
                            "self"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "param",
                      "type": "object"
                    }
                  },
                  "title": "invoice_settings",
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "billing_thresholds": {},
                      "discounts": {},
                      "metadata": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "price": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "price_data": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "product": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "recurring": {
                            "properties": {
                              "interval": {
                                "enum": [
                                  "day",
                                  "month",
                                  "week",
                                  "year"
                                ],
                                "type": "string"
                              },
                              "interval_count": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "interval"
                            ],
                            "title": "recurring_adhoc",
                            "type": "object"
                          },
                          "tax_behavior": {
                            "enum": [
                              "exclusive",
                              "inclusive",
                              "unspecified"
                            ],
                            "type": "string"
                          },
                          "unit_amount": {
                            "type": "integer"
                          },
                          "unit_amount_decimal": {
                            "format": "decimal",
                            "type": "string"
                          }
                        },
                        "required": [
                          "currency",
                          "product",
                          "recurring"
                        ],
                        "title": "recurring_price_data",
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "tax_rates": {}
                    },
                    "title": "configuration_item_params",
                    "type": "object"
                  },
                  "type": "array"
                },
                "iterations": {
                  "type": "integer"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "on_behalf_of": {
                  "type": "string"
                },
                "proration_behavior": {
                  "enum": [
                    "always_invoice",
                    "create_prorations",
                    "none"
                  ],
                  "type": "string"
                },
                "transfer_data": {
                  "properties": {
                    "amount_percent": {
                      "type": "number"
                    },
                    "destination": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "destination"
                  ],
                  "title": "transfer_data_specs",
                  "type": "object"
                },
                "trial": {
                  "type": "boolean"
                },
                "trial_end": {
                  "format": "unix-time",
                  "type": "integer"
                }
              },
              "required": [
                "items"
              ],
              "title": "phase_configuration_params",
              "type": "object"
            },
            "name": "phases",
            "type": "array"
          },
          {
            "description": "When the subscription schedule starts. We recommend using `now` so that it starts the subscription immediately. You can also use a Unix timestamp to backdate the subscription so that it starts on a past date, or set a future date for the subscription to start on.",
            "in": "formData",
            "name": "start_date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_schedule"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new subscription schedule object. Each customer can have up to 500 active or scheduled subscriptions.</p>",
        "operationId": "PostSubscriptionSchedules"
      }
    },
    "/v1/subscription_schedules/{schedule}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_schedule"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>",
        "operationId": "GetSubscriptionSchedulesSchedule"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "schedule",
            "required": true,
            "type": "string"
          },
          {
            "description": "Object representing the subscription schedule's default settings.",
            "in": "formData",
            "name": "default_settings",
            "type": "object"
          },
          {
            "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.",
            "enum": [
              "cancel",
              "none",
              "release",
              "renew"
            ],
            "in": "formData",
            "name": "end_behavior",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "collectionFormat": "csv",
            "description": "List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase. Note that past phases can be omitted.",
            "in": "formData",
            "items": {
              "properties": {
                "add_invoice_items": {
                  "items": {
                    "properties": {
                      "discounts": {
                        "items": {
                          "properties": {
                            "coupon": {
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "promotion_code": {
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "price": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "price_data": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "product": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "tax_behavior": {
                            "enum": [
                              "exclusive",
                              "inclusive",
                              "unspecified"
                            ],
                            "type": "string"
                          },
                          "unit_amount": {
                            "type": "integer"
                          },
                          "unit_amount_decimal": {
                            "format": "decimal",
                            "type": "string"
                          }
                        },
                        "required": [
                          "currency",
                          "product"
                        ],
                        "title": "one_time_price_data_with_negative_amounts",
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "tax_rates": {}
                    },
                    "title": "add_invoice_item_entry",
                    "type": "object"
                  },
                  "type": "array"
                },
                "application_fee_percent": {
                  "type": "number"
                },
                "automatic_tax": {
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "liability": {
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "account",
                            "self"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "param",
                      "type": "object"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "automatic_tax_config",
                  "type": "object"
                },
                "billing_cycle_anchor": {
                  "enum": [
                    "automatic",
                    "phase_start"
                  ],
                  "type": "string"
                },
                "billing_thresholds": {},
                "collection_method": {
                  "enum": [
                    "charge_automatically",
                    "send_invoice"
                  ],
                  "type": "string"
                },
                "coupon": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "default_payment_method": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "default_tax_rates": {},
                "description": {},
                "discounts": {},
                "end_date": {},
                "invoice_settings": {
                  "properties": {
                    "account_tax_ids": {},
                    "days_until_due": {
                      "type": "integer"
                    },
                    "issuer": {
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "account",
                            "self"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "param",
                      "type": "object"
                    }
                  },
                  "title": "invoice_settings",
                  "type": "object"
                },
                "items": {
                  "items": {
                    "properties": {
                      "billing_thresholds": {},
                      "discounts": {},
                      "metadata": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "price": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "price_data": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "product": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "recurring": {
                            "properties": {
                              "interval": {
                                "enum": [
                                  "day",
                                  "month",
                                  "week",
                                  "year"
                                ],
                                "type": "string"
                              },
                              "interval_count": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "interval"
                            ],
                            "title": "recurring_adhoc",
                            "type": "object"
                          },
                          "tax_behavior": {
                            "enum": [
                              "exclusive",
                              "inclusive",
                              "unspecified"
                            ],
                            "type": "string"
                          },
                          "unit_amount": {
                            "type": "integer"
                          },
                          "unit_amount_decimal": {
                            "format": "decimal",
                            "type": "string"
                          }
                        },
                        "required": [
                          "currency",
                          "product",
                          "recurring"
                        ],
                        "title": "recurring_price_data",
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "tax_rates": {}
                    },
                    "title": "configuration_item_params",
                    "type": "object"
                  },
                  "type": "array"
                },
                "iterations": {
                  "type": "integer"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "on_behalf_of": {
                  "type": "string"
                },
                "proration_behavior": {
                  "enum": [
                    "always_invoice",
                    "create_prorations",
                    "none"
                  ],
                  "type": "string"
                },
                "start_date": {},
                "transfer_data": {
                  "properties": {
                    "amount_percent": {
                      "type": "number"
                    },
                    "destination": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "destination"
                  ],
                  "title": "transfer_data_specs",
                  "type": "object"
                },
                "trial": {
                  "type": "boolean"
                },
                "trial_end": {}
              },
              "required": [
                "items"
              ],
              "title": "phase_configuration_params",
              "type": "object"
            },
            "name": "phases",
            "type": "array"
          },
          {
            "description": "If the update changes the current phase, indicates whether the changes should be prorated. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_schedule"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing subscription schedule.</p>",
        "operationId": "PostSubscriptionSchedulesSchedule"
      }
    },
    "/v1/subscription_schedules/{schedule}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "schedule",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "If the subscription schedule is `active`, indicates if a final invoice will be generated that contains any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`.",
            "in": "formData",
            "name": "invoice_now",
            "type": "boolean"
          },
          {
            "description": "If the subscription schedule is `active`, indicates if the cancellation should be prorated. Defaults to `true`.",
            "in": "formData",
            "name": "prorate",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_schedule"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>",
        "operationId": "PostSubscriptionSchedulesScheduleCancel"
      }
    },
    "/v1/subscription_schedules/{schedule}/release": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "schedule",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Keep any cancellation on the subscription that the schedule has set",
            "in": "formData",
            "name": "preserve_cancel_date",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription_schedule"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription’s ID to the <code>released_subscription</code> property.</p>",
        "operationId": "PostSubscriptionSchedulesScheduleRelease"
      }
    },
    "/v1/subscriptions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter subscriptions by their automatic tax settings.",
            "in": "query",
            "name": "automatic_tax",
            "required": false,
            "type": "object"
          },
          {
            "description": "The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "query",
            "name": "collection_method",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return subscriptions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return subscriptions whose current_period_end falls within the given date interval.",
            "in": "query",
            "name": "current_period_end",
            "required": false
          },
          {
            "description": "Only return subscriptions whose current_period_start falls within the given date interval.",
            "in": "query",
            "name": "current_period_start",
            "required": false
          },
          {
            "description": "The ID of the customer whose subscriptions will be retrieved.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter for subscriptions that contain this recurring price ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "price",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned.",
            "enum": [
              "active",
              "all",
              "canceled",
              "ended",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "paused",
              "trialing",
              "unpaid"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set.",
            "in": "query",
            "maxLength": 5000,
            "name": "test_clock",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/subscriptions",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionsSubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>",
        "operationId": "GetSubscriptions"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {
                  "items": {
                    "properties": {
                      "coupon": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "promotion_code": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data_with_negative_amounts",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "add_invoice_item_entry",
              "type": "object"
            },
            "name": "add_invoice_items",
            "type": "array"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.",
            "format": "unix-time",
            "in": "formData",
            "name": "backdate_start_date",
            "type": "integer"
          },
          {
            "description": "A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.",
            "format": "unix-time",
            "in": "formData",
            "name": "billing_cycle_anchor",
            "type": "integer",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Mutually exclusive with billing_cycle_anchor and only valid with monthly and yearly price intervals. When provided, the billing_cycle_anchor is set to the next occurence of the day_of_month at the hour, minute, and second UTC.",
            "in": "formData",
            "name": "billing_cycle_anchor_config",
            "type": "object"
          },
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.",
            "format": "unix-time",
            "in": "formData",
            "name": "cancel_at",
            "type": "integer"
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`.",
            "in": "formData",
            "name": "cancel_at_period_end",
            "type": "boolean"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "description": "The identifier of the customer to subscribe.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_source",
            "type": "string"
          },
          {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
            "in": "formData",
            "maxLength": 500,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "in": "formData",
            "items": {
              "properties": {
                "billing_thresholds": {},
                "discounts": {},
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "subscription_item_create_params",
              "type": "object"
            },
            "name": "items",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "The account on behalf of which to charge, for each of the subscription's invoices.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "Only applies to subscriptions with `collection_method=charge_automatically`.\n\nUse `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n\n`pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.\n\nSubscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "Payment settings to pass to invoices created by the subscription.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "in": "formData",
            "name": "pending_invoice_item_interval"
          },
          {
            "description": "The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.",
            "in": "formData",
            "name": "transfer_data",
            "type": "object"
          },
          {
            "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_end"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_from_plan",
            "type": "boolean"
          },
          {
            "description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_period_days",
            "type": "integer"
          },
          {
            "description": "Settings related to subscription trials.",
            "in": "formData",
            "name": "trial_settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new subscription on an existing customer. Each customer can have up to 500 active or scheduled subscriptions.</p>\n\n<p>When you create a subscription with <code>collection_method=charge_automatically</code>, the first invoice is finalized as part of the request.\nThe <code>payment_behavior</code> parameter determines the exact behavior of the initial payment.</p>\n\n<p>To start subscriptions where the first invoice always begins in a <code>draft</code> status, use <a href=\"/docs/billing/subscriptions/subscription-schedules#managing\">subscription schedules</a> instead.\nSchedules provide the flexibility to model more complex billing configurations that change over time.</p>",
        "operationId": "PostSubscriptions"
      }
    },
    "/v1/subscriptions/search": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "maxLength": 5000,
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for subscriptions](https://stripe.com/docs/search#query-fields-for-subscriptions).",
            "in": "query",
            "maxLength": 5000,
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "type": "boolean"
                },
                "next_page": {
                  "maxLength": 5000,
                  "type": "string",
                  "x-nullable": true
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "search_result"
                  ],
                  "type": "string"
                },
                "total_count": {
                  "description": "The total number of objects that match the query, only accurate up to 10,000.",
                  "type": "integer"
                },
                "url": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SearchResult",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Search for subscriptions you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetSubscriptionsSearch"
      }
    },
    "/v1/subscriptions/{subscription_exposed_id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details about why this subscription was cancelled",
            "in": "formData",
            "name": "cancellation_details",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`.",
            "in": "formData",
            "name": "invoice_now",
            "type": "boolean"
          },
          {
            "description": "Will generate a proration invoice item that credits remaining unused time until the subscription period end. Defaults to `false`.",
            "in": "formData",
            "name": "prorate",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a customer’s subscription immediately. The customer won’t be charged again for the subscription. After it’s canceled, you can no longer update the subscription or its <a href=\"/metadata\">metadata</a>.</p>\n\n<p>Any pending invoice items that you’ve created are still charged at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations are also left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations are removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe stops automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
        "operationId": "DeleteSubscriptionsSubscriptionExposedId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the subscription with the given ID.</p>",
        "operationId": "GetSubscriptionsSubscriptionExposedId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.",
            "in": "formData",
            "items": {
              "properties": {
                "discounts": {
                  "items": {
                    "properties": {
                      "coupon": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "promotion_code": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product"
                  ],
                  "title": "one_time_price_data_with_negative_amounts",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "add_invoice_item_entry",
              "type": "object"
            },
            "name": "add_invoice_items",
            "type": "array"
          },
          {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
            "in": "formData",
            "name": "application_fee_percent"
          },
          {
            "description": "Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.",
            "in": "formData",
            "name": "automatic_tax",
            "type": "object"
          },
          {
            "description": "Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "now",
              "unchanged"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "billing_cycle_anchor",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.",
            "in": "formData",
            "name": "billing_thresholds"
          },
          {
            "description": "A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.",
            "in": "formData",
            "name": "cancel_at"
          },
          {
            "description": "Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`.",
            "in": "formData",
            "name": "cancel_at_period_end",
            "type": "boolean"
          },
          {
            "description": "Details about why this subscription was cancelled",
            "in": "formData",
            "name": "cancellation_details",
            "type": "object"
          },
          {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "in": "formData",
            "name": "collection_method",
            "type": "string"
          },
          {
            "description": "The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "coupon",
            "type": "string"
          },
          {
            "description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.",
            "in": "formData",
            "name": "days_until_due",
            "type": "integer"
          },
          {
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "maxLength": 5000,
            "name": "default_payment_method",
            "type": "string"
          },
          {
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "in": "formData",
            "name": "default_source"
          },
          {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.",
            "in": "formData",
            "name": "default_tax_rates"
          },
          {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
            "in": "formData",
            "name": "description"
          },
          {
            "description": "The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.",
            "in": "formData",
            "name": "discounts"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "All invoices will be billed using the specified settings.",
            "in": "formData",
            "name": "invoice_settings",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "in": "formData",
            "items": {
              "properties": {
                "billing_thresholds": {},
                "clear_usage": {
                  "type": "boolean"
                },
                "deleted": {
                  "type": "boolean"
                },
                "discounts": {},
                "id": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {},
                "price": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "price_data": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "product": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "recurring": {
                      "properties": {
                        "interval": {
                          "enum": [
                            "day",
                            "month",
                            "week",
                            "year"
                          ],
                          "type": "string"
                        },
                        "interval_count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "title": "recurring_adhoc",
                      "type": "object"
                    },
                    "tax_behavior": {
                      "enum": [
                        "exclusive",
                        "inclusive",
                        "unspecified"
                      ],
                      "type": "string"
                    },
                    "unit_amount": {
                      "type": "integer"
                    },
                    "unit_amount_decimal": {
                      "format": "decimal",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "product",
                    "recurring"
                  ],
                  "title": "recurring_price_data",
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "tax_rates": {}
              },
              "title": "subscription_item_update_params",
              "type": "object"
            },
            "name": "items",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).",
            "in": "formData",
            "name": "off_session",
            "type": "boolean"
          },
          {
            "description": "The account on behalf of which to charge, for each of the subscription's invoices.",
            "in": "formData",
            "name": "on_behalf_of"
          },
          {
            "description": "If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).",
            "in": "formData",
            "name": "pause_collection"
          },
          {
            "description": "Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n\nUse `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n\nUse `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n\nUse `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.",
            "enum": [
              "allow_incomplete",
              "default_incomplete",
              "error_if_incomplete",
              "pending_if_incomplete"
            ],
            "in": "formData",
            "name": "payment_behavior",
            "type": "string"
          },
          {
            "description": "Payment settings to pass to invoices created by the subscription.",
            "in": "formData",
            "name": "payment_settings",
            "type": "object"
          },
          {
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "in": "formData",
            "name": "pending_invoice_item_interval"
          },
          {
            "description": "The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
            "in": "formData",
            "maxLength": 5000,
            "name": "promotion_code",
            "type": "string"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#upcoming_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          },
          {
            "description": "If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.",
            "in": "formData",
            "name": "transfer_data"
          },
          {
            "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`.",
            "in": "formData",
            "name": "trial_end"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "formData",
            "name": "trial_from_plan",
            "type": "boolean"
          },
          {
            "description": "Settings related to subscription trials.",
            "in": "formData",
            "name": "trial_settings",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing subscription to match the specified parameters.\nWhen changing prices or quantities, we optionally prorate the price we charge next month to make up for any price changes.\nTo preview how the proration is calculated, use the <a href=\"/docs/api/invoices/create_preview\">create preview</a> endpoint.</p>\n\n<p>By default, we prorate subscription changes. For example, if a customer signs up on May 1 for a <currency>100</currency> price, they’ll be billed <currency>100</currency> immediately. If on May 15 they switch to a <currency>200</currency> price, then on June 1 they’ll be billed <currency>250</currency> (<currency>200</currency> for a renewal of her subscription, plus a <currency>50</currency> prorating adjustment for half of the previous month’s <currency>100</currency> difference). Similarly, a downgrade generates a credit that is applied to the next invoice. We also prorate when you make quantity changes.</p>\n\n<p>Switching prices does not normally change the billing date or generate an immediate charge unless:</p>\n\n<ul>\n<li>The billing interval is changed (for example, from monthly to yearly).</li>\n<li>The subscription moves from free to paid.</li>\n<li>A trial starts or ends.</li>\n</ul>\n\n<p>In these cases, we apply a credit for the unused time on the previous price, immediately charge the customer using the new price, and reset the billing date. Learn about how <a href=\"/billing/subscriptions/upgrade-downgrade#immediate-payment\">Stripe immediately attempts payment for subscription changes</a>.</p>\n\n<p>If you want to charge for an upgrade immediately, pass <code>proration_behavior</code> as <code>always_invoice</code> to create prorations, automatically invoice the customer for those proration adjustments, and attempt to collect payment. If you pass <code>create_prorations</code>, the prorations are created but not automatically invoiced. If you want to bill the customer for the prorations before the subscription’s renewal date, you need to manually <a href=\"/docs/api/invoices/create\">invoice the customer</a>.</p>\n\n<p>If you don’t want to prorate, set the <code>proration_behavior</code> option to <code>none</code>. With this option, the customer is billed <currency>100</currency> on May 1 and <currency>200</currency> on June 1. Similarly, if you set <code>proration_behavior</code> to <code>none</code> when switching between different billing intervals (for example, from monthly to yearly), we don’t generate any credits for the old subscription’s unused time. We still reset the billing date and bill immediately for the new subscription.</p>\n\n<p>Updating the quantity on a subscription many times in an hour may result in <a href=\"/docs/rate-limits\">rate limiting</a>. If you need to bill for a frequently changing quantity, consider integrating <a href=\"/docs/billing/subscriptions/usage-based\">usage-based billing</a> instead.</p>",
        "operationId": "PostSubscriptionsSubscriptionExposedId"
      }
    },
    "/v1/subscriptions/{subscription_exposed_id}/discount": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription_exposed_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_discount"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Removes the currently applied discount on a subscription.</p>",
        "operationId": "DeleteSubscriptionsSubscriptionExposedIdDiscount"
      }
    },
    "/v1/subscriptions/{subscription}/resume": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "subscription",
            "required": true,
            "type": "string"
          },
          {
            "description": "Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). Setting the value to `unchanged` advances the subscription's billing cycle anchor to the period that surrounds the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "now",
              "unchanged"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "billing_cycle_anchor",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "in": "formData",
            "name": "proration_behavior",
            "type": "string"
          },
          {
            "description": "If set, the proration will be calculated as though the subscription was resumed at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.",
            "format": "unix-time",
            "in": "formData",
            "name": "proration_date",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Initiates resumption of a paused subscription, optionally resetting the billing cycle anchor and creating prorations. If a resumption invoice is generated, it must be paid or marked uncollectible before the subscription will be unpaused. If payment succeeds the subscription will become <code>active</code>, and if payment fails the subscription will be <code>past_due</code>. The resumption invoice will void automatically if not paid by the expiration date.</p>",
        "operationId": "PostSubscriptionsSubscriptionResume"
      }
    },
    "/v1/tax/calculations": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of an existing customer to use for this calculation. If provided, the customer's address and tax IDs are copied to `customer_details`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "Details about the customer, including address and tax IDs.",
            "in": "formData",
            "name": "customer_details",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "A list of items the customer is purchasing.",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "product": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "reference": {
                  "maxLength": 500,
                  "type": "string"
                },
                "tax_behavior": {
                  "enum": [
                    "exclusive",
                    "inclusive"
                  ],
                  "type": "string"
                },
                "tax_code": {
                  "type": "string"
                }
              },
              "required": [
                "amount"
              ],
              "title": "calculation_line_item",
              "type": "object"
            },
            "name": "line_items",
            "required": true,
            "type": "array"
          },
          {
            "description": "Details about the address from which the goods are being shipped.",
            "in": "formData",
            "name": "ship_from_details",
            "type": "object"
          },
          {
            "description": "Shipping cost details to be used for the calculation.",
            "in": "formData",
            "name": "shipping_cost",
            "type": "object"
          },
          {
            "description": "Timestamp of date at which the tax rules and rates in effect applies for the calculation. Measured in seconds since the Unix epoch. Can be up to 48 hours in the past, and up to 48 hours in the future.",
            "in": "formData",
            "name": "tax_date",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.calculation"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Calculates tax based on the input and returns a Tax <code>Calculation</code> object.</p>",
        "operationId": "PostTaxCalculations"
      }
    },
    "/v1/tax/calculations/{calculation}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "calculation",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.calculation"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Tax <code>Calculation</code> object, if the calculation hasn’t expired.</p>",
        "operationId": "GetTaxCalculationsCalculation"
      }
    },
    "/v1/tax/calculations/{calculation}/line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "calculation",
            "required": true,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 500,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 500,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/tax.calculation_line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/tax/calculations/[^/]+/line_items",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxProductResourceTaxCalculationLineItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the line items of a tax calculation as a collection, if the calculation hasn’t expired.</p>",
        "operationId": "GetTaxCalculationsCalculationLineItems"
      }
    },
    "/v1/tax/registrations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The status of the Tax Registration.",
            "enum": [
              "active",
              "all",
              "expired",
              "scheduled"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/tax.registration"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/tax/registrations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxProductRegistrationsResourceTaxRegistrationList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of Tax <code>Registration</code> objects.</p>",
        "operationId": "GetTaxRegistrations"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Time at which the Tax Registration becomes active. It can be either `now` to indicate the current time, or a future timestamp measured in seconds since the Unix epoch.",
            "in": "formData",
            "name": "active_from",
            "required": true
          },
          {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "in": "formData",
            "maxLength": 5000,
            "name": "country",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specific options for a registration in the specified `country`.",
            "in": "formData",
            "name": "country_options",
            "required": true,
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "If set, the Tax Registration stops being active at this time. If not set, the Tax Registration will be active indefinitely. Timestamp measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "in": "formData",
            "name": "expires_at",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.registration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new Tax <code>Registration</code> object.</p>",
        "operationId": "PostTaxRegistrations"
      }
    },
    "/v1/tax/registrations/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.registration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a Tax <code>Registration</code> object.</p>",
        "operationId": "GetTaxRegistrationsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Time at which the registration becomes active. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.",
            "in": "formData",
            "name": "active_from"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "If set, the registration stops being active at this time. If not set, the registration will be active indefinitely. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.",
            "in": "formData",
            "name": "expires_at"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.registration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing Tax <code>Registration</code> object.</p>\n\n<p>A registration cannot be deleted after it has been created. If you wish to end a registration you may do so by setting <code>expires_at</code>.</p>",
        "operationId": "PostTaxRegistrationsId"
      }
    },
    "/v1/tax/settings": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.settings"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves Tax <code>Settings</code> for a merchant.</p>",
        "operationId": "GetTaxSettings"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Default configuration to be used on Stripe Tax calculations.",
            "in": "formData",
            "name": "defaults",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The place where your business is located.",
            "in": "formData",
            "name": "head_office",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.settings"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates Tax <code>Settings</code> parameters used in tax calculations. All parameters are editable but none can be removed once set.</p>",
        "operationId": "PostTaxSettings"
      }
    },
    "/v1/tax/transactions/create_from_calculation": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Tax Calculation ID to be used as input when creating the transaction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "calculation",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The Unix timestamp representing when the tax liability is assumed or reduced, which determines the liability posting period and handling in tax liability reports. The timestamp must fall within the `tax_date` and the current time, unless the `tax_date` is scheduled in advance. Defaults to the current time.",
            "format": "unix-time",
            "in": "formData",
            "name": "posted_at",
            "type": "integer"
          },
          {
            "description": "A custom order or sale identifier, such as 'myOrder_123'. Must be unique across all transactions, including reversals.",
            "in": "formData",
            "maxLength": 500,
            "name": "reference",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a Tax Transaction from a calculation, if that calculation hasn’t expired. Calculations expire after 90 days.</p>",
        "operationId": "PostTaxTransactionsCreateFromCalculation"
      }
    },
    "/v1/tax/transactions/create_reversal": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A flat amount to reverse across the entire transaction, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) in negative. This value represents the total amount to refund from the transaction, including taxes.",
            "in": "formData",
            "name": "flat_amount",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "The line item amounts to reverse.",
            "in": "formData",
            "items": {
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "amount_tax": {
                  "type": "integer"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "original_line_item": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "reference": {
                  "maxLength": 500,
                  "type": "string"
                }
              },
              "required": [
                "amount",
                "amount_tax",
                "original_line_item",
                "reference"
              ],
              "title": "transaction_line_item_reversal",
              "type": "object"
            },
            "name": "line_items",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "If `partial`, the provided line item or shipping cost amounts are reversed. If `full`, the original transaction is fully reversed.",
            "enum": [
              "full",
              "partial"
            ],
            "in": "formData",
            "name": "mode",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the Transaction to partially or fully reverse.",
            "in": "formData",
            "maxLength": 5000,
            "name": "original_transaction",
            "required": true,
            "type": "string"
          },
          {
            "description": "A custom identifier for this reversal, such as `myOrder_123-refund_1`, which must be unique across all transactions. The reference helps identify this reversal transaction in exported [tax reports](https://stripe.com/docs/tax/reports).",
            "in": "formData",
            "maxLength": 500,
            "name": "reference",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipping cost to reverse.",
            "in": "formData",
            "name": "shipping_cost",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Partially or fully reverses a previously created <code>Transaction</code>.</p>",
        "operationId": "PostTaxTransactionsCreateReversal"
      }
    },
    "/v1/tax/transactions/{transaction}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a Tax <code>Transaction</code> object.</p>",
        "operationId": "GetTaxTransactionsTransaction"
      }
    },
    "/v1/tax/transactions/{transaction}/line_items": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 500,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 500,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/tax.transaction_line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/tax/transactions/[^/]+/line_items",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxProductResourceTaxTransactionLineItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the line items of a committed standalone transaction as a collection.</p>",
        "operationId": "GetTaxTransactionsTransactionLineItems"
      }
    },
    "/v1/tax_codes": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/tax_code"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxProductResourceTaxCodeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A list of <a href=\"https://stripe.com/docs/tax/tax-categories\">all tax codes available</a> to add to Products in order to allow specific tax calculations.</p>",
        "operationId": "GetTaxCodes"
      }
    },
    "/v1/tax_codes/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_code"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing tax code. Supply the unique tax code ID and Stripe will return the corresponding tax code information.</p>",
        "operationId": "GetTaxCodesId"
      }
    },
    "/v1/tax_ids": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The account or customer the tax ID belongs to. Defaults to `owner[type]=self`.",
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of tax IDs.</p>",
        "operationId": "GetTaxIds"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The account or customer the tax ID belongs to. Defaults to `owner[type]=self`.",
            "in": "formData",
            "name": "owner",
            "type": "object"
          },
          {
            "description": "Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`",
            "enum": [
              "ad_nrt",
              "ae_trn",
              "ar_cuit",
              "au_abn",
              "au_arn",
              "bg_uic",
              "bh_vat",
              "bo_tin",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_uid",
              "ch_vat",
              "cl_tin",
              "cn_tin",
              "co_nit",
              "cr_tin",
              "de_stn",
              "do_rcn",
              "ec_ruc",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hr_oib",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "kz_bin",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "ng_tin",
              "no_vat",
              "no_voec",
              "nz_gst",
              "om_vat",
              "pe_ruc",
              "ph_tin",
              "ro_tin",
              "rs_pib",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "sv_nit",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "us_ein",
              "uy_ruc",
              "ve_rif",
              "vn_tin",
              "za_vat"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "type",
            "required": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Value of the tax ID.",
            "in": "formData",
            "name": "value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new account or customer <code>tax_id</code> object.</p>",
        "operationId": "PostTaxIds"
      }
    },
    "/v1/tax_ids/{id}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes an existing account or customer <code>tax_id</code> object.</p>",
        "operationId": "DeleteTaxIdsId"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_id"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves an account or customer <code>tax_id</code> object.</p>",
        "operationId": "GetTaxIdsId"
      }
    },
    "/v1/tax_rates": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Optional flag to filter by tax rates that are either active or inactive (archived).",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optional range for filtering created date.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).",
            "in": "query",
            "name": "inclusive",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/tax_rate"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/tax_rates",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxRatesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>",
        "operationId": "GetTaxRates"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "in": "formData",
            "maxLength": 5000,
            "name": "country",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The display name of the tax rate, which will be shown to users.",
            "in": "formData",
            "maxLength": 50,
            "name": "display_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "This specifies if the tax rate is inclusive or exclusive.",
            "in": "formData",
            "name": "inclusive",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
            "in": "formData",
            "maxLength": 50,
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "This represents the tax rate percent out of 100.",
            "in": "formData",
            "name": "percentage",
            "required": true,
            "type": "number"
          },
          {
            "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
            "in": "formData",
            "maxLength": 2,
            "name": "state",
            "type": "string"
          },
          {
            "description": "The high-level tax type, such as `vat` or `sales_tax`.",
            "enum": [
              "amusement_tax",
              "communications_tax",
              "gst",
              "hst",
              "igst",
              "jct",
              "lease_tax",
              "pst",
              "qst",
              "rst",
              "sales_tax",
              "vat"
            ],
            "in": "formData",
            "name": "tax_type",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new tax rate.</p>",
        "operationId": "PostTaxRates"
      }
    },
    "/v1/tax_rates/{tax_rate}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "tax_rate",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a tax rate with the given ID</p>",
        "operationId": "GetTaxRatesTaxRate"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "tax_rate",
            "required": true,
            "type": "string"
          },
          {
            "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
            "in": "formData",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "in": "formData",
            "maxLength": 5000,
            "name": "country",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The display name of the tax rate, which will be shown to users.",
            "in": "formData",
            "maxLength": 50,
            "name": "display_name",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
            "in": "formData",
            "maxLength": 50,
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
            "in": "formData",
            "maxLength": 2,
            "name": "state",
            "type": "string"
          },
          {
            "description": "The high-level tax type, such as `vat` or `sales_tax`.",
            "enum": [
              "amusement_tax",
              "communications_tax",
              "gst",
              "hst",
              "igst",
              "jct",
              "lease_tax",
              "pst",
              "qst",
              "rst",
              "sales_tax",
              "vat"
            ],
            "in": "formData",
            "name": "tax_type",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/tax_rate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates an existing tax rate.</p>",
        "operationId": "PostTaxRatesTaxRate"
      }
    },
    "/v1/terminal/configurations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "if present, only return the account default or non-default configurations.",
            "in": "query",
            "name": "is_account_default",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/terminal.configuration"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/terminal/configurations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TerminalConfigurationConfigurationList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>Configuration</code> objects.</p>",
        "operationId": "GetTerminalConfigurations"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An object containing device type specific settings for BBPOS WisePOS E readers",
            "in": "formData",
            "name": "bbpos_wisepos_e",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Name of the configuration",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "type": "string"
          },
          {
            "description": "Configurations for collecting transactions offline.",
            "in": "formData",
            "name": "offline"
          },
          {
            "description": "Reboot time settings for readers that support customized reboot time configuration.",
            "in": "formData",
            "name": "reboot_window",
            "type": "object"
          },
          {
            "description": "An object containing device type specific settings for Stripe S700 readers",
            "in": "formData",
            "name": "stripe_s700",
            "type": "object"
          },
          {
            "description": "Tipping configurations for readers supporting on-reader tips",
            "in": "formData",
            "name": "tipping"
          },
          {
            "description": "An object containing device type specific settings for Verifone P400 readers",
            "in": "formData",
            "name": "verifone_p400",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>Configuration</code> object.</p>",
        "operationId": "PostTerminalConfigurations"
      }
    },
    "/v1/terminal/configurations/{configuration}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_terminal.configuration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a <code>Configuration</code> object.</p>",
        "operationId": "DeleteTerminalConfigurationsConfiguration"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>Configuration</code> object.</p>",
        "operationId": "GetTerminalConfigurationsConfiguration"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "configuration",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing device type specific settings for BBPOS WisePOS E readers",
            "in": "formData",
            "name": "bbpos_wisepos_e"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Name of the configuration",
            "in": "formData",
            "maxLength": 100,
            "name": "name",
            "type": "string"
          },
          {
            "description": "Configurations for collecting transactions offline.",
            "in": "formData",
            "name": "offline"
          },
          {
            "description": "Reboot time settings for readers that support customized reboot time configuration.",
            "in": "formData",
            "name": "reboot_window"
          },
          {
            "description": "An object containing device type specific settings for Stripe S700 readers",
            "in": "formData",
            "name": "stripe_s700"
          },
          {
            "description": "Tipping configurations for readers supporting on-reader tips",
            "in": "formData",
            "name": "tipping"
          },
          {
            "description": "An object containing device type specific settings for Verifone P400 readers",
            "in": "formData",
            "name": "verifone_p400"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a new <code>Configuration</code> object.</p>",
        "operationId": "PostTerminalConfigurationsConfiguration"
      }
    },
    "/v1/terminal/connection_tokens": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The id of the location that this connection token is scoped to. If specified the connection token will only be usable with readers assigned to that location, otherwise the connection token will be usable with all readers. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).",
            "in": "formData",
            "maxLength": 5000,
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.connection_token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>",
        "operationId": "PostTerminalConnectionTokens"
      }
    },
    "/v1/terminal/locations": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/terminal.location"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/terminal/locations",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TerminalLocationLocationList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>Location</code> objects.</p>",
        "operationId": "GetTerminalLocations"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The full address of the location.",
            "in": "formData",
            "name": "address",
            "required": true,
            "type": "object"
          },
          {
            "description": "The ID of a configuration that will be used to customize all readers in this location.",
            "in": "formData",
            "maxLength": 500,
            "name": "configuration_overrides",
            "type": "string"
          },
          {
            "description": "A name for the location. Maximum length is 1000 characters.",
            "in": "formData",
            "maxLength": 1000,
            "name": "display_name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.location"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>Location</code> object.\nFor further details, including which address fields are required in each country, see the <a href=\"/docs/terminal/fleet/locations\">Manage locations</a> guide.</p>",
        "operationId": "PostTerminalLocations"
      }
    },
    "/v1/terminal/locations/{location}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_terminal.location"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a <code>Location</code> object.</p>",
        "operationId": "DeleteTerminalLocationsLocation"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>Location</code> object.</p>",
        "operationId": "GetTerminalLocationsLocation"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "location",
            "required": true,
            "type": "string"
          },
          {
            "description": "The full address of the location. If you're updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.",
            "in": "formData",
            "name": "address",
            "type": "object"
          },
          {
            "description": "The ID of a configuration that will be used to customize all readers in this location.",
            "in": "formData",
            "name": "configuration_overrides"
          },
          {
            "description": "A name for the location.",
            "in": "formData",
            "maxLength": 1000,
            "name": "display_name",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostTerminalLocationsLocation"
      }
    },
    "/v1/terminal/readers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filters readers by device type",
            "enum": [
              "bbpos_chipper2x",
              "bbpos_wisepad3",
              "bbpos_wisepos_e",
              "mobile_phone_reader",
              "simulated_wisepos_e",
              "stripe_m2",
              "stripe_s700",
              "verifone_P400"
            ],
            "in": "query",
            "name": "device_type",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A location ID to filter the response list to only readers at the specific location",
            "in": "query",
            "maxLength": 5000,
            "name": "location",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters readers by serial number",
            "in": "query",
            "maxLength": 5000,
            "name": "serial_number",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "A status filter to filter readers to only offline or online readers",
            "enum": [
              "offline",
              "online"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "A list of readers",
                  "items": {
                    "$ref": "#/definitions/terminal.reader"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TerminalReaderRetrieveReader",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of <code>Reader</code> objects.</p>",
        "operationId": "GetTerminalReaders"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.",
            "in": "formData",
            "maxLength": 5000,
            "name": "label",
            "type": "string"
          },
          {
            "description": "The location to assign the reader to.",
            "in": "formData",
            "maxLength": 5000,
            "name": "location",
            "type": "string"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "A code generated by the reader used for registering to an account.",
            "in": "formData",
            "maxLength": 5000,
            "name": "registration_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new <code>Reader</code> object.</p>",
        "operationId": "PostTerminalReaders"
      }
    },
    "/v1/terminal/readers/{reader}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a <code>Reader</code> object.</p>",
        "operationId": "DeleteTerminalReadersReader"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a <code>Reader</code> object.</p>",
        "operationId": "GetTerminalReadersReader"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The new label of the reader.",
            "in": "formData",
            "name": "label"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {}
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
        "operationId": "PostTerminalReadersReader"
      }
    },
    "/v1/terminal/readers/{reader}/cancel_action": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels the current reader action.</p>",
        "operationId": "PostTerminalReadersReaderCancelAction"
      }
    },
    "/v1/terminal/readers/{reader}/process_payment_intent": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "PaymentIntent ID",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_intent",
            "required": true,
            "type": "string"
          },
          {
            "description": "Configuration overrides",
            "in": "formData",
            "name": "process_config",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Initiates a payment flow on a Reader.</p>",
        "operationId": "PostTerminalReadersReaderProcessPaymentIntent"
      }
    },
    "/v1/terminal/readers/{reader}/process_setup_intent": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow.",
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "in": "formData",
            "name": "allow_redisplay",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Configuration overrides",
            "in": "formData",
            "name": "process_config",
            "type": "object"
          },
          {
            "description": "SetupIntent ID",
            "in": "formData",
            "maxLength": 5000,
            "name": "setup_intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Initiates a setup intent flow on a Reader.</p>",
        "operationId": "PostTerminalReadersReaderProcessSetupIntent"
      }
    },
    "/v1/terminal/readers/{reader}/refund_payment": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "description": "A positive integer in __cents__ representing how much of this charge to refund.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "ID of the Charge to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "charge",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "ID of the PaymentIntent to refund.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_intent",
            "type": "string"
          },
          {
            "description": "Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.",
            "in": "formData",
            "name": "refund_application_fee",
            "type": "boolean"
          },
          {
            "description": "Configuration overrides",
            "in": "formData",
            "name": "refund_payment_config",
            "type": "object"
          },
          {
            "description": "Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.",
            "in": "formData",
            "name": "reverse_transfer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Initiates a refund on a Reader</p>",
        "operationId": "PostTerminalReadersReaderRefundPayment"
      }
    },
    "/v1/terminal/readers/{reader}/set_reader_display": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "description": "Cart",
            "in": "formData",
            "name": "cart",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Type",
            "enum": [
              "cart"
            ],
            "in": "formData",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Sets reader display to show cart details.</p>",
        "operationId": "PostTerminalReadersReaderSetReaderDisplay"
      }
    },
    "/v1/test_helpers/confirmation_tokens": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "ID of an existing PaymentMethod.",
            "in": "formData",
            "maxLength": 5000,
            "name": "payment_method",
            "type": "string"
          },
          {
            "description": "If provided, this hash will be used to create a PaymentMethod.",
            "in": "formData",
            "name": "payment_method_data",
            "type": "object"
          },
          {
            "description": "Return URL used to confirm the Intent.",
            "in": "formData",
            "name": "return_url",
            "type": "string"
          },
          {
            "description": "Indicates that you intend to make future payments with this ConfirmationToken's payment method.\n\nThe presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.",
            "enum": [
              "off_session",
              "on_session"
            ],
            "in": "formData",
            "name": "setup_future_usage",
            "type": "string"
          },
          {
            "description": "Shipping information for this ConfirmationToken.",
            "in": "formData",
            "name": "shipping",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/confirmation_token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a test mode Confirmation Token server side for your integration tests.</p>",
        "operationId": "PostTestHelpersConfirmationTokens"
      }
    },
    "/v1/test_helpers/customers/{customer}/fund_cash_balance": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "customer",
            "required": true,
            "type": "string"
          },
          {
            "description": "Amount to be used for this test cash balance transaction. A positive integer representing how much to fund in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to fund $1.00 or 100 to fund ¥100, a zero-decimal currency).",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "A description of the test funding. This simulates free-text references supplied by customers when making bank transfers to their cash balance. You can use this to test how Stripe's [reconciliation algorithm](https://stripe.com/docs/payments/customer-balance/reconciliation) applies to different user inputs.",
            "in": "formData",
            "maxLength": 5000,
            "name": "reference",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/customer_cash_balance_transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create an incoming testmode bank transfer</p>",
        "operationId": "PostTestHelpersCustomersCustomerFundCashBalance"
      }
    },
    "/v1/test_helpers/issuing/authorizations": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The total amount to attempt to authorize. This amount is in the provided currency, or defaults to the card's currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "amount_details",
            "type": "object"
          },
          {
            "description": "How the card details were provided. Defaults to online.",
            "enum": [
              "chip",
              "contactless",
              "keyed_in",
              "online",
              "swipe"
            ],
            "in": "formData",
            "name": "authorization_method",
            "type": "string"
          },
          {
            "description": "Card associated with this authorization.",
            "in": "formData",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "The currency of the authorization. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Fleet-specific information for authorizations using Fleet cards.",
            "in": "formData",
            "name": "fleet",
            "type": "object"
          },
          {
            "description": "Information about fuel that was purchased with this transaction.",
            "in": "formData",
            "name": "fuel",
            "type": "object"
          },
          {
            "description": "If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.",
            "in": "formData",
            "name": "is_amount_controllable",
            "type": "boolean"
          },
          {
            "description": "Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.",
            "in": "formData",
            "name": "merchant_data",
            "type": "object"
          },
          {
            "description": "Details about the authorization, such as identifiers, set by the card network.",
            "in": "formData",
            "name": "network_data",
            "type": "object"
          },
          {
            "description": "Verifications that Stripe performed on information that the cardholder provided to the merchant.",
            "in": "formData",
            "name": "verification_data",
            "type": "object"
          },
          {
            "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.",
            "enum": [
              "apple_pay",
              "google_pay",
              "samsung_pay"
            ],
            "in": "formData",
            "name": "wallet",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Create a test-mode authorization.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizations"
      }
    },
    "/v1/test_helpers/issuing/authorizations/{authorization}/capture": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The amount to capture from the authorization. If not provided, the full amount of the authorization will be captured. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "capture_amount",
            "type": "integer"
          },
          {
            "description": "Whether to close the authorization after capture. Defaults to true. Set to false to enable multi-capture flows.",
            "in": "formData",
            "name": "close_authorization",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Additional purchase information that is optionally provided by the merchant.",
            "in": "formData",
            "name": "purchase_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Capture a test-mode authorization.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationCapture"
      }
    },
    "/v1/test_helpers/issuing/authorizations/{authorization}/expire": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Expire a test-mode Authorization.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationExpire"
      }
    },
    "/v1/test_helpers/issuing/authorizations/{authorization}/finalize_amount": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The final authorization amount that will be captured by the merchant. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "final_amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Fleet-specific information for authorizations using Fleet cards.",
            "in": "formData",
            "name": "fleet",
            "type": "object"
          },
          {
            "description": "Information about fuel that was purchased with this transaction.",
            "in": "formData",
            "name": "fuel",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Finalize the amount on an Authorization prior to capture, when the initial authorization was for an estimated amount.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationFinalizeAmount"
      }
    },
    "/v1/test_helpers/issuing/authorizations/{authorization}/increment": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The amount to increment the authorization by. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "increment_amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.",
            "in": "formData",
            "name": "is_amount_controllable",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Increment a test-mode Authorization.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationIncrement"
      }
    },
    "/v1/test_helpers/issuing/authorizations/{authorization}/reverse": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "authorization",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The amount to reverse from the authorization. If not provided, the full amount of the authorization will be reversed. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "reverse_amount",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.authorization"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reverse a test-mode Authorization.</p>",
        "operationId": "PostTestHelpersIssuingAuthorizationsAuthorizationReverse"
      }
    },
    "/v1/test_helpers/issuing/cards/{card}/shipping/deliver": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>delivered</code>.</p>",
        "operationId": "PostTestHelpersIssuingCardsCardShippingDeliver"
      }
    },
    "/v1/test_helpers/issuing/cards/{card}/shipping/fail": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>failure</code>.</p>",
        "operationId": "PostTestHelpersIssuingCardsCardShippingFail"
      }
    },
    "/v1/test_helpers/issuing/cards/{card}/shipping/return": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>returned</code>.</p>",
        "operationId": "PostTestHelpersIssuingCardsCardShippingReturn"
      }
    },
    "/v1/test_helpers/issuing/cards/{card}/shipping/ship": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.card"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the shipping status of the specified Issuing <code>Card</code> object to <code>shipped</code>.</p>",
        "operationId": "PostTestHelpersIssuingCardsCardShippingShip"
      }
    },
    "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>active</code>.</p>",
        "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignActivate"
      }
    },
    "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>inactive</code>.</p>",
        "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignDeactivate"
      }
    },
    "/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "personalization_design",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The reason(s) the personalization design was rejected.",
            "in": "formData",
            "name": "rejection_reasons",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.personalization_design"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the <code>status</code> of the specified testmode personalization design object to <code>rejected</code>.</p>",
        "operationId": "PostTestHelpersIssuingPersonalizationDesignsPersonalizationDesignReject"
      }
    },
    "/v1/test_helpers/issuing/settlements": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Bank Identification Number reflecting this settlement record.",
            "in": "formData",
            "maxLength": 5000,
            "name": "bin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The date that the transactions are cleared and posted to user's accounts.",
            "in": "formData",
            "name": "clearing_date",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The total interchange received as reimbursement for the transactions.",
            "in": "formData",
            "name": "interchange_fees",
            "type": "integer"
          },
          {
            "description": "The total net amount required to settle with the network.",
            "in": "formData",
            "name": "net_total",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The Settlement Identification Number assigned by the network.",
            "in": "formData",
            "maxLength": 5000,
            "name": "network_settlement_identifier",
            "type": "string"
          },
          {
            "description": "The total number of transactions reflected in this settlement.",
            "in": "formData",
            "name": "transaction_count",
            "type": "integer"
          },
          {
            "description": "The total transaction amount reflected in this settlement.",
            "in": "formData",
            "name": "transaction_volume",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.settlement"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Allows the user to create an Issuing settlement.</p>",
        "operationId": "PostTestHelpersIssuingSettlements"
      }
    },
    "/v1/test_helpers/issuing/transactions/create_force_capture": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The total amount to attempt to capture. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Card associated with this transaction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "The currency of the capture. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.",
            "in": "formData",
            "name": "merchant_data",
            "type": "object"
          },
          {
            "description": "Additional purchase information that is optionally provided by the merchant.",
            "in": "formData",
            "name": "purchase_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Allows the user to capture an arbitrary amount, also known as a forced capture.</p>",
        "operationId": "PostTestHelpersIssuingTransactionsCreateForceCapture"
      }
    },
    "/v1/test_helpers/issuing/transactions/create_unlinked_refund": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Card associated with this unlinked refund transaction.",
            "in": "formData",
            "maxLength": 5000,
            "name": "card",
            "required": true,
            "type": "string"
          },
          {
            "description": "The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.",
            "in": "formData",
            "name": "merchant_data",
            "type": "object"
          },
          {
            "description": "Additional purchase information that is optionally provided by the merchant.",
            "in": "formData",
            "name": "purchase_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Allows the user to refund an arbitrary amount, also known as a unlinked refund.</p>",
        "operationId": "PostTestHelpersIssuingTransactionsCreateUnlinkedRefund"
      }
    },
    "/v1/test_helpers/issuing/transactions/{transaction}/refund": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transaction",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "in": "formData",
            "name": "refund_amount",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/issuing.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Refund a test-mode Transaction.</p>",
        "operationId": "PostTestHelpersIssuingTransactionsTransactionRefund"
      }
    },
    "/v1/test_helpers/refunds/{refund}/expire": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/refund"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Expire a refund with a status of <code>requires_action</code>.</p>",
        "operationId": "PostTestHelpersRefundsRefundExpire"
      }
    },
    "/v1/test_helpers/terminal/readers/{reader}/present_payment_method": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "reader",
            "required": true,
            "type": "string"
          },
          {
            "description": "Simulated on-reader tip amount.",
            "in": "formData",
            "name": "amount_tip",
            "type": "integer"
          },
          {
            "description": "Simulated data for the card_present payment method.",
            "in": "formData",
            "name": "card_present",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Simulated data for the interac_present payment method.",
            "in": "formData",
            "name": "interac_present",
            "type": "object"
          },
          {
            "description": "Simulated payment type.",
            "enum": [
              "card_present",
              "interac_present"
            ],
            "in": "formData",
            "name": "type",
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/terminal.reader"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Presents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.</p>",
        "operationId": "PostTestHelpersTerminalReadersReaderPresentPaymentMethod"
      }
    },
    "/v1/test_helpers/test_clocks": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/test_helpers.test_clock"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/test_helpers/test_clocks",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "BillingClocksResourceBillingClockList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your test clocks.</p>",
        "operationId": "GetTestHelpersTestClocks"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The initial frozen time for this test clock.",
            "format": "unix-time",
            "in": "formData",
            "name": "frozen_time",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The name for this test clock.",
            "in": "formData",
            "maxLength": 300,
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/test_helpers.test_clock"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new test clock that can be attached to new customers and quotes.</p>",
        "operationId": "PostTestHelpersTestClocks"
      }
    },
    "/v1/test_helpers/test_clocks/{test_clock}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "test_clock",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_test_helpers.test_clock"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Deletes a test clock.</p>",
        "operationId": "DeleteTestHelpersTestClocksTestClock"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "test_clock",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/test_helpers.test_clock"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a test clock.</p>",
        "operationId": "GetTestHelpersTestClocksTestClock"
      }
    },
    "/v1/test_helpers/test_clocks/{test_clock}/advance": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "test_clock",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The time to advance the test clock. Must be after the test clock's current frozen time. Cannot be more than two intervals in the future from the shortest subscription in this test clock. If there are no subscriptions in this test clock, it cannot be more than two years in the future.",
            "format": "unix-time",
            "in": "formData",
            "name": "frozen_time",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/test_helpers.test_clock"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Starts advancing a test clock to a specified time in the future. Advancement is done when status changes to <code>Ready</code>.</p>",
        "operationId": "PostTestHelpersTestClocksTestClockAdvance"
      }
    },
    "/v1/test_helpers/treasury/inbound_transfers/{id}/fail": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about a failed InboundTransfer.",
            "in": "formData",
            "name": "failure_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created InboundTransfer to the <code>failed</code> status. The InboundTransfer must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryInboundTransfersIdFail"
      }
    },
    "/v1/test_helpers/treasury/inbound_transfers/{id}/return": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Marks the test mode InboundTransfer object as returned and links the InboundTransfer to a ReceivedDebit. The InboundTransfer must already be in the <code>succeeded</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryInboundTransfersIdReturn"
      }
    },
    "/v1/test_helpers/treasury/inbound_transfers/{id}/succeed": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created InboundTransfer to the <code>succeeded</code> status. The InboundTransfer must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryInboundTransfersIdSucceed"
      }
    },
    "/v1/test_helpers/treasury/outbound_payments/{id}": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about network-specific tracking information.",
            "in": "formData",
            "name": "tracking_details",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a test mode created OutboundPayment with tracking details. The OutboundPayment must not be cancelable, and cannot be in the <code>canceled</code> or <code>failed</code> states.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundPaymentsId"
      }
    },
    "/v1/test_helpers/treasury/outbound_payments/{id}/fail": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundPayment to the <code>failed</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdFail"
      }
    },
    "/v1/test_helpers/treasury/outbound_payments/{id}/post": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundPayment to the <code>posted</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdPost"
      }
    },
    "/v1/test_helpers/treasury/outbound_payments/{id}/return": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Optional hash to set the return code.",
            "in": "formData",
            "name": "returned_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundPayment to the <code>returned</code> status. The OutboundPayment must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundPaymentsIdReturn"
      }
    },
    "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about network-specific tracking information.",
            "in": "formData",
            "name": "tracking_details",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the <code>canceled</code> or <code>failed</code> states.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransfer"
      }
    },
    "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundTransfer to the <code>failed</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferFail"
      }
    },
    "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundTransfer to the <code>posted</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferPost"
      }
    },
    "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Details about a returned OutboundTransfer.",
            "in": "formData",
            "name": "returned_details",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Transitions a test mode created OutboundTransfer to the <code>returned</code> status. The OutboundTransfer must already be in the <code>processing</code> state.</p>",
        "operationId": "PostTestHelpersTreasuryOutboundTransfersOutboundTransferReturn"
      }
    },
    "/v1/test_helpers/treasury/received_credits": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount (in cents) to be transferred.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The FinancialAccount to send funds to.",
            "in": "formData",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Initiating payment method details for the object.",
            "in": "formData",
            "name": "initiating_payment_method_details",
            "type": "object"
          },
          {
            "description": "Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.",
            "enum": [
              "ach",
              "us_domestic_wire"
            ],
            "in": "formData",
            "name": "network",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.received_credit"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Use this endpoint to simulate a test mode ReceivedCredit initiated by a third party. In live mode, you can’t directly create ReceivedCredits initiated by third parties.</p>",
        "operationId": "PostTestHelpersTreasuryReceivedCredits"
      }
    },
    "/v1/test_helpers/treasury/received_debits": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount (in cents) to be transferred.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The FinancialAccount to pull funds from.",
            "in": "formData",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Initiating payment method details for the object.",
            "in": "formData",
            "name": "initiating_payment_method_details",
            "type": "object"
          },
          {
            "description": "Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.",
            "enum": [
              "ach"
            ],
            "in": "formData",
            "name": "network",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.received_debit"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Use this endpoint to simulate a test mode ReceivedDebit initiated by a third party. In live mode, you can’t directly create ReceivedDebits initiated by third parties.</p>",
        "operationId": "PostTestHelpersTreasuryReceivedDebits"
      }
    },
    "/v1/tokens": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Information for the account this token represents.",
            "in": "formData",
            "name": "account",
            "type": "object"
          },
          {
            "description": "The bank account this token will represent.",
            "in": "formData",
            "name": "bank_account",
            "type": "object",
            "x-stripeBypassValidation": true
          },
          {
            "description": "The card this token will represent. If you also pass in a customer, the card must be the ID of a card belonging to the customer. Otherwise, if you do not pass in a customer, this is a dictionary containing a user's credit card details, with the options described below.",
            "in": "formData",
            "name": "card",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Create a token for the customer, which is owned by the application's account. You can only use this with an [OAuth access token](https://stripe.com/docs/connect/standard-accounts) or [Stripe-Account header](https://stripe.com/docs/connect/authentication). Learn more about [cloning saved payment methods](https://stripe.com/docs/connect/cloning-saved-payment-methods).",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "The updated CVC value this token represents.",
            "in": "formData",
            "name": "cvc_update",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Information for the person this token represents.",
            "in": "formData",
            "name": "person",
            "type": "object"
          },
          {
            "description": "The PII this token represents.",
            "in": "formData",
            "name": "pii",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a single-use token that represents a bank account’s details.\nYou can use this token with any API method in place of a bank account dictionary. You can only use this token once. To do so, attach it to a <a href=\"#accounts\">connected account</a> where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a> is <code>application</code>, which includes Custom accounts.</p>",
        "operationId": "PostTokens"
      }
    },
    "/v1/tokens/{token}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/token"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the token with the given ID.</p>",
        "operationId": "GetTokensToken"
      }
    },
    "/v1/topups": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A positive integer representing how much to transfer.",
            "in": "query",
            "name": "amount",
            "required": false
          },
          {
            "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`.",
            "enum": [
              "canceled",
              "failed",
              "pending",
              "succeeded"
            ],
            "in": "query",
            "maxLength": 5000,
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/topup"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/topups",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TopupList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of top-ups.</p>",
        "operationId": "GetTopups"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A positive integer representing how much to transfer.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The ID of a source to transfer funds from. For most users, this should be left unspecified which will use the bank account that was set up in the dashboard for the specified currency. In test mode, this can be a test bank token (see [Testing Top-ups](https://stripe.com/docs/connect/testing#testing-top-ups)).",
            "in": "formData",
            "maxLength": 5000,
            "name": "source",
            "type": "string"
          },
          {
            "description": "Extra information about a top-up for the source's bank statement. Limited to 15 ASCII characters.",
            "in": "formData",
            "maxLength": 15,
            "name": "statement_descriptor",
            "type": "string"
          },
          {
            "description": "A string that identifies this top-up as part of a group.",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Top up the balance of an account</p>",
        "operationId": "PostTopups"
      }
    },
    "/v1/topups/{topup}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "topup",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>",
        "operationId": "GetTopupsTopup"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "topup",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>",
        "operationId": "PostTopupsTopup"
      }
    },
    "/v1/topups/{topup}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "topup",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels a top-up. Only pending top-ups can be canceled.</p>",
        "operationId": "PostTopupsTopupCancel"
      }
    },
    "/v1/transfers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return transfers that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return transfers for the destination specified by this account ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "destination",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return transfers with the specified transfer group.",
            "in": "query",
            "maxLength": 5000,
            "name": "transfer_group",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/transfer"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/transfers",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TransferList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>",
        "operationId": "GetTransfers"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A positive integer in cents (or local equivalent) representing how much to transfer.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO code for currency](https://www.iso.org/iso-4217-currency-codes.html) in lowercase. Must be a [supported currency](https://docs.stripe.com/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The ID of a connected Stripe account. <a href=\"/docs/connect/separate-charges-and-transfers\">See the Connect documentation</a> for details.",
            "in": "formData",
            "name": "destination",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-availability) for details.",
            "in": "formData",
            "name": "source_transaction",
            "type": "string"
          },
          {
            "description": "The source balance to use for this transfer. One of `bank_account`, `card`, or `fpx`. For most users, this will default to `card`.",
            "enum": [
              "bank_account",
              "card",
              "fpx"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "source_type",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
            "in": "formData",
            "name": "transfer_group",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you’ll receive an “Insufficient Funds” error.</p>",
        "operationId": "PostTransfers"
      }
    },
    "/v1/transfers/{id}/reversals": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/transfer_reversal"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TransferReversalList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>",
        "operationId": "GetTransfersIdReversals"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A positive integer in cents (or local equivalent) representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.",
            "in": "formData",
            "name": "amount",
            "type": "integer"
          },
          {
            "description": "An arbitrary string which you can attach to a reversal object. This will be unset if you POST an empty value.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed.",
            "in": "formData",
            "name": "refund_application_fee",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>When you create a new reversal, you must specify a transfer to create it on.</p>\n\n<p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>\n\n<p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>",
        "operationId": "PostTransfersIdReversals"
      }
    },
    "/v1/transfers/{transfer}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transfer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>",
        "operationId": "GetTransfersTransfer"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transfer",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts only metadata as an argument.</p>",
        "operationId": "PostTransfersTransfer"
      }
    },
    "/v1/transfers/{transfer}/reversals/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transfer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>",
        "operationId": "GetTransfersTransferReversalsId"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/transfer_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata and description as arguments.</p>",
        "operationId": "PostTransfersTransferReversalsId"
      }
    },
    "/v1/treasury/credit_reversals": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return CreditReversals for the ReceivedCredit ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "received_credit",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return CreditReversals for a given status.",
            "enum": [
              "canceled",
              "posted",
              "processing"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.credit_reversal"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryReceivedCreditsResourceCreditReversalList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of CreditReversals.</p>",
        "operationId": "GetTreasuryCreditReversals"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The ReceivedCredit to reverse.",
            "in": "formData",
            "maxLength": 5000,
            "name": "received_credit",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.credit_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reverses a ReceivedCredit and creates a CreditReversal object.</p>",
        "operationId": "PostTreasuryCreditReversals"
      }
    },
    "/v1/treasury/credit_reversals/{credit_reversal}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "credit_reversal",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.credit_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing CreditReversal by passing the unique CreditReversal ID from either the CreditReversal creation request or CreditReversal list</p>",
        "operationId": "GetTreasuryCreditReversalsCreditReversal"
      }
    },
    "/v1/treasury/debit_reversals": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return DebitReversals for the ReceivedDebit ID.",
            "in": "query",
            "maxLength": 5000,
            "name": "received_debit",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return DebitReversals for a given resolution.",
            "enum": [
              "lost",
              "won"
            ],
            "in": "query",
            "name": "resolution",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return DebitReversals for a given status.",
            "enum": [
              "canceled",
              "completed",
              "processing"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.debit_reversal"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryReceivedDebitsResourceDebitReversalList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of DebitReversals.</p>",
        "operationId": "GetTreasuryDebitReversals"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The ReceivedDebit to reverse.",
            "in": "formData",
            "maxLength": 5000,
            "name": "received_debit",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.debit_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Reverses a ReceivedDebit and creates a DebitReversal object.</p>",
        "operationId": "PostTreasuryDebitReversals"
      }
    },
    "/v1/treasury/debit_reversals/{debit_reversal}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "debit_reversal",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.debit_reversal"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a DebitReversal object.</p>",
        "operationId": "GetTreasuryDebitReversalsDebitReversal"
      }
    },
    "/v1/treasury/financial_accounts": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return FinancialAccounts that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "An object ID cursor for use in pagination.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit ranging from 1 to 100 (defaults to 10).",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "An object ID cursor for use in pagination.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/treasury.financial_account"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/financial_accounts",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryFinancialAccountsResourceFinancialAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of FinancialAccounts.</p>",
        "operationId": "GetTreasuryFinancialAccounts"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.",
            "in": "formData",
            "name": "features",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The set of functionalities that the platform can restrict on the FinancialAccount.",
            "in": "formData",
            "name": "platform_restrictions",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "The currencies the FinancialAccount can hold a balance in.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "supported_currencies",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.financial_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates a new FinancialAccount. For now, each connected account can only have one FinancialAccount.</p>",
        "operationId": "PostTreasuryFinancialAccounts"
      }
    },
    "/v1/treasury/financial_accounts/{financial_account}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "financial_account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.financial_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of a FinancialAccount.</p>",
        "operationId": "GetTreasuryFinancialAccountsFinancialAccount"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated `status_details`. Stripe or the platform may control features via the requested field.",
            "in": "formData",
            "name": "features",
            "type": "object"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The set of functionalities that the platform can restrict on the FinancialAccount.",
            "in": "formData",
            "name": "platform_restrictions",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.financial_account"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the details of a FinancialAccount.</p>",
        "operationId": "PostTreasuryFinancialAccountsFinancialAccount"
      }
    },
    "/v1/treasury/financial_accounts/{financial_account}/features": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "financial_account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.financial_account_features"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves Features information associated with the FinancialAccount.</p>",
        "operationId": "GetTreasuryFinancialAccountsFinancialAccountFeatures"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "Encodes the FinancialAccount's ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.",
            "in": "formData",
            "name": "card_issuing",
            "type": "object"
          },
          {
            "description": "Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.",
            "in": "formData",
            "name": "deposit_insurance",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Contains Features that add FinancialAddresses to the FinancialAccount.",
            "in": "formData",
            "name": "financial_addresses",
            "type": "object"
          },
          {
            "description": "Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.",
            "in": "formData",
            "name": "inbound_transfers",
            "type": "object"
          },
          {
            "description": "Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).",
            "in": "formData",
            "name": "intra_stripe_flows",
            "type": "object"
          },
          {
            "description": "Includes Features related to initiating money movement out of the FinancialAccount to someone else's bucket of money.",
            "in": "formData",
            "name": "outbound_payments",
            "type": "object"
          },
          {
            "description": "Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.",
            "in": "formData",
            "name": "outbound_transfers",
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.financial_account_features"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the Features associated with a FinancialAccount.</p>",
        "operationId": "PostTreasuryFinancialAccountsFinancialAccountFeatures"
      }
    },
    "/v1/treasury/inbound_transfers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return InboundTransfers that have the given status: `processing`, `succeeded`, `failed` or `canceled`.",
            "enum": [
              "canceled",
              "failed",
              "processing",
              "succeeded"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.inbound_transfer"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryInboundTransfersResourceInboundTransferList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of InboundTransfers sent from the specified FinancialAccount.</p>",
        "operationId": "GetTreasuryInboundTransfers"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount (in cents) to be transferred.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The FinancialAccount to send funds to.",
            "in": "formData",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The origin payment method to be debited for the InboundTransfer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "origin_payment_method",
            "required": true,
            "type": "string"
          },
          {
            "description": "The complete description that appears on your customers' statements. Maximum 10 characters.",
            "in": "formData",
            "maxLength": 10,
            "name": "statement_descriptor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an InboundTransfer.</p>",
        "operationId": "PostTreasuryInboundTransfers"
      }
    },
    "/v1/treasury/inbound_transfers/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing InboundTransfer.</p>",
        "operationId": "GetTreasuryInboundTransfersId"
      }
    },
    "/v1/treasury/inbound_transfers/{inbound_transfer}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "inbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.inbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancels an InboundTransfer.</p>",
        "operationId": "PostTreasuryInboundTransfersInboundTransferCancel"
      }
    },
    "/v1/treasury/outbound_payments": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return OutboundPayments that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "Only return OutboundPayments sent to this customer.",
            "in": "query",
            "maxLength": 5000,
            "name": "customer",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`.",
            "enum": [
              "canceled",
              "failed",
              "posted",
              "processing",
              "returned"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.outbound_payment"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/outbound_payments",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryOutboundPaymentsResourceOutboundPaymentList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of OutboundPayments sent from the specified FinancialAccount.</p>",
        "operationId": "GetTreasuryOutboundPayments"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount (in cents) to be transferred.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in.",
            "in": "formData",
            "maxLength": 5000,
            "name": "customer",
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`.",
            "in": "formData",
            "maxLength": 5000,
            "name": "destination_payment_method",
            "type": "string"
          },
          {
            "description": "Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.",
            "in": "formData",
            "name": "destination_payment_method_data",
            "type": "object"
          },
          {
            "description": "Payment method-specific configuration for this OutboundPayment.",
            "in": "formData",
            "name": "destination_payment_method_options",
            "type": "object"
          },
          {
            "description": "End user details.",
            "in": "formData",
            "name": "end_user_details",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The FinancialAccount to pull funds from.",
            "in": "formData",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `us_domestic_wire` payments, or 500 characters for `stripe` network transfers. The default value is \"payment\".",
            "in": "formData",
            "maxLength": 5000,
            "name": "statement_descriptor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an OutboundPayment.</p>",
        "operationId": "PostTreasuryOutboundPayments"
      }
    },
    "/v1/treasury/outbound_payments/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment creation request or OutboundPayment list.</p>",
        "operationId": "GetTreasuryOutboundPaymentsId"
      }
    },
    "/v1/treasury/outbound_payments/{id}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_payment"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Cancel an OutboundPayment.</p>",
        "operationId": "PostTreasuryOutboundPaymentsIdCancel"
      }
    },
    "/v1/treasury/outbound_transfers": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`.",
            "enum": [
              "canceled",
              "failed",
              "posted",
              "processing",
              "returned"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.outbound_transfer"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryOutboundTransfersResourceOutboundTransferList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of OutboundTransfers sent from the specified FinancialAccount.</p>",
        "operationId": "GetTreasuryOutboundTransfers"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amount (in cents) to be transferred.",
            "in": "formData",
            "name": "amount",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "in": "formData",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "in": "formData",
            "maxLength": 5000,
            "name": "description",
            "type": "string"
          },
          {
            "description": "The PaymentMethod to use as the payment instrument for the OutboundTransfer.",
            "in": "formData",
            "maxLength": 5000,
            "name": "destination_payment_method",
            "type": "string"
          },
          {
            "description": "Hash describing payment method configuration details.",
            "in": "formData",
            "name": "destination_payment_method_options",
            "type": "object"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "The FinancialAccount to pull funds from.",
            "in": "formData",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata",
            "type": "object"
          },
          {
            "description": "Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for `ach` transfers or 140 characters for `us_domestic_wire` transfers. The default value is \"transfer\".",
            "in": "formData",
            "maxLength": 5000,
            "name": "statement_descriptor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Creates an OutboundTransfer.</p>",
        "operationId": "PostTreasuryOutboundTransfers"
      }
    },
    "/v1/treasury/outbound_transfers/{outbound_transfer}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing OutboundTransfer by passing the unique OutboundTransfer ID from either the OutboundTransfer creation request or OutboundTransfer list.</p>",
        "operationId": "GetTreasuryOutboundTransfersOutboundTransfer"
      }
    },
    "/v1/treasury/outbound_transfers/{outbound_transfer}/cancel": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "outbound_transfer",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.outbound_transfer"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>An OutboundTransfer can be canceled if the funds have not yet been paid out.</p>",
        "operationId": "PostTreasuryOutboundTransfersOutboundTransferCancel"
      }
    },
    "/v1/treasury/received_credits": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The FinancialAccount that received the funds.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return ReceivedCredits described by the flow.",
            "in": "query",
            "name": "linked_flows",
            "required": false,
            "type": "object"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return ReceivedCredits that have the given status: `succeeded` or `failed`.",
            "enum": [
              "failed",
              "succeeded"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.received_credit"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryReceivedCreditsResourceReceivedCreditList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of ReceivedCredits.</p>",
        "operationId": "GetTreasuryReceivedCredits"
      }
    },
    "/v1/treasury/received_credits/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.received_credit"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing ReceivedCredit by passing the unique ReceivedCredit ID from the ReceivedCredit list.</p>",
        "operationId": "GetTreasuryReceivedCreditsId"
      }
    },
    "/v1/treasury/received_debits": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "The FinancialAccount that funds were pulled from.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return ReceivedDebits that have the given status: `succeeded` or `failed`.",
            "enum": [
              "failed",
              "succeeded"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.received_debit"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryReceivedDebitsResourceReceivedDebitList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of ReceivedDebits.</p>",
        "operationId": "GetTreasuryReceivedDebits"
      }
    },
    "/v1/treasury/received_debits/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.received_debit"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing ReceivedDebit by passing the unique ReceivedDebit ID from the ReceivedDebit list</p>",
        "operationId": "GetTreasuryReceivedDebitsId"
      }
    },
    "/v1/treasury/transaction_entries": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return TransactionEntries that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "effective_at",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The results are in reverse chronological order by `created` or `effective_at`. The default is `created`.",
            "enum": [
              "created",
              "effective_at"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return TransactionEntries associated with this Transaction.",
            "in": "query",
            "maxLength": 5000,
            "name": "transaction",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a list of TransactionEntry objects.</p>",
        "operationId": "GetTreasuryTransactionEntries"
      }
    },
    "/v1/treasury/transaction_entries/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.transaction_entry"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a TransactionEntry object.</p>",
        "operationId": "GetTreasuryTransactionEntriesId"
      }
    },
    "/v1/treasury/transactions": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Only return Transactions that were created during the given date interval.",
            "in": "query",
            "name": "created",
            "required": false
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "Returns objects associated with this FinancialAccount.",
            "in": "query",
            "name": "financial_account",
            "required": true,
            "type": "string"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The results are in reverse chronological order by `created` or `posted_at`. The default is `created`.",
            "enum": [
              "created",
              "posted_at"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          },
          {
            "description": "Only return Transactions that have the given status: `open`, `posted`, or `void`.",
            "enum": [
              "open",
              "posted",
              "void"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified.",
            "in": "query",
            "name": "status_transitions",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/definitions/treasury.transaction"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves a list of Transaction objects.</p>",
        "operationId": "GetTreasuryTransactions"
      }
    },
    "/v1/treasury/transactions/{id}": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/treasury.transaction"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the details of an existing Transaction.</p>",
        "operationId": "GetTreasuryTransactionsId"
      }
    },
    "/v1/webhook_endpoints": {
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "ending_before",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "maxLength": 5000,
            "name": "starting_after",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "description": "",
              "properties": {
                "data": {
                  "items": {
                    "$ref": "#/definitions/webhook_endpoint"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/webhook_endpoints",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "NotificationWebhookEndpointList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Returns a list of your webhook endpoints.</p>",
        "operationId": "GetWebhookEndpoints"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Events sent to this endpoint will be generated with this Stripe Version instead of your account's default Stripe Version.",
            "enum": [
              "2011-01-01",
              "2011-06-21",
              "2011-06-28",
              "2011-08-01",
              "2011-09-15",
              "2011-11-17",
              "2012-02-23",
              "2012-03-25",
              "2012-06-18",
              "2012-06-28",
              "2012-07-09",
              "2012-09-24",
              "2012-10-26",
              "2012-11-07",
              "2013-02-11",
              "2013-02-13",
              "2013-07-05",
              "2013-08-12",
              "2013-08-13",
              "2013-10-29",
              "2013-12-03",
              "2014-01-31",
              "2014-03-13",
              "2014-03-28",
              "2014-05-19",
              "2014-06-13",
              "2014-06-17",
              "2014-07-22",
              "2014-07-26",
              "2014-08-04",
              "2014-08-20",
              "2014-09-08",
              "2014-10-07",
              "2014-11-05",
              "2014-11-20",
              "2014-12-08",
              "2014-12-17",
              "2014-12-22",
              "2015-01-11",
              "2015-01-26",
              "2015-02-10",
              "2015-02-16",
              "2015-02-18",
              "2015-03-24",
              "2015-04-07",
              "2015-06-15",
              "2015-07-07",
              "2015-07-13",
              "2015-07-28",
              "2015-08-07",
              "2015-08-19",
              "2015-09-03",
              "2015-09-08",
              "2015-09-23",
              "2015-10-01",
              "2015-10-12",
              "2015-10-16",
              "2016-02-03",
              "2016-02-19",
              "2016-02-22",
              "2016-02-23",
              "2016-02-29",
              "2016-03-07",
              "2016-06-15",
              "2016-07-06",
              "2016-10-19",
              "2017-01-27",
              "2017-02-14",
              "2017-04-06",
              "2017-05-25",
              "2017-06-05",
              "2017-08-15",
              "2017-12-14",
              "2018-01-23",
              "2018-02-05",
              "2018-02-06",
              "2018-02-28",
              "2018-05-21",
              "2018-07-27",
              "2018-08-23",
              "2018-09-06",
              "2018-09-24",
              "2018-10-31",
              "2018-11-08",
              "2019-02-11",
              "2019-02-19",
              "2019-03-14",
              "2019-05-16",
              "2019-08-14",
              "2019-09-09",
              "2019-10-08",
              "2019-10-17",
              "2019-11-05",
              "2019-12-03",
              "2020-03-02",
              "2020-08-27",
              "2022-08-01",
              "2022-11-15",
              "2023-08-16",
              "2023-10-16",
              "2024-04-10",
              "2024-06-20",
              "2024-09-30.acacia"
            ],
            "in": "formData",
            "maxLength": 5000,
            "name": "api_version",
            "type": "string",
            "x-stripeBypassValidation": true
          },
          {
            "description": "Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.",
            "in": "formData",
            "name": "connect",
            "type": "boolean"
          },
          {
            "description": "An optional description of what the webhook is used for.",
            "in": "formData",
            "name": "description"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.",
            "in": "formData",
            "items": {
              "enum": [
                "*",
                "account.application.authorized",
                "account.application.deauthorized",
                "account.external_account.created",
                "account.external_account.deleted",
                "account.external_account.updated",
                "account.updated",
                "application_fee.created",
                "application_fee.refund.updated",
                "application_fee.refunded",
                "balance.available",
                "billing.alert.triggered",
                "billing_portal.configuration.created",
                "billing_portal.configuration.updated",
                "billing_portal.session.created",
                "capability.updated",
                "cash_balance.funds_available",
                "charge.captured",
                "charge.dispute.closed",
                "charge.dispute.created",
                "charge.dispute.funds_reinstated",
                "charge.dispute.funds_withdrawn",
                "charge.dispute.updated",
                "charge.expired",
                "charge.failed",
                "charge.pending",
                "charge.refund.updated",
                "charge.refunded",
                "charge.succeeded",
                "charge.updated",
                "checkout.session.async_payment_failed",
                "checkout.session.async_payment_succeeded",
                "checkout.session.completed",
                "checkout.session.expired",
                "climate.order.canceled",
                "climate.order.created",
                "climate.order.delayed",
                "climate.order.delivered",
                "climate.order.product_substituted",
                "climate.product.created",
                "climate.product.pricing_updated",
                "coupon.created",
                "coupon.deleted",
                "coupon.updated",
                "credit_note.created",
                "credit_note.updated",
                "credit_note.voided",
                "customer.created",
                "customer.deleted",
                "customer.discount.created",
                "customer.discount.deleted",
                "customer.discount.updated",
                "customer.source.created",
                "customer.source.deleted",
                "customer.source.expiring",
                "customer.source.updated",
                "customer.subscription.created",
                "customer.subscription.deleted",
                "customer.subscription.paused",
                "customer.subscription.pending_update_applied",
                "customer.subscription.pending_update_expired",
                "customer.subscription.resumed",
                "customer.subscription.trial_will_end",
                "customer.subscription.updated",
                "customer.tax_id.created",
                "customer.tax_id.deleted",
                "customer.tax_id.updated",
                "customer.updated",
                "customer_cash_balance_transaction.created",
                "entitlements.active_entitlement_summary.updated",
                "file.created",
                "financial_connections.account.created",
                "financial_connections.account.deactivated",
                "financial_connections.account.disconnected",
                "financial_connections.account.reactivated",
                "financial_connections.account.refreshed_balance",
                "financial_connections.account.refreshed_ownership",
                "financial_connections.account.refreshed_transactions",
                "identity.verification_session.canceled",
                "identity.verification_session.created",
                "identity.verification_session.processing",
                "identity.verification_session.redacted",
                "identity.verification_session.requires_input",
                "identity.verification_session.verified",
                "invoice.created",
                "invoice.deleted",
                "invoice.finalization_failed",
                "invoice.finalized",
                "invoice.marked_uncollectible",
                "invoice.overdue",
                "invoice.paid",
                "invoice.payment_action_required",
                "invoice.payment_failed",
                "invoice.payment_succeeded",
                "invoice.sent",
                "invoice.upcoming",
                "invoice.updated",
                "invoice.voided",
                "invoice.will_be_due",
                "invoiceitem.created",
                "invoiceitem.deleted",
                "issuing_authorization.created",
                "issuing_authorization.request",
                "issuing_authorization.updated",
                "issuing_card.created",
                "issuing_card.updated",
                "issuing_cardholder.created",
                "issuing_cardholder.updated",
                "issuing_dispute.closed",
                "issuing_dispute.created",
                "issuing_dispute.funds_reinstated",
                "issuing_dispute.funds_rescinded",
                "issuing_dispute.submitted",
                "issuing_dispute.updated",
                "issuing_personalization_design.activated",
                "issuing_personalization_design.deactivated",
                "issuing_personalization_design.rejected",
                "issuing_personalization_design.updated",
                "issuing_token.created",
                "issuing_token.updated",
                "issuing_transaction.created",
                "issuing_transaction.updated",
                "mandate.updated",
                "payment_intent.amount_capturable_updated",
                "payment_intent.canceled",
                "payment_intent.created",
                "payment_intent.partially_funded",
                "payment_intent.payment_failed",
                "payment_intent.processing",
                "payment_intent.requires_action",
                "payment_intent.succeeded",
                "payment_link.created",
                "payment_link.updated",
                "payment_method.attached",
                "payment_method.automatically_updated",
                "payment_method.detached",
                "payment_method.updated",
                "payout.canceled",
                "payout.created",
                "payout.failed",
                "payout.paid",
                "payout.reconciliation_completed",
                "payout.updated",
                "person.created",
                "person.deleted",
                "person.updated",
                "plan.created",
                "plan.deleted",
                "plan.updated",
                "price.created",
                "price.deleted",
                "price.updated",
                "product.created",
                "product.deleted",
                "product.updated",
                "promotion_code.created",
                "promotion_code.updated",
                "quote.accepted",
                "quote.canceled",
                "quote.created",
                "quote.finalized",
                "radar.early_fraud_warning.created",
                "radar.early_fraud_warning.updated",
                "refund.created",
                "refund.updated",
                "reporting.report_run.failed",
                "reporting.report_run.succeeded",
                "reporting.report_type.updated",
                "review.closed",
                "review.opened",
                "setup_intent.canceled",
                "setup_intent.created",
                "setup_intent.requires_action",
                "setup_intent.setup_failed",
                "setup_intent.succeeded",
                "sigma.scheduled_query_run.created",
                "source.canceled",
                "source.chargeable",
                "source.failed",
                "source.mandate_notification",
                "source.refund_attributes_required",
                "source.transaction.created",
                "source.transaction.updated",
                "subscription_schedule.aborted",
                "subscription_schedule.canceled",
                "subscription_schedule.completed",
                "subscription_schedule.created",
                "subscription_schedule.expiring",
                "subscription_schedule.released",
                "subscription_schedule.updated",
                "tax.settings.updated",
                "tax_rate.created",
                "tax_rate.updated",
                "terminal.reader.action_failed",
                "terminal.reader.action_succeeded",
                "test_helpers.test_clock.advancing",
                "test_helpers.test_clock.created",
                "test_helpers.test_clock.deleted",
                "test_helpers.test_clock.internal_failure",
                "test_helpers.test_clock.ready",
                "topup.canceled",
                "topup.created",
                "topup.failed",
                "topup.reversed",
                "topup.succeeded",
                "transfer.created",
                "transfer.reversed",
                "transfer.updated",
                "treasury.credit_reversal.created",
                "treasury.credit_reversal.posted",
                "treasury.debit_reversal.completed",
                "treasury.debit_reversal.created",
                "treasury.debit_reversal.initial_credit_granted",
                "treasury.financial_account.closed",
                "treasury.financial_account.created",
                "treasury.financial_account.features_status_updated",
                "treasury.inbound_transfer.canceled",
                "treasury.inbound_transfer.created",
                "treasury.inbound_transfer.failed",
                "treasury.inbound_transfer.succeeded",
                "treasury.outbound_payment.canceled",
                "treasury.outbound_payment.created",
                "treasury.outbound_payment.expected_arrival_date_updated",
                "treasury.outbound_payment.failed",
                "treasury.outbound_payment.posted",
                "treasury.outbound_payment.returned",
                "treasury.outbound_payment.tracking_details_updated",
                "treasury.outbound_transfer.canceled",
                "treasury.outbound_transfer.created",
                "treasury.outbound_transfer.expected_arrival_date_updated",
                "treasury.outbound_transfer.failed",
                "treasury.outbound_transfer.posted",
                "treasury.outbound_transfer.returned",
                "treasury.outbound_transfer.tracking_details_updated",
                "treasury.received_credit.created",
                "treasury.received_credit.failed",
                "treasury.received_credit.succeeded",
                "treasury.received_debit.created"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "enabled_events",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The URL of the webhook endpoint.",
            "in": "formData",
            "name": "url",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/webhook_endpoint"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>",
        "operationId": "PostWebhookEndpoints"
      }
    },
    "/v1/webhook_endpoints/{webhook_endpoint}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "webhook_endpoint",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/deleted_webhook_endpoint"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>You can also delete webhook endpoints via the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhook endpoint management</a> page of the Stripe dashboard.</p>",
        "operationId": "DeleteWebhookEndpointsWebhookEndpoint"
      },
      "get": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "in": "query",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "required": false,
            "type": "array"
          },
          {
            "in": "path",
            "maxLength": 5000,
            "name": "webhook_endpoint",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/webhook_endpoint"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Retrieves the webhook endpoint with the given ID.</p>",
        "operationId": "GetWebhookEndpointsWebhookEndpoint"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "maxLength": 5000,
            "name": "webhook_endpoint",
            "required": true,
            "type": "string"
          },
          {
            "description": "An optional description of what the webhook is used for.",
            "in": "formData",
            "name": "description"
          },
          {
            "description": "Disable the webhook endpoint if set to true.",
            "in": "formData",
            "name": "disabled",
            "type": "boolean"
          },
          {
            "collectionFormat": "csv",
            "description": "The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.",
            "in": "formData",
            "items": {
              "enum": [
                "*",
                "account.application.authorized",
                "account.application.deauthorized",
                "account.external_account.created",
                "account.external_account.deleted",
                "account.external_account.updated",
                "account.updated",
                "application_fee.created",
                "application_fee.refund.updated",
                "application_fee.refunded",
                "balance.available",
                "billing.alert.triggered",
                "billing_portal.configuration.created",
                "billing_portal.configuration.updated",
                "billing_portal.session.created",
                "capability.updated",
                "cash_balance.funds_available",
                "charge.captured",
                "charge.dispute.closed",
                "charge.dispute.created",
                "charge.dispute.funds_reinstated",
                "charge.dispute.funds_withdrawn",
                "charge.dispute.updated",
                "charge.expired",
                "charge.failed",
                "charge.pending",
                "charge.refund.updated",
                "charge.refunded",
                "charge.succeeded",
                "charge.updated",
                "checkout.session.async_payment_failed",
                "checkout.session.async_payment_succeeded",
                "checkout.session.completed",
                "checkout.session.expired",
                "climate.order.canceled",
                "climate.order.created",
                "climate.order.delayed",
                "climate.order.delivered",
                "climate.order.product_substituted",
                "climate.product.created",
                "climate.product.pricing_updated",
                "coupon.created",
                "coupon.deleted",
                "coupon.updated",
                "credit_note.created",
                "credit_note.updated",
                "credit_note.voided",
                "customer.created",
                "customer.deleted",
                "customer.discount.created",
                "customer.discount.deleted",
                "customer.discount.updated",
                "customer.source.created",
                "customer.source.deleted",
                "customer.source.expiring",
                "customer.source.updated",
                "customer.subscription.created",
                "customer.subscription.deleted",
                "customer.subscription.paused",
                "customer.subscription.pending_update_applied",
                "customer.subscription.pending_update_expired",
                "customer.subscription.resumed",
                "customer.subscription.trial_will_end",
                "customer.subscription.updated",
                "customer.tax_id.created",
                "customer.tax_id.deleted",
                "customer.tax_id.updated",
                "customer.updated",
                "customer_cash_balance_transaction.created",
                "entitlements.active_entitlement_summary.updated",
                "file.created",
                "financial_connections.account.created",
                "financial_connections.account.deactivated",
                "financial_connections.account.disconnected",
                "financial_connections.account.reactivated",
                "financial_connections.account.refreshed_balance",
                "financial_connections.account.refreshed_ownership",
                "financial_connections.account.refreshed_transactions",
                "identity.verification_session.canceled",
                "identity.verification_session.created",
                "identity.verification_session.processing",
                "identity.verification_session.redacted",
                "identity.verification_session.requires_input",
                "identity.verification_session.verified",
                "invoice.created",
                "invoice.deleted",
                "invoice.finalization_failed",
                "invoice.finalized",
                "invoice.marked_uncollectible",
                "invoice.overdue",
                "invoice.paid",
                "invoice.payment_action_required",
                "invoice.payment_failed",
                "invoice.payment_succeeded",
                "invoice.sent",
                "invoice.upcoming",
                "invoice.updated",
                "invoice.voided",
                "invoice.will_be_due",
                "invoiceitem.created",
                "invoiceitem.deleted",
                "issuing_authorization.created",
                "issuing_authorization.request",
                "issuing_authorization.updated",
                "issuing_card.created",
                "issuing_card.updated",
                "issuing_cardholder.created",
                "issuing_cardholder.updated",
                "issuing_dispute.closed",
                "issuing_dispute.created",
                "issuing_dispute.funds_reinstated",
                "issuing_dispute.funds_rescinded",
                "issuing_dispute.submitted",
                "issuing_dispute.updated",
                "issuing_personalization_design.activated",
                "issuing_personalization_design.deactivated",
                "issuing_personalization_design.rejected",
                "issuing_personalization_design.updated",
                "issuing_token.created",
                "issuing_token.updated",
                "issuing_transaction.created",
                "issuing_transaction.updated",
                "mandate.updated",
                "payment_intent.amount_capturable_updated",
                "payment_intent.canceled",
                "payment_intent.created",
                "payment_intent.partially_funded",
                "payment_intent.payment_failed",
                "payment_intent.processing",
                "payment_intent.requires_action",
                "payment_intent.succeeded",
                "payment_link.created",
                "payment_link.updated",
                "payment_method.attached",
                "payment_method.automatically_updated",
                "payment_method.detached",
                "payment_method.updated",
                "payout.canceled",
                "payout.created",
                "payout.failed",
                "payout.paid",
                "payout.reconciliation_completed",
                "payout.updated",
                "person.created",
                "person.deleted",
                "person.updated",
                "plan.created",
                "plan.deleted",
                "plan.updated",
                "price.created",
                "price.deleted",
                "price.updated",
                "product.created",
                "product.deleted",
                "product.updated",
                "promotion_code.created",
                "promotion_code.updated",
                "quote.accepted",
                "quote.canceled",
                "quote.created",
                "quote.finalized",
                "radar.early_fraud_warning.created",
                "radar.early_fraud_warning.updated",
                "refund.created",
                "refund.updated",
                "reporting.report_run.failed",
                "reporting.report_run.succeeded",
                "reporting.report_type.updated",
                "review.closed",
                "review.opened",
                "setup_intent.canceled",
                "setup_intent.created",
                "setup_intent.requires_action",
                "setup_intent.setup_failed",
                "setup_intent.succeeded",
                "sigma.scheduled_query_run.created",
                "source.canceled",
                "source.chargeable",
                "source.failed",
                "source.mandate_notification",
                "source.refund_attributes_required",
                "source.transaction.created",
                "source.transaction.updated",
                "subscription_schedule.aborted",
                "subscription_schedule.canceled",
                "subscription_schedule.completed",
                "subscription_schedule.created",
                "subscription_schedule.expiring",
                "subscription_schedule.released",
                "subscription_schedule.updated",
                "tax.settings.updated",
                "tax_rate.created",
                "tax_rate.updated",
                "terminal.reader.action_failed",
                "terminal.reader.action_succeeded",
                "test_helpers.test_clock.advancing",
                "test_helpers.test_clock.created",
                "test_helpers.test_clock.deleted",
                "test_helpers.test_clock.internal_failure",
                "test_helpers.test_clock.ready",
                "topup.canceled",
                "topup.created",
                "topup.failed",
                "topup.reversed",
                "topup.succeeded",
                "transfer.created",
                "transfer.reversed",
                "transfer.updated",
                "treasury.credit_reversal.created",
                "treasury.credit_reversal.posted",
                "treasury.debit_reversal.completed",
                "treasury.debit_reversal.created",
                "treasury.debit_reversal.initial_credit_granted",
                "treasury.financial_account.closed",
                "treasury.financial_account.created",
                "treasury.financial_account.features_status_updated",
                "treasury.inbound_transfer.canceled",
                "treasury.inbound_transfer.created",
                "treasury.inbound_transfer.failed",
                "treasury.inbound_transfer.succeeded",
                "treasury.outbound_payment.canceled",
                "treasury.outbound_payment.created",
                "treasury.outbound_payment.expected_arrival_date_updated",
                "treasury.outbound_payment.failed",
                "treasury.outbound_payment.posted",
                "treasury.outbound_payment.returned",
                "treasury.outbound_payment.tracking_details_updated",
                "treasury.outbound_transfer.canceled",
                "treasury.outbound_transfer.created",
                "treasury.outbound_transfer.expected_arrival_date_updated",
                "treasury.outbound_transfer.failed",
                "treasury.outbound_transfer.posted",
                "treasury.outbound_transfer.returned",
                "treasury.outbound_transfer.tracking_details_updated",
                "treasury.received_credit.created",
                "treasury.received_credit.failed",
                "treasury.received_credit.succeeded",
                "treasury.received_debit.created"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "name": "enabled_events",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Specifies which fields in the response should be expanded.",
            "in": "formData",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "name": "expand",
            "type": "array"
          },
          {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
            "in": "formData",
            "name": "metadata"
          },
          {
            "description": "The URL of the webhook endpoint.",
            "in": "formData",
            "name": "url",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "schema": {
              "$ref": "#/definitions/webhook_endpoint"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "description": "<p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>",
        "operationId": "PostWebhookEndpointsWebhookEndpoint"
      }
    }
  },
  "definitions": {
    "account": {
      "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current requirements or if the account is\nenabled to make live charges or receive payouts.\n\nFor accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)\nis `application`, which includes Custom accounts, the properties below are always\nreturned.\n\nFor accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)\nis `stripe`, which includes Standard and Express accounts, some properties are only returned\nuntil you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions)\nto start Connect Onboarding. Learn about the [differences between accounts](/connect/accounts).",
      "properties": {
        "business_profile": {
          "description": "Business information about the account.",
          "x-nullable": true
        },
        "business_type": {
          "description": "The business type. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property is only returned for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
          "enum": [
            "company",
            "government_entity",
            "individual",
            "non_profit"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "capabilities": {
          "$ref": "#/definitions/account_capabilities"
        },
        "charges_enabled": {
          "description": "Whether the account can create live charges.",
          "type": "boolean"
        },
        "company": {
          "$ref": "#/definitions/legal_entity_company"
        },
        "controller": {
          "$ref": "#/definitions/account_unification_account_controller"
        },
        "country": {
          "description": "The account's country.",
          "maxLength": 5000,
          "type": "string"
        },
        "created": {
          "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "default_currency": {
          "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
          "maxLength": 5000,
          "type": "string"
        },
        "details_submitted": {
          "description": "Whether account details have been submitted. Accounts with Stripe Dashboard access, which includes Standard accounts, cannot receive payouts before this is true. Accounts where this is false should be directed to [an onboarding flow](/connect/onboarding) to finish submitting account details.",
          "type": "boolean"
        },
        "email": {
          "description": "An email address associated with the account. It's not used for authentication and Stripe doesn't market to this field without explicit approval from the platform.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "external_accounts": {
          "description": "External accounts (bank accounts and debit cards) currently attached to this account. External accounts are only returned for requests where `controller[is_controller]` is true.",
          "properties": {
            "data": {
              "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
              "items": {
                "title": "Polymorphic",
                "x-stripeBypassValidation": true
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "ExternalAccountList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "future_requirements": {
          "$ref": "#/definitions/account_future_requirements"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "individual": {
          "$ref": "#/definitions/person"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "account"
          ],
          "type": "string"
        },
        "payouts_enabled": {
          "description": "Whether Stripe can send payouts to this account.",
          "type": "boolean"
        },
        "requirements": {
          "$ref": "#/definitions/account_requirements"
        },
        "settings": {
          "description": "Options for customizing how the account functions within Stripe.",
          "x-nullable": true
        },
        "tos_acceptance": {
          "$ref": "#/definitions/account_tos_acceptance"
        },
        "type": {
          "description": "The Stripe account type. Can be `standard`, `express`, `custom`, or `none`.",
          "enum": [
            "custom",
            "express",
            "none",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "object"
      ],
      "title": "Account",
      "type": "object",
      "x-expandableFields": [
        "business_profile",
        "capabilities",
        "company",
        "controller",
        "external_accounts",
        "future_requirements",
        "individual",
        "requirements",
        "settings",
        "tos_acceptance"
      ],
      "x-resourceId": "account"
    },
    "account_annual_revenue": {
      "description": "",
      "properties": {
        "amount": {
          "description": "A non-negative integer representing the amount in the [smallest currency unit](/currencies#zero-decimal).",
          "type": "integer",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string",
          "x-nullable": true
        },
        "fiscal_year_end": {
          "description": "The close-out date of the preceding fiscal year in ISO 8601 format. E.g. 2023-12-31 for the 31st of December, 2023.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountAnnualRevenue",
      "type": "object",
      "x-expandableFields": []
    },
    "account_bacs_debit_payments_settings": {
      "description": "",
      "properties": {
        "display_name": {
          "description": "The Bacs Direct Debit display name for this account. For payments made with Bacs Direct Debit, this name appears on the mandate as the statement descriptor. Mobile banking apps display it as the name of the business. To use custom branding, set the Bacs Direct Debit Display Name during or right after creation. Custom branding incurs an additional monthly fee for the platform. The fee appears 5 business days after requesting Bacs. If you don't set the display name before requesting Bacs capability, it's automatically set as \"Stripe\" and the account is onboarded to Stripe branding, which is free.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "service_user_number": {
          "description": "The Bacs Direct Debit Service user number for this account. For payments made with Bacs Direct Debit, this number is a unique identifier of the account with our banking partners.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountBacsDebitPaymentsSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "account_branding_settings": {
      "description": "",
      "properties": {
        "icon": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "logo": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "primary_color": {
          "description": "A CSS hex color value representing the primary branding color for this account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "secondary_color": {
          "description": "A CSS hex color value representing the secondary branding color for this account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountBrandingSettings",
      "type": "object",
      "x-expandableFields": [
        "icon",
        "logo"
      ]
    },
    "account_business_profile": {
      "description": "",
      "properties": {
        "annual_revenue": {
          "description": "The applicant's gross annual revenue for its preceding fiscal year.",
          "x-nullable": true
        },
        "estimated_worker_count": {
          "description": "An estimated upper bound of employees, contractors, vendors, etc. currently working for the business.",
          "type": "integer",
          "x-nullable": true
        },
        "mcc": {
          "description": "[The merchant category code for the account](/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "monthly_estimated_revenue": {
          "$ref": "#/definitions/account_monthly_estimated_revenue"
        },
        "name": {
          "description": "The customer-facing business name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_description": {
          "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
          "maxLength": 40000,
          "type": "string",
          "x-nullable": true
        },
        "support_address": {
          "description": "A publicly available mailing address for sending support issues to.",
          "x-nullable": true
        },
        "support_email": {
          "description": "A publicly available email address for sending support issues to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "support_phone": {
          "description": "A publicly available phone number to call with support issues.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "support_url": {
          "description": "A publicly available website for handling support issues.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The business's publicly available website.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountBusinessProfile",
      "type": "object",
      "x-expandableFields": [
        "annual_revenue",
        "monthly_estimated_revenue",
        "support_address"
      ]
    },
    "account_capabilities": {
      "description": "",
      "properties": {
        "acss_debit_payments": {
          "description": "The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "affirm_payments": {
          "description": "The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "afterpay_clearpay_payments": {
          "description": "The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "amazon_pay_payments": {
          "description": "The status of the AmazonPay capability of the account, or whether the account can directly process AmazonPay payments.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "au_becs_debit_payments": {
          "description": "The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "bacs_debit_payments": {
          "description": "The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "bancontact_payments": {
          "description": "The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "bank_transfer_payments": {
          "description": "The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "blik_payments": {
          "description": "The status of the blik payments capability of the account, or whether the account can directly process blik charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "boleto_payments": {
          "description": "The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "card_issuing": {
          "description": "The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "card_payments": {
          "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "cartes_bancaires_payments": {
          "description": "The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "cashapp_payments": {
          "description": "The status of the Cash App Pay capability of the account, or whether the account can directly process Cash App Pay payments.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "eps_payments": {
          "description": "The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "fpx_payments": {
          "description": "The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "gb_bank_transfer_payments": {
          "description": "The status of the GB customer_balance payments (GBP currency) capability of the account, or whether the account can directly process GB customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "giropay_payments": {
          "description": "The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "grabpay_payments": {
          "description": "The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "ideal_payments": {
          "description": "The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "india_international_payments": {
          "description": "The status of the india_international_payments capability of the account, or whether the account can process international charges (non INR) in India.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "jcb_payments": {
          "description": "The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "jp_bank_transfer_payments": {
          "description": "The status of the Japanese customer_balance payments (JPY currency) capability of the account, or whether the account can directly process Japanese customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "klarna_payments": {
          "description": "The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "konbini_payments": {
          "description": "The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "legacy_payments": {
          "description": "The status of the legacy payments capability of the account.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "link_payments": {
          "description": "The status of the link_payments capability of the account, or whether the account can directly process Link charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "mobilepay_payments": {
          "description": "The status of the MobilePay capability of the account, or whether the account can directly process MobilePay charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "multibanco_payments": {
          "description": "The status of the Multibanco payments capability of the account, or whether the account can directly process Multibanco charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "mx_bank_transfer_payments": {
          "description": "The status of the Mexican customer_balance payments (MXN currency) capability of the account, or whether the account can directly process Mexican customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "oxxo_payments": {
          "description": "The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "p24_payments": {
          "description": "The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "paynow_payments": {
          "description": "The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "promptpay_payments": {
          "description": "The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "revolut_pay_payments": {
          "description": "The status of the RevolutPay capability of the account, or whether the account can directly process RevolutPay payments.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "sepa_bank_transfer_payments": {
          "description": "The status of the SEPA customer_balance payments (EUR currency) capability of the account, or whether the account can directly process SEPA customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "sepa_debit_payments": {
          "description": "The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "sofort_payments": {
          "description": "The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "swish_payments": {
          "description": "The status of the Swish capability of the account, or whether the account can directly process Swish payments.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "tax_reporting_us_1099_k": {
          "description": "The status of the tax reporting 1099-K (US) capability of the account.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "tax_reporting_us_1099_misc": {
          "description": "The status of the tax reporting 1099-MISC (US) capability of the account.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "transfers": {
          "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "treasury": {
          "description": "The status of the banking capability, or whether the account can have bank accounts.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "twint_payments": {
          "description": "The status of the TWINT capability of the account, or whether the account can directly process TWINT charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "us_bank_account_ach_payments": {
          "description": "The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "us_bank_transfer_payments": {
          "description": "The status of the US customer_balance payments (USD currency) capability of the account, or whether the account can directly process US customer_balance charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "zip_payments": {
          "description": "The status of the Zip capability of the account, or whether the account can directly process Zip charges.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        }
      },
      "title": "AccountCapabilities",
      "type": "object",
      "x-expandableFields": []
    },
    "account_capability_future_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "current_deadline": {
          "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on the capability's enablement state prior to transitioning.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the capability enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "disabled_reason": {
          "description": "This is typed as an enum for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is null because fields in `future_requirements` will never disable the account.",
          "enum": [
            "other",
            "paused.inactivity",
            "pending.onboarding",
            "pending.review",
            "platform_disabled",
            "platform_paused",
            "rejected.inactivity",
            "rejected.other",
            "rejected.unsupported_business",
            "requirements.fields_needed"
          ],
          "type": "string",
          "x-nullable": true
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array"
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "past_due": {
          "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "currently_due",
        "errors",
        "eventually_due",
        "past_due",
        "pending_verification"
      ],
      "title": "AccountCapabilityFutureRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "account_capability_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "current_deadline": {
          "description": "Date by which the fields in `currently_due` must be collected to keep the capability enabled for the account. These fields may disable the capability sooner if the next threshold is reached before they are collected.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the capability enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "disabled_reason": {
          "description": "Description of why the capability is disabled. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification).",
          "enum": [
            "other",
            "paused.inactivity",
            "pending.onboarding",
            "pending.review",
            "platform_disabled",
            "platform_paused",
            "rejected.inactivity",
            "rejected.other",
            "rejected.unsupported_business",
            "requirements.fields_needed"
          ],
          "type": "string",
          "x-nullable": true
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array"
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "past_due": {
          "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the capability on the account.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "currently_due",
        "errors",
        "eventually_due",
        "past_due",
        "pending_verification"
      ],
      "title": "AccountCapabilityRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "account_card_issuing_settings": {
      "description": "",
      "properties": {
        "tos_acceptance": {
          "$ref": "#/definitions/card_issuing_account_terms_of_service"
        }
      },
      "title": "AccountCardIssuingSettings",
      "type": "object",
      "x-expandableFields": [
        "tos_acceptance"
      ]
    },
    "account_card_payments_settings": {
      "description": "",
      "properties": {
        "decline_on": {
          "$ref": "#/definitions/account_decline_charge_on"
        },
        "statement_descriptor_prefix": {
          "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_prefix_kana": {
          "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_prefix_kanji": {
          "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountCardPaymentsSettings",
      "type": "object",
      "x-expandableFields": [
        "decline_on"
      ]
    },
    "account_dashboard_settings": {
      "description": "",
      "properties": {
        "display_name": {
          "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "timezone": {
          "description": "The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountDashboardSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "account_decline_charge_on": {
      "description": "",
      "properties": {
        "avs_failure": {
          "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
          "type": "boolean"
        },
        "cvc_failure": {
          "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
          "type": "boolean"
        }
      },
      "required": [
        "avs_failure",
        "cvc_failure"
      ],
      "title": "AccountDeclineChargeOn",
      "type": "object",
      "x-expandableFields": []
    },
    "account_future_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "current_deadline": {
          "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "disabled_reason": {
          "description": "This is typed as a string for consistency with `requirements.disabled_reason`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array",
          "x-nullable": true
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "past_due": {
          "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "AccountFutureRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "account_invoices_settings": {
      "description": "",
      "properties": {
        "default_account_tax_ids": {
          "description": "The list of default Account Tax IDs to automatically include on invoices. Account Tax IDs get added when an invoice is finalized.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "AccountInvoicesSettings",
      "type": "object",
      "x-expandableFields": [
        "default_account_tax_ids"
      ]
    },
    "account_link": {
      "description": "Account Links are the means by which a Connect platform grants a connected account permission to access\nStripe-hosted applications, such as Connect Onboarding.\n\nRelated guide: [Connect Onboarding](https://stripe.com/docs/connect/custom/hosted-onboarding)",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expires_at": {
          "description": "The timestamp at which this account link will expire.",
          "format": "unix-time",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "account_link"
          ],
          "type": "string"
        },
        "url": {
          "description": "The URL for the account link.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "expires_at",
        "object",
        "url"
      ],
      "title": "AccountLink",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "account_link"
    },
    "account_monthly_estimated_revenue": {
      "description": "",
      "properties": {
        "amount": {
          "description": "A non-negative integer representing how much to charge in the [smallest currency unit](/currencies#zero-decimal).",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "AccountMonthlyEstimatedRevenue",
      "type": "object",
      "x-expandableFields": []
    },
    "account_payments_settings": {
      "description": "",
      "properties": {
        "statement_descriptor": {
          "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_kana": {
          "description": "The Kana variation of `statement_descriptor` used for charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_kanji": {
          "description": "The Kanji variation of `statement_descriptor` used for charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_prefix_kana": {
          "description": "The Kana variation of `statement_descriptor_prefix` used for card charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_prefix_kanji": {
          "description": "The Kanji variation of `statement_descriptor_prefix` used for card charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountPaymentsSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "account_payout_settings": {
      "description": "",
      "properties": {
        "debit_negative_balances": {
          "description": "A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See [Understanding Connect account balances](/connect/account-balances) for details. The default value is `false` when [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, otherwise `true`.",
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/transfer_schedule"
        },
        "statement_descriptor": {
          "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "debit_negative_balances",
        "schedule"
      ],
      "title": "AccountPayoutSettings",
      "type": "object",
      "x-expandableFields": [
        "schedule"
      ]
    },
    "account_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "current_deadline": {
          "description": "Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "disabled_reason": {
          "description": "If the account is disabled, this string describes why. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification). Can be `action_required.requested_capabilities`, `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.incomplete_verification`, `rejected.listed`, `rejected.other`, `rejected.terms_of_service`, `under_review`, or `other`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array",
          "x-nullable": true
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "past_due": {
          "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "AccountRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "account_requirements_alternative": {
      "description": "",
      "properties": {
        "alternative_fields_due": {
          "description": "Fields that can be provided to satisfy all fields in `original_fields_due`.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "original_fields_due": {
          "description": "Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "alternative_fields_due",
        "original_fields_due"
      ],
      "title": "AccountRequirementsAlternative",
      "type": "object",
      "x-expandableFields": []
    },
    "account_requirements_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "The code for the type of error.",
          "enum": [
            "invalid_address_city_state_postal_code",
            "invalid_address_highway_contract_box",
            "invalid_address_private_mailbox",
            "invalid_business_profile_name",
            "invalid_business_profile_name_denylisted",
            "invalid_company_name_denylisted",
            "invalid_dob_age_over_maximum",
            "invalid_dob_age_under_18",
            "invalid_dob_age_under_minimum",
            "invalid_product_description_length",
            "invalid_product_description_url_match",
            "invalid_representative_country",
            "invalid_statement_descriptor_business_mismatch",
            "invalid_statement_descriptor_denylisted",
            "invalid_statement_descriptor_length",
            "invalid_statement_descriptor_prefix_denylisted",
            "invalid_statement_descriptor_prefix_mismatch",
            "invalid_street_address",
            "invalid_tax_id",
            "invalid_tax_id_format",
            "invalid_tos_acceptance",
            "invalid_url_denylisted",
            "invalid_url_format",
            "invalid_url_web_presence_detected",
            "invalid_url_website_business_information_mismatch",
            "invalid_url_website_empty",
            "invalid_url_website_inaccessible",
            "invalid_url_website_inaccessible_geoblocked",
            "invalid_url_website_inaccessible_password_protected",
            "invalid_url_website_incomplete",
            "invalid_url_website_incomplete_cancellation_policy",
            "invalid_url_website_incomplete_customer_service_details",
            "invalid_url_website_incomplete_legal_restrictions",
            "invalid_url_website_incomplete_refund_policy",
            "invalid_url_website_incomplete_return_policy",
            "invalid_url_website_incomplete_terms_and_conditions",
            "invalid_url_website_incomplete_under_construction",
            "invalid_url_website_other",
            "invalid_value_other",
            "verification_directors_mismatch",
            "verification_document_address_mismatch",
            "verification_document_address_missing",
            "verification_document_corrupt",
            "verification_document_country_not_supported",
            "verification_document_directors_mismatch",
            "verification_document_dob_mismatch",
            "verification_document_duplicate_type",
            "verification_document_expired",
            "verification_document_failed_copy",
            "verification_document_failed_greyscale",
            "verification_document_failed_other",
            "verification_document_failed_test_mode",
            "verification_document_fraudulent",
            "verification_document_id_number_mismatch",
            "verification_document_id_number_missing",
            "verification_document_incomplete",
            "verification_document_invalid",
            "verification_document_issue_or_expiry_date_missing",
            "verification_document_manipulated",
            "verification_document_missing_back",
            "verification_document_missing_front",
            "verification_document_name_mismatch",
            "verification_document_name_missing",
            "verification_document_nationality_mismatch",
            "verification_document_not_readable",
            "verification_document_not_signed",
            "verification_document_not_uploaded",
            "verification_document_photo_mismatch",
            "verification_document_too_large",
            "verification_document_type_not_supported",
            "verification_extraneous_directors",
            "verification_failed_address_match",
            "verification_failed_business_iec_number",
            "verification_failed_document_match",
            "verification_failed_id_number_match",
            "verification_failed_keyed_identity",
            "verification_failed_keyed_match",
            "verification_failed_name_match",
            "verification_failed_other",
            "verification_failed_representative_authority",
            "verification_failed_residential_address",
            "verification_failed_tax_id_match",
            "verification_failed_tax_id_not_issued",
            "verification_missing_directors",
            "verification_missing_executives",
            "verification_missing_owners",
            "verification_requires_additional_memorandum_of_associations",
            "verification_requires_additional_proof_of_registration",
            "verification_supportability"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "reason": {
          "description": "An informative message that indicates the error type and provides additional details about the error.",
          "maxLength": 5000,
          "type": "string"
        },
        "requirement": {
          "description": "The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "code",
        "reason",
        "requirement"
      ],
      "title": "AccountRequirementsError",
      "type": "object",
      "x-expandableFields": []
    },
    "account_sepa_debit_payments_settings": {
      "description": "",
      "properties": {
        "creditor_id": {
          "description": "SEPA creditor identifier that identifies the company making the payment.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "AccountSepaDebitPaymentsSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "account_session": {
      "description": "An AccountSession allows a Connect platform to grant access to a connected account in Connect embedded components.\n\nWe recommend that you create an AccountSession each time you need to display an embedded component\nto your user. Do not save AccountSessions to your database as they expire relatively\nquickly, and cannot be used more than once.\n\nRelated guide: [Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components)",
      "properties": {
        "components": {
          "$ref": "#/definitions/connect_embedded_account_session_create_components"
        },
        "account": {
          "description": "The ID of the account the AccountSession was created for",
          "maxLength": 5000,
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret of this AccountSession. Used on the client to set up secure access to the given `account`.\n\nThe client secret can be used to provide access to `account` from your frontend. It should not be stored, logged, or exposed to anyone other than the connected account. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [setup Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components) and learn about how `client_secret` should be handled.",
          "maxLength": 5000,
          "type": "string"
        },
        "expires_at": {
          "description": "The timestamp at which this AccountSession will expire.",
          "format": "unix-time",
          "type": "integer"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "account_session"
          ],
          "type": "string"
        }
      },
      "required": [
        "account",
        "client_secret",
        "components",
        "expires_at",
        "livemode",
        "object"
      ],
      "title": "ConnectEmbeddedMethodAccountSessionCreateMethodAccountSession",
      "type": "object",
      "x-expandableFields": [
        "components"
      ],
      "x-resourceId": "account_session"
    },
    "account_settings": {
      "description": "",
      "properties": {
        "bacs_debit_payments": {
          "$ref": "#/definitions/account_bacs_debit_payments_settings"
        },
        "branding": {
          "$ref": "#/definitions/account_branding_settings"
        },
        "card_issuing": {
          "$ref": "#/definitions/account_card_issuing_settings"
        },
        "card_payments": {
          "$ref": "#/definitions/account_card_payments_settings"
        },
        "dashboard": {
          "$ref": "#/definitions/account_dashboard_settings"
        },
        "invoices": {
          "$ref": "#/definitions/account_invoices_settings"
        },
        "payments": {
          "$ref": "#/definitions/account_payments_settings"
        },
        "payouts": {
          "$ref": "#/definitions/account_payout_settings"
        },
        "sepa_debit_payments": {
          "$ref": "#/definitions/account_sepa_debit_payments_settings"
        },
        "treasury": {
          "$ref": "#/definitions/account_treasury_settings"
        }
      },
      "required": [
        "branding",
        "card_payments",
        "dashboard",
        "payments"
      ],
      "title": "AccountSettings",
      "type": "object",
      "x-expandableFields": [
        "bacs_debit_payments",
        "branding",
        "card_issuing",
        "card_payments",
        "dashboard",
        "invoices",
        "payments",
        "payouts",
        "sepa_debit_payments",
        "treasury"
      ]
    },
    "account_terms_of_service": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the account representative accepted the service agreement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user agent of the browser from which the account representative accepted the service agreement.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "AccountTermsOfService",
      "type": "object",
      "x-expandableFields": []
    },
    "account_tos_acceptance": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the account representative accepted their service agreement",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the account representative accepted their service agreement",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "service_agreement": {
          "description": "The user's service agreement type",
          "maxLength": 5000,
          "type": "string"
        },
        "user_agent": {
          "description": "The user agent of the browser from which the account representative accepted their service agreement",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "AccountTOSAcceptance",
      "type": "object",
      "x-expandableFields": []
    },
    "account_treasury_settings": {
      "description": "",
      "properties": {
        "tos_acceptance": {
          "$ref": "#/definitions/account_terms_of_service"
        }
      },
      "title": "AccountTreasurySettings",
      "type": "object",
      "x-expandableFields": [
        "tos_acceptance"
      ]
    },
    "account_unification_account_controller": {
      "description": "",
      "properties": {
        "fees": {
          "$ref": "#/definitions/account_unification_account_controller_fees"
        },
        "is_controller": {
          "description": "`true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.",
          "type": "boolean"
        },
        "losses": {
          "$ref": "#/definitions/account_unification_account_controller_losses"
        },
        "requirement_collection": {
          "description": "A value indicating responsibility for collecting requirements on this account. Only returned when the Connect application retrieving the resource controls the account.",
          "enum": [
            "application",
            "stripe"
          ],
          "type": "string"
        },
        "stripe_dashboard": {
          "$ref": "#/definitions/account_unification_account_controller_stripe_dashboard"
        },
        "type": {
          "description": "The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.",
          "enum": [
            "account",
            "application"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "AccountUnificationAccountController",
      "type": "object",
      "x-expandableFields": [
        "fees",
        "losses",
        "stripe_dashboard"
      ]
    },
    "account_unification_account_controller_fees": {
      "description": "",
      "properties": {
        "payer": {
          "description": "A value indicating the responsible payer of a bundle of Stripe fees for pricing-control eligible products on this account. Learn more about [fee behavior on connected accounts](https://docs.stripe.com/connect/direct-charges-fee-payer-behavior).",
          "enum": [
            "account",
            "application",
            "application_custom",
            "application_express"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "payer"
      ],
      "title": "AccountUnificationAccountControllerFees",
      "type": "object",
      "x-expandableFields": []
    },
    "account_unification_account_controller_losses": {
      "description": "",
      "properties": {
        "payments": {
          "description": "A value indicating who is liable when this account can't pay back negative balances from payments.",
          "enum": [
            "application",
            "stripe"
          ],
          "type": "string"
        }
      },
      "required": [
        "payments"
      ],
      "title": "AccountUnificationAccountControllerLosses",
      "type": "object",
      "x-expandableFields": []
    },
    "account_unification_account_controller_stripe_dashboard": {
      "description": "",
      "properties": {
        "type": {
          "description": "A value indicating the Stripe dashboard this account has access to independent of the Connect application.",
          "enum": [
            "express",
            "full",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "AccountUnificationAccountControllerStripeDashboard",
      "type": "object",
      "x-expandableFields": []
    },
    "address": {
      "description": "",
      "properties": {
        "city": {
          "description": "City, district, suburb, town, or village.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line1": {
          "description": "Address line 1 (e.g., street, PO Box, or company name).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line2": {
          "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "postal_code": {
          "description": "ZIP or postal code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "state": {
          "description": "State, county, province, or region.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "Address",
      "type": "object",
      "x-expandableFields": []
    },
    "api_errors": {
      "description": "",
      "properties": {
        "charge": {
          "description": "For card errors, the ID of the failed charge.",
          "maxLength": 5000,
          "type": "string"
        },
        "code": {
          "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
          "maxLength": 5000,
          "type": "string"
        },
        "decline_code": {
          "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
          "maxLength": 5000,
          "type": "string"
        },
        "doc_url": {
          "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
          "maxLength": 5000,
          "type": "string"
        },
        "message": {
          "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
          "maxLength": 40000,
          "type": "string"
        },
        "param": {
          "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_intent": {
          "$ref": "#/definitions/payment_intent"
        },
        "payment_method": {
          "$ref": "#/definitions/payment_method"
        },
        "payment_method_type": {
          "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
          "maxLength": 5000,
          "type": "string"
        },
        "request_log_url": {
          "description": "A URL to the request log entry in your dashboard.",
          "maxLength": 5000,
          "type": "string"
        },
        "setup_intent": {
          "$ref": "#/definitions/setup_intent"
        },
        "source": {
          "description": "The [source object](https://stripe.com/docs/api/sources/object) for errors returned on a request involving a source.",
          "x-stripeBypassValidation": true
        },
        "type": {
          "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
          "enum": [
            "api_error",
            "card_error",
            "idempotency_error",
            "invalid_request_error"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "APIErrors",
      "type": "object",
      "x-expandableFields": [
        "payment_intent",
        "payment_method",
        "setup_intent",
        "source"
      ]
    },
    "apple_pay_domain": {
      "description": "",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "domain_name": {
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "apple_pay_domain"
          ],
          "type": "string"
        }
      },
      "required": [
        "created",
        "domain_name",
        "id",
        "livemode",
        "object"
      ],
      "title": "ApplePayDomain",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "apple_pay_domain"
    },
    "application": {
      "description": "",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "The name of the application.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "application"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "object"
      ],
      "title": "Application",
      "type": "object",
      "x-expandableFields": []
    },
    "application_fee": {
      "description": "",
      "properties": {
        "account": {
          "description": "ID of the Stripe account this fee was taken from.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "amount": {
          "description": "Amount earned, in cents (or local equivalent).",
          "type": "integer"
        },
        "amount_refunded": {
          "description": "Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect application that earned the fee.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          }
        },
        "balance_transaction": {
          "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "charge": {
          "description": "ID of the charge that the application fee was taken from.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "fee_source": {
          "description": "Polymorphic source of the application fee. Includes the ID of the object the application fee was created from.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "application_fee"
          ],
          "type": "string"
        },
        "originating_transaction": {
          "description": "ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "refunded": {
          "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
          "type": "boolean"
        },
        "refunds": {
          "description": "A list of refunds that have been applied to the fee.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/fee_refund"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "FeeRefundList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        }
      },
      "required": [
        "account",
        "amount",
        "amount_refunded",
        "application",
        "charge",
        "created",
        "currency",
        "id",
        "livemode",
        "object",
        "refunded",
        "refunds"
      ],
      "title": "PlatformFee",
      "type": "object",
      "x-expandableFields": [
        "account",
        "application",
        "balance_transaction",
        "charge",
        "fee_source",
        "originating_transaction",
        "refunds"
      ],
      "x-resourceId": "application_fee"
    },
    "apps.secret": {
      "description": "Secret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can't view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don't change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://stripe.com/docs/stripe-apps/store-auth-data-custom-objects)",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "deleted": {
          "description": "If true, indicates that this secret has been deleted",
          "type": "boolean"
        },
        "expires_at": {
          "description": "The Unix timestamp for the expiry time of the secret, after which the secret deletes.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "name": {
          "description": "A name for the secret that's unique within the scope.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "apps.secret"
          ],
          "type": "string"
        },
        "payload": {
          "description": "The plaintext secret value to be stored.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "scope": {
          "$ref": "#/definitions/secret_service_resource_scope"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "name",
        "object",
        "scope"
      ],
      "title": "SecretServiceResourceSecret",
      "type": "object",
      "x-expandableFields": [
        "scope"
      ],
      "x-resourceId": "apps.secret"
    },
    "automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the most recent automated tax calculation for this invoice.",
          "enum": [
            "complete",
            "failed",
            "requires_location_inputs"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "AutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "balance": {
      "description": "This is an object representing your Stripe balance. You can retrieve it to see\nthe balance currently on your Stripe account.\n\nYou can also retrieve the balance history, which contains a list of\n[transactions](https://stripe.com/docs/reporting/balance-transaction-types) that contributed to the balance\n(charges, payouts, and so forth).\n\nThe available and pending amounts for each currency are broken down further by\npayment source types.\n\nRelated guide: [Understanding Connect account balances](https://stripe.com/docs/connect/account-balances)",
      "properties": {
        "available": {
          "description": "Available funds that you can transfer or pay out automatically by Stripe or explicitly through the [Transfers API](https://stripe.com/docs/api#transfers) or [Payouts API](https://stripe.com/docs/api#payouts). You can find the available balance for each currency and payment type in the `source_types` property.",
          "items": {
            "$ref": "#/definitions/balance_amount"
          },
          "type": "array"
        },
        "connect_reserved": {
          "description": "Funds held due to negative balances on connected accounts where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. You can find the connect reserve balance for each currency and payment type in the `source_types` property.",
          "items": {
            "$ref": "#/definitions/balance_amount"
          },
          "type": "array"
        },
        "instant_available": {
          "description": "Funds that you can pay out using Instant Payouts.",
          "items": {
            "$ref": "#/definitions/balance_amount_net"
          },
          "type": "array"
        },
        "issuing": {
          "$ref": "#/definitions/balance_detail"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "balance"
          ],
          "type": "string"
        },
        "pending": {
          "description": "Funds that aren't available in the balance yet. You can find the pending balance for each currency and each payment type in the `source_types` property.",
          "items": {
            "$ref": "#/definitions/balance_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "available",
        "livemode",
        "object",
        "pending"
      ],
      "title": "Balance",
      "type": "object",
      "x-expandableFields": [
        "available",
        "connect_reserved",
        "instant_available",
        "issuing",
        "pending"
      ],
      "x-resourceId": "balance"
    },
    "balance_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Balance amount.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "source_types": {
          "$ref": "#/definitions/balance_amount_by_source_type"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "BalanceAmount",
      "type": "object",
      "x-expandableFields": [
        "source_types"
      ]
    },
    "balance_amount_by_source_type": {
      "description": "",
      "properties": {
        "bank_account": {
          "description": "Amount for bank account.",
          "type": "integer"
        },
        "card": {
          "description": "Amount for card.",
          "type": "integer"
        },
        "fpx": {
          "description": "Amount for FPX.",
          "type": "integer"
        }
      },
      "title": "BalanceAmountBySourceType",
      "type": "object",
      "x-expandableFields": []
    },
    "balance_amount_net": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Balance amount.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "net_available": {
          "description": "Breakdown of balance by destination.",
          "items": {
            "$ref": "#/definitions/balance_net_available"
          },
          "type": "array"
        },
        "source_types": {
          "$ref": "#/definitions/balance_amount_by_source_type"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "BalanceAmountNet",
      "type": "object",
      "x-expandableFields": [
        "net_available",
        "source_types"
      ]
    },
    "balance_detail": {
      "description": "",
      "properties": {
        "available": {
          "description": "Funds that are available for use.",
          "items": {
            "$ref": "#/definitions/balance_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "available"
      ],
      "title": "BalanceDetail",
      "type": "object",
      "x-expandableFields": [
        "available"
      ]
    },
    "balance_net_available": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Net balance amount, subtracting fees from platform-set pricing.",
          "type": "integer"
        },
        "destination": {
          "description": "ID of the external account for this net balance (not expandable).",
          "maxLength": 5000,
          "type": "string"
        },
        "source_types": {
          "$ref": "#/definitions/balance_amount_by_source_type"
        }
      },
      "required": [
        "amount",
        "destination"
      ],
      "title": "BalanceNetAvailable",
      "type": "object",
      "x-expandableFields": [
        "source_types"
      ]
    },
    "balance_transaction": {
      "description": "Balance transactions represent funds moving through your Stripe account.\nStripe creates them for every type of transaction that enters or leaves your Stripe account balance.\n\nRelated guide: [Balance transaction types](https://stripe.com/docs/reports/balance-transaction-types)",
      "properties": {
        "amount": {
          "description": "Gross amount of this transaction (in cents (or local equivalent)). A positive value represents funds charged to another party, and a negative value represents funds sent to another party.",
          "type": "integer"
        },
        "available_on": {
          "description": "The date that the transaction's net funds become available in the Stripe balance.",
          "format": "unix-time",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exchange_rate": {
          "description": "If applicable, this transaction uses an exchange rate. If money converts from currency A to currency B, then the `amount` in currency A, multipled by the `exchange_rate`, equals the `amount` in currency B. For example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount` is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate` is `1.234`.",
          "type": "number",
          "x-nullable": true
        },
        "fee": {
          "description": "Fees (in cents (or local equivalent)) paid for this transaction. Represented as a positive integer when assessed.",
          "type": "integer"
        },
        "fee_details": {
          "description": "Detailed breakdown of fees (in cents (or local equivalent)) paid for this transaction.",
          "items": {
            "$ref": "#/definitions/fee"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "net": {
          "description": "Net impact to a Stripe balance (in cents (or local equivalent)). A positive value represents incrementing a Stripe balance, and a negative value decrementing a Stripe balance. You can calculate the net impact of a transaction on a balance by `amount` - `fee`",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "balance_transaction"
          ],
          "type": "string"
        },
        "reporting_category": {
          "description": "Learn more about how [reporting categories](https://stripe.com/docs/reports/reporting-categories) can help you understand balance transactions from an accounting perspective.",
          "maxLength": 5000,
          "type": "string"
        },
        "source": {
          "description": "This transaction relates to the Stripe object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application_fee"
              },
              {
                "$ref": "#/definitions/charge"
              },
              {
                "$ref": "#/definitions/connect_collection_transfer"
              },
              {
                "$ref": "#/definitions/customer_cash_balance_transaction"
              },
              {
                "$ref": "#/definitions/dispute"
              },
              {
                "$ref": "#/definitions/fee_refund"
              },
              {
                "$ref": "#/definitions/issuing.authorization"
              },
              {
                "$ref": "#/definitions/issuing.dispute"
              },
              {
                "$ref": "#/definitions/issuing.transaction"
              },
              {
                "$ref": "#/definitions/payout"
              },
              {
                "$ref": "#/definitions/refund"
              },
              {
                "$ref": "#/definitions/reserve_transaction"
              },
              {
                "$ref": "#/definitions/tax_deducted_at_source"
              },
              {
                "$ref": "#/definitions/topup"
              },
              {
                "$ref": "#/definitions/transfer"
              },
              {
                "$ref": "#/definitions/transfer_reversal"
              }
            ]
          },
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "status": {
          "description": "The transaction's net funds status in the Stripe balance, which are either `available` or `pending`.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types). To classify transactions for accounting purposes, consider `reporting_category` instead.",
          "enum": [
            "adjustment",
            "advance",
            "advance_funding",
            "anticipation_repayment",
            "application_fee",
            "application_fee_refund",
            "charge",
            "climate_order_purchase",
            "climate_order_refund",
            "connect_collection_transfer",
            "contribution",
            "issuing_authorization_hold",
            "issuing_authorization_release",
            "issuing_dispute",
            "issuing_transaction",
            "obligation_outbound",
            "obligation_reversal_inbound",
            "payment",
            "payment_failure_refund",
            "payment_network_reserve_hold",
            "payment_network_reserve_release",
            "payment_refund",
            "payment_reversal",
            "payment_unreconciled",
            "payout",
            "payout_cancel",
            "payout_failure",
            "refund",
            "refund_failure",
            "reserve_transaction",
            "reserved_funds",
            "stripe_fee",
            "stripe_fx_fee",
            "tax_fee",
            "topup",
            "topup_reversal",
            "transfer",
            "transfer_cancel",
            "transfer_failure",
            "transfer_refund"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "available_on",
        "created",
        "currency",
        "fee",
        "fee_details",
        "id",
        "net",
        "object",
        "reporting_category",
        "status",
        "type"
      ],
      "title": "BalanceTransaction",
      "type": "object",
      "x-expandableFields": [
        "fee_details",
        "source"
      ],
      "x-resourceId": "balance_transaction"
    },
    "bank_account": {
      "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](/api#external_accounts) are transfer\ndestinations on `Account` objects for connected accounts.\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank debits and transfers](/payments/bank-debits-transfers)",
      "properties": {
        "account": {
          "description": "The ID of the account that the bank account is associated with.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "account_holder_name": {
          "description": "The name of the person or business that owns the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_holder_type": {
          "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "available_payout_methods": {
          "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
          "items": {
            "enum": [
              "instant",
              "standard"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string"
        },
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
          "type": "string"
        },
        "customer": {
          "description": "The ID of the customer that the bank account is associated with.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "default_for_currency": {
          "description": "Whether this bank account is the default external account for its currency.",
          "type": "boolean",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "future_requirements": {
          "description": "Information about the [upcoming new requirements for the bank account](https://stripe.com/docs/connect/custom-accounts/future-requirements), including what information needs to be collected, and by when.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "bank_account"
          ],
          "type": "string"
        },
        "requirements": {
          "description": "Information about the requirements for the bank account, including what information needs to be collected.",
          "x-nullable": true
        },
        "routing_number": {
          "description": "The routing transit number for the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a payout sent to this bank account fails, we'll set the status to `errored` and will not continue to send [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) until the bank details are updated.\n\nFor external accounts, possible values are `new`, `errored` and `verification_failed`. If a payout fails, the status is set to `errored` and scheduled payouts are stopped until account details are updated. In the US and India, if we can't [verify the owner of the bank account](https://support.stripe.com/questions/bank-account-ownership-verification), we'll set the status to `verification_failed`. Other validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "country",
        "currency",
        "id",
        "last4",
        "object",
        "status"
      ],
      "title": "BankAccount",
      "type": "object",
      "x-expandableFields": [
        "account",
        "customer",
        "future_requirements",
        "requirements"
      ],
      "x-resourceId": "bank_account"
    },
    "bank_connections_resource_accountholder": {
      "description": "",
      "properties": {
        "account": {
          "description": "The ID of the Stripe account this account belongs to. Should only be present if `account_holder.type` is `account`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "customer": {
          "description": "ID of the Stripe customer this account belongs to. Present if and only if `account_holder.type` is `customer`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          }
        },
        "type": {
          "description": "Type of account holder that this account belongs to.",
          "enum": [
            "account",
            "customer"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "BankConnectionsResourceAccountholder",
      "type": "object",
      "x-expandableFields": [
        "account",
        "customer"
      ]
    },
    "bank_connections_resource_balance": {
      "description": "",
      "properties": {
        "as_of": {
          "description": "The time that the external institution calculated this balance. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "cash": {
          "$ref": "#/definitions/bank_connections_resource_balance_api_resource_cash_balance"
        },
        "credit": {
          "$ref": "#/definitions/bank_connections_resource_balance_api_resource_credit_balance"
        },
        "current": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "The balances owed to (or by) the account holder, before subtracting any outbound pending transactions or adding any inbound pending transactions.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
          "type": "object"
        },
        "type": {
          "description": "The `type` of the balance. An additional hash is included on the balance with a name matching this value.",
          "enum": [
            "cash",
            "credit"
          ],
          "type": "string"
        }
      },
      "required": [
        "as_of",
        "current",
        "type"
      ],
      "title": "BankConnectionsResourceBalance",
      "type": "object",
      "x-expandableFields": [
        "cash",
        "credit"
      ]
    },
    "bank_connections_resource_balance_api_resource_cash_balance": {
      "description": "",
      "properties": {
        "available": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "The funds available to the account holder. Typically this is the current balance after subtracting any outbound pending transactions and adding any inbound pending transactions.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
          "type": "object",
          "x-nullable": true
        }
      },
      "title": "BankConnectionsResourceBalanceAPIResourceCashBalance",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_balance_api_resource_credit_balance": {
      "description": "",
      "properties": {
        "used": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "The credit that has been used by the account holder.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
          "type": "object",
          "x-nullable": true
        }
      },
      "title": "BankConnectionsResourceBalanceAPIResourceCreditBalance",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_balance_refresh": {
      "description": "",
      "properties": {
        "last_attempted_at": {
          "description": "The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "next_refresh_available_at": {
          "description": "Time at which the next balance refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the last refresh attempt.",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "type": "string"
        }
      },
      "required": [
        "last_attempted_at",
        "status"
      ],
      "title": "BankConnectionsResourceBalanceRefresh",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_link_account_session_filters": {
      "description": "",
      "properties": {
        "account_subcategories": {
          "description": "Restricts the Session to subcategories of accounts that can be linked. Valid subcategories are: `checking`, `savings`, `mortgage`, `line_of_credit`, `credit_card`.",
          "items": {
            "enum": [
              "checking",
              "credit_card",
              "line_of_credit",
              "mortgage",
              "savings"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "countries": {
          "description": "List of countries from which to filter accounts.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "BankConnectionsResourceLinkAccountSessionFilters",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_ownership_refresh": {
      "description": "",
      "properties": {
        "last_attempted_at": {
          "description": "The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "next_refresh_available_at": {
          "description": "Time at which the next ownership refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the last refresh attempt.",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "type": "string"
        }
      },
      "required": [
        "last_attempted_at",
        "status"
      ],
      "title": "BankConnectionsResourceOwnershipRefresh",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_transaction_refresh": {
      "description": "",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last_attempted_at": {
          "description": "The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "next_refresh_available_at": {
          "description": "Time at which the next transaction refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the last refresh attempt.",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "last_attempted_at",
        "status"
      ],
      "title": "BankConnectionsResourceTransactionRefresh",
      "type": "object",
      "x-expandableFields": []
    },
    "bank_connections_resource_transaction_resource_status_transitions": {
      "description": "",
      "properties": {
        "posted_at": {
          "description": "Time at which this transaction posted. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "void_at": {
          "description": "Time at which this transaction was voided. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "BankConnectionsResourceTransactionResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "billing.alert": {
      "description": "A billing alert is a resource that notifies you when a certain usage threshold on a meter is crossed. For example, you might create a billing alert to notify you when a certain user made 100 API requests.",
      "properties": {
        "alert_type": {
          "description": "Defines the type of the alert.",
          "enum": [
            "usage_threshold"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.alert"
          ],
          "type": "string"
        },
        "status": {
          "description": "Status of the alert. This can be active, inactive or archived.",
          "enum": [
            "active",
            "archived",
            "inactive"
          ],
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "description": "Title of the alert.",
          "maxLength": 5000,
          "type": "string"
        },
        "usage_threshold": {
          "description": "Encapsulates configuration of the alert to monitor usage on a specific [Billing Meter](https://stripe.com/docs/api/billing/meter).",
          "x-nullable": true
        }
      },
      "required": [
        "alert_type",
        "id",
        "livemode",
        "object",
        "title"
      ],
      "title": "ThresholdsResourceAlert",
      "type": "object",
      "x-expandableFields": [
        "usage_threshold"
      ],
      "x-resourceId": "billing.alert"
    },
    "billing.credit_balance_summary": {
      "description": "Indicates the credit balance for credits granted to a customer.",
      "properties": {
        "balances": {
          "description": "The credit balances. One entry per credit grant currency. If a customer only has credit grants in a single currency, then this will have a single balance entry.",
          "items": {
            "$ref": "#/definitions/credit_balance"
          },
          "type": "array"
        },
        "customer": {
          "description": "The customer the balance is for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.credit_balance_summary"
          ],
          "type": "string"
        }
      },
      "required": [
        "balances",
        "customer",
        "livemode",
        "object"
      ],
      "title": "CreditBalanceSummary",
      "type": "object",
      "x-expandableFields": [
        "balances",
        "customer"
      ],
      "x-resourceId": "billing.credit_balance_summary"
    },
    "billing.credit_balance_transaction": {
      "description": "A credit balance transaction is a resource representing a transaction (either a credit or a debit) against an existing credit grant.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "credit": {
          "description": "Credit details for this balance transaction. Only present if type is `credit`.",
          "x-nullable": true
        },
        "credit_grant": {
          "description": "The credit grant associated with this balance transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/billing.credit_grant"
              }
            ]
          }
        },
        "debit": {
          "description": "Debit details for this balance transaction. Only present if type is `debit`.",
          "x-nullable": true
        },
        "effective_at": {
          "description": "The effective time of this balance transaction.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.credit_balance_transaction"
          ],
          "type": "string"
        },
        "test_clock": {
          "description": "ID of the test clock this credit balance transaction belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "type": {
          "description": "The type of balance transaction (credit or debit).",
          "enum": [
            "credit",
            "debit"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "credit_grant",
        "effective_at",
        "id",
        "livemode",
        "object"
      ],
      "title": "CreditBalanceTransaction",
      "type": "object",
      "x-expandableFields": [
        "credit",
        "credit_grant",
        "debit",
        "test_clock"
      ],
      "x-resourceId": "billing.credit_balance_transaction"
    },
    "billing.credit_grant": {
      "description": "A credit grant is a resource that records a grant of some credit to a customer.",
      "properties": {
        "amount": {
          "$ref": "#/definitions/billing_credit_grants_resource_amount"
        },
        "applicability_config": {
          "$ref": "#/definitions/billing_credit_grants_resource_applicability_config"
        },
        "category": {
          "description": "The category of this credit grant.",
          "enum": [
            "paid",
            "promotional"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "Id of the customer to whom the credit was granted.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "effective_at": {
          "description": "The time when the credit becomes effective i.e when it is eligible to be used.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The time when the credit will expire. If not present, the credit will never expire.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "A descriptive name shown in dashboard and on invoices.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.credit_grant"
          ],
          "type": "string"
        },
        "test_clock": {
          "description": "ID of the test clock this credit grant belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "voided_at": {
          "description": "The time when this credit grant was voided. If not present, the credit grant hasn't been voided.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "applicability_config",
        "category",
        "created",
        "customer",
        "id",
        "livemode",
        "metadata",
        "object",
        "updated"
      ],
      "title": "CreditGrant",
      "type": "object",
      "x-expandableFields": [
        "amount",
        "applicability_config",
        "customer",
        "test_clock"
      ],
      "x-resourceId": "billing.credit_grant"
    },
    "billing.meter": {
      "description": "A billing meter is a resource that allows you to track usage of a particular event. For example, you might create a billing meter to track the number of API calls made by a particular user. You can then attach the billing meter to a price and attach the price to a subscription to charge the user for the number of API calls they make.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer_mapping": {
          "$ref": "#/definitions/billing_meter_resource_customer_mapping_settings"
        },
        "default_aggregation": {
          "$ref": "#/definitions/billing_meter_resource_aggregation_settings"
        },
        "display_name": {
          "description": "The meter's name.",
          "maxLength": 5000,
          "type": "string"
        },
        "event_name": {
          "description": "The name of the meter event to record usage for. Corresponds with the `event_name` field on meter events.",
          "maxLength": 5000,
          "type": "string"
        },
        "event_time_window": {
          "description": "The time window to pre-aggregate meter events for, if any.",
          "enum": [
            "day",
            "hour"
          ],
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.meter"
          ],
          "type": "string"
        },
        "status": {
          "description": "The meter's status.",
          "enum": [
            "active",
            "inactive"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/billing_meter_resource_billing_meter_status_transitions"
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "value_settings": {
          "$ref": "#/definitions/billing_meter_resource_billing_meter_value"
        }
      },
      "required": [
        "created",
        "customer_mapping",
        "default_aggregation",
        "display_name",
        "event_name",
        "id",
        "livemode",
        "object",
        "status",
        "status_transitions",
        "updated",
        "value_settings"
      ],
      "title": "BillingMeter",
      "type": "object",
      "x-expandableFields": [
        "customer_mapping",
        "default_aggregation",
        "status_transitions",
        "value_settings"
      ],
      "x-resourceId": "billing.meter"
    },
    "billing.meter_event": {
      "description": "A billing meter event represents a customer's usage of a product. Meter events are used to bill a customer based on their usage.\nMeter events are associated with billing meters, which define the shape of the event's payload and how those events are aggregated for billing.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "event_name": {
          "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
          "maxLength": 100,
          "type": "string"
        },
        "identifier": {
          "description": "A unique identifier for the event.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.meter_event"
          ],
          "type": "string"
        },
        "payload": {
          "additionalProperties": {
            "maxLength": 100,
            "type": "string"
          },
          "description": "The payload of the event. This contains the fields corresponding to a meter's `customer_mapping.event_payload_key` (default is `stripe_customer_id`) and `value_settings.event_payload_key` (default is `value`). Read more about the [payload](https://stripe.com/docs/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).",
          "type": "object"
        },
        "timestamp": {
          "description": "The timestamp passed in when creating the event. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "created",
        "event_name",
        "identifier",
        "livemode",
        "object",
        "payload",
        "timestamp"
      ],
      "title": "BillingMeterEvent",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "billing.meter_event"
    },
    "billing.meter_event_adjustment": {
      "description": "A billing meter event adjustment is a resource that allows you to cancel a meter event. For example, you might create a billing meter event adjustment to cancel a meter event that was created in error or attached to the wrong customer.",
      "properties": {
        "cancel": {
          "description": "Specifies which event to cancel.",
          "x-nullable": true
        },
        "event_name": {
          "description": "The name of the meter event. Corresponds with the `event_name` field on a meter.",
          "maxLength": 100,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.meter_event_adjustment"
          ],
          "type": "string"
        },
        "status": {
          "description": "The meter event adjustment's status.",
          "enum": [
            "complete",
            "pending"
          ],
          "type": "string"
        },
        "type": {
          "description": "Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
          "enum": [
            "cancel"
          ],
          "type": "string"
        }
      },
      "required": [
        "event_name",
        "livemode",
        "object",
        "status",
        "type"
      ],
      "title": "BillingMeterEventAdjustment",
      "type": "object",
      "x-expandableFields": [
        "cancel"
      ],
      "x-resourceId": "billing.meter_event_adjustment"
    },
    "billing.meter_event_summary": {
      "description": "A billing meter event summary represents an aggregated view of a customer's billing meter events within a specified timeframe. It indicates how much\nusage was accrued by a customer for that period.",
      "properties": {
        "aggregated_value": {
          "description": "Aggregated value of all the events within `start_time` (inclusive) and `end_time` (inclusive). The aggregation strategy is defined on meter via `default_aggregation`.",
          "type": "number"
        },
        "end_time": {
          "description": "End timestamp for this event summary (exclusive). Must be aligned with minute boundaries.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "meter": {
          "description": "The meter associated with this event summary.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing.meter_event_summary"
          ],
          "type": "string"
        },
        "start_time": {
          "description": "Start timestamp for this event summary (inclusive). Must be aligned with minute boundaries.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "aggregated_value",
        "end_time",
        "id",
        "livemode",
        "meter",
        "object",
        "start_time"
      ],
      "title": "BillingMeterEventSummary",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "billing.meter_event_summary"
    },
    "billing_clocks_resource_status_details_advancing_status_details": {
      "description": "",
      "properties": {
        "target_frozen_time": {
          "description": "The `frozen_time` that the Test Clock is advancing towards.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "target_frozen_time"
      ],
      "title": "BillingClocksResourceStatusDetailsAdvancingStatusDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_clocks_resource_status_details_status_details": {
      "description": "",
      "properties": {
        "advancing": {
          "$ref": "#/definitions/billing_clocks_resource_status_details_advancing_status_details"
        }
      },
      "title": "BillingClocksResourceStatusDetailsStatusDetails",
      "type": "object",
      "x-expandableFields": [
        "advancing"
      ]
    },
    "billing_credit_grants_resource_amount": {
      "description": "",
      "properties": {
        "monetary": {
          "description": "The monetary amount.",
          "x-nullable": true
        },
        "type": {
          "description": "The type of this amount. We currently only support `monetary` credits.",
          "enum": [
            "monetary"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "BillingCreditGrantsResourceAmount",
      "type": "object",
      "x-expandableFields": [
        "monetary"
      ]
    },
    "billing_credit_grants_resource_applicability_config": {
      "description": "",
      "properties": {
        "scope": {
          "$ref": "#/definitions/billing_credit_grants_resource_scope"
        }
      },
      "required": [
        "scope"
      ],
      "title": "BillingCreditGrantsResourceApplicabilityConfig",
      "type": "object",
      "x-expandableFields": [
        "scope"
      ]
    },
    "billing_credit_grants_resource_balance_credit": {
      "description": "",
      "properties": {
        "amount": {
          "$ref": "#/definitions/billing_credit_grants_resource_amount"
        },
        "type": {
          "description": "The type of credit transaction.",
          "enum": [
            "credits_granted"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "type"
      ],
      "title": "BillingCreditGrantsResourceBalanceCredit",
      "type": "object",
      "x-expandableFields": [
        "amount"
      ]
    },
    "billing_credit_grants_resource_balance_credits_applied": {
      "description": "",
      "properties": {
        "invoice": {
          "description": "The invoice to which the credits were applied.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          }
        },
        "invoice_line_item": {
          "description": "The invoice line item to which the credits were applied.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "invoice",
        "invoice_line_item"
      ],
      "title": "BillingCreditGrantsResourceBalanceCreditsApplied",
      "type": "object",
      "x-expandableFields": [
        "invoice"
      ]
    },
    "billing_credit_grants_resource_balance_debit": {
      "description": "",
      "properties": {
        "amount": {
          "$ref": "#/definitions/billing_credit_grants_resource_amount"
        },
        "credits_applied": {
          "description": "Details of how the credits were applied to an invoice. Only present if `type` is `credits_applied`.",
          "x-nullable": true
        },
        "type": {
          "description": "The type of debit transaction.",
          "enum": [
            "credits_applied",
            "credits_expired",
            "credits_voided"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "type"
      ],
      "title": "BillingCreditGrantsResourceBalanceDebit",
      "type": "object",
      "x-expandableFields": [
        "amount",
        "credits_applied"
      ]
    },
    "billing_credit_grants_resource_monetary_amount": {
      "description": "",
      "properties": {
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "value": {
          "description": "A positive integer representing the amount.",
          "type": "integer"
        }
      },
      "required": [
        "currency",
        "value"
      ],
      "title": "BillingCreditGrantsResourceMonetaryAmount",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_credit_grants_resource_scope": {
      "description": "",
      "properties": {
        "price_type": {
          "description": "The price type to which credit grants can apply to. We currently only support `metered` price type.",
          "enum": [
            "metered"
          ],
          "type": "string"
        }
      },
      "required": [
        "price_type"
      ],
      "title": "BillingCreditGrantsResourceScope",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_details": {
      "description": "",
      "properties": {
        "address": {
          "description": "Billing address.",
          "x-nullable": true
        },
        "email": {
          "description": "Email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Full name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "description": "Billing phone number (including extension).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "billing_details",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "billing_meter_resource_aggregation_settings": {
      "description": "",
      "properties": {
        "formula": {
          "description": "Specifies how events are aggregated.",
          "enum": [
            "count",
            "sum"
          ],
          "type": "string"
        }
      },
      "required": [
        "formula"
      ],
      "title": "BillingMeterResourceAggregationSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_meter_resource_billing_meter_event_adjustment_cancel": {
      "description": "",
      "properties": {
        "identifier": {
          "description": "Unique identifier for the event.",
          "maxLength": 100,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "BillingMeterResourceBillingMeterEventAdjustmentCancel",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_meter_resource_billing_meter_status_transitions": {
      "description": "",
      "properties": {
        "deactivated_at": {
          "description": "The time the meter was deactivated, if any. Measured in seconds since Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "BillingMeterResourceBillingMeterStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_meter_resource_billing_meter_value": {
      "description": "",
      "properties": {
        "event_payload_key": {
          "description": "The key in the meter event payload to use as the value for this meter.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "event_payload_key"
      ],
      "title": "BillingMeterResourceBillingMeterValue",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_meter_resource_customer_mapping_settings": {
      "description": "",
      "properties": {
        "event_payload_key": {
          "description": "The key in the meter event payload to use for mapping the event to a customer.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The method for mapping a meter event to a customer.",
          "enum": [
            "by_id"
          ],
          "type": "string"
        }
      },
      "required": [
        "event_payload_key",
        "type"
      ],
      "title": "BillingMeterResourceCustomerMappingSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "billing_portal.configuration": {
      "description": "A portal configuration describes the functionality and behavior of a portal session.",
      "properties": {
        "active": {
          "description": "Whether the configuration is active and can be used to create portal sessions.",
          "type": "boolean"
        },
        "application": {
          "description": "ID of the Connect Application that created the configuration.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "business_profile": {
          "$ref": "#/definitions/portal_business_profile"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "default_return_url": {
          "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "features": {
          "$ref": "#/definitions/portal_features"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "is_default": {
          "description": "Whether the configuration is the default. If `true`, this configuration can be managed in the Dashboard and portal sessions will use this configuration unless it is overriden when creating the session.",
          "type": "boolean"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "login_page": {
          "$ref": "#/definitions/portal_login_page"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing_portal.configuration"
          ],
          "type": "string"
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "active",
        "business_profile",
        "created",
        "features",
        "id",
        "is_default",
        "livemode",
        "login_page",
        "object",
        "updated"
      ],
      "title": "PortalConfiguration",
      "type": "object",
      "x-expandableFields": [
        "application",
        "business_profile",
        "features",
        "login_page"
      ],
      "x-resourceId": "billing_portal.configuration"
    },
    "billing_portal.session": {
      "description": "The Billing customer portal is a Stripe-hosted UI for subscription and\nbilling management.\n\nA portal configuration describes the functionality and features that you\nwant to provide to your customers through the portal.\n\nA portal session describes the instantiation of the customer portal for\na particular customer. By visiting the session's URL, the customer\ncan manage their subscriptions and billing details. For security reasons,\nsessions are short-lived and will expire if the customer does not visit the URL.\nCreate sessions on-demand when customers intend to manage their subscriptions\nand billing details.\n\nRelated guide: [Customer management](/customer-management)",
      "properties": {
        "configuration": {
          "description": "The configuration used by this session, describing the features available.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/billing_portal.configuration"
              }
            ]
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "The ID of the customer for this session.",
          "maxLength": 5000,
          "type": "string"
        },
        "flow": {
          "description": "Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "locale": {
          "description": "The IETF language tag of the locale Customer Portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used.",
          "enum": [
            "auto",
            "bg",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "en-AU",
            "en-CA",
            "en-GB",
            "en-IE",
            "en-IN",
            "en-NZ",
            "en-SG",
            "es",
            "es-419",
            "et",
            "fi",
            "fil",
            "fr",
            "fr-CA",
            "hr",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "mt",
            "nb",
            "nl",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "sk",
            "sl",
            "sv",
            "th",
            "tr",
            "vi",
            "zh",
            "zh-HK",
            "zh-TW"
          ],
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "billing_portal.session"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account for which the session was created on behalf of. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "return_url": {
          "description": "The URL to redirect customers to when they click on the portal's link to return to your website.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The short-lived URL of the session that gives customers access to the customer portal.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "configuration",
        "created",
        "customer",
        "id",
        "livemode",
        "object",
        "url"
      ],
      "title": "PortalSession",
      "type": "object",
      "x-expandableFields": [
        "configuration",
        "flow"
      ],
      "x-resourceId": "billing_portal.session"
    },
    "cancellation_details": {
      "description": "",
      "properties": {
        "comment": {
          "description": "Additional comments about why the user canceled the subscription, if the subscription was canceled explicitly by the user.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "feedback": {
          "description": "The customer submitted reason for why they canceled, if the subscription was canceled explicitly by the user.",
          "enum": [
            "customer_service",
            "low_quality",
            "missing_features",
            "other",
            "switched_service",
            "too_complex",
            "too_expensive",
            "unused"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "Why this subscription was canceled.",
          "enum": [
            "cancellation_requested",
            "payment_disputed",
            "payment_failed"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CancellationDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "capability": {
      "description": "This is an object representing a capability for a Stripe account.\n\nRelated guide: [Account capabilities](https://stripe.com/docs/connect/account-capabilities)",
      "properties": {
        "account": {
          "description": "The account for which the capability enables functionality.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "future_requirements": {
          "$ref": "#/definitions/account_capability_future_requirements"
        },
        "id": {
          "description": "The identifier for the capability.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "capability"
          ],
          "type": "string"
        },
        "requested": {
          "description": "Whether the capability has been requested.",
          "type": "boolean"
        },
        "requested_at": {
          "description": "Time at which the capability was requested. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "requirements": {
          "$ref": "#/definitions/account_capability_requirements"
        },
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "active",
            "disabled",
            "inactive",
            "pending",
            "unrequested"
          ],
          "type": "string"
        }
      },
      "required": [
        "account",
        "id",
        "object",
        "requested",
        "status"
      ],
      "title": "AccountCapability",
      "type": "object",
      "x-expandableFields": [
        "account",
        "future_requirements",
        "requirements"
      ],
      "x-resourceId": "capability"
    },
    "card": {
      "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card payments with Sources](https://stripe.com/docs/sources/cards)",
      "properties": {
        "account": {
          "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "address_city": {
          "description": "City/District/Suburb/Town/Village.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_country": {
          "description": "Billing address country, if provided when creating card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_line1": {
          "description": "Address line 1 (Street address/PO Box/Company name).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_line1_check": {
          "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_line2": {
          "description": "Address line 2 (Apartment/Suite/Unit/Building).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_state": {
          "description": "State/County/Province/Region.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_zip": {
          "description": "ZIP or postal code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_zip_check": {
          "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "available_payout_methods": {
          "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
          "items": {
            "enum": [
              "instant",
              "standard"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "brand": {
          "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `Eftpos Australia`, `Girocard`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO code for currency](https://www.iso.org/iso-4217-currency-codes.html) in lowercase. Must be a [supported currency](https://docs.stripe.com/currencies). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
          "type": "string",
          "x-nullable": true
        },
        "customer": {
          "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "default_for_currency": {
          "description": "Whether this card is the default external account for its currency. This property is only available for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
          "type": "boolean",
          "x-nullable": true
        },
        "dynamic_last4": {
          "description": "(For tokenized numbers only.) The last four digits of the device account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "name": {
          "description": "Cardholder name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "networks": {
          "$ref": "#/definitions/token_card_networks"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "card"
          ],
          "type": "string"
        },
        "status": {
          "description": "For external accounts that are cards, possible values are `new` and `errored`. If a payout fails, the status is set to `errored` and [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) are stopped until account details are updated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tokenization_method": {
          "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "brand",
        "exp_month",
        "exp_year",
        "funding",
        "id",
        "last4",
        "object"
      ],
      "title": "Card",
      "type": "object",
      "x-expandableFields": [
        "account",
        "customer",
        "networks"
      ],
      "x-resourceId": "card"
    },
    "card_generated_from_payment_method_details": {
      "description": "",
      "properties": {
        "card_present": {
          "$ref": "#/definitions/payment_method_details_card_present"
        },
        "type": {
          "description": "The type of payment method transaction-specific details from the transaction that generated this `card` payment method. Always `card_present`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "card_generated_from_payment_method_details",
      "type": "object",
      "x-expandableFields": [
        "card_present"
      ]
    },
    "card_issuing_account_terms_of_service": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the account representative accepted the service agreement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user agent of the browser from which the account representative accepted the service agreement.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "CardIssuingAccountTermsOfService",
      "type": "object",
      "x-expandableFields": []
    },
    "card_mandate_payment_method_details": {
      "description": "",
      "properties": {},
      "title": "card_mandate_payment_method_details",
      "type": "object",
      "x-expandableFields": []
    },
    "cash_balance": {
      "description": "A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.",
      "properties": {
        "available": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "object",
          "x-nullable": true
        },
        "customer": {
          "description": "The ID of the customer whose cash balance this object represents.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "cash_balance"
          ],
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/customer_balance_customer_balance_settings"
        }
      },
      "required": [
        "customer",
        "livemode",
        "object",
        "settings"
      ],
      "title": "cash_balance",
      "type": "object",
      "x-expandableFields": [
        "settings"
      ],
      "x-resourceId": "cash_balance"
    },
    "charge": {
      "description": "The `Charge` object represents a single attempt to move money into your Stripe account.\nPaymentIntent confirmation is the most common way to create Charges, but transferring\nmoney to a different Stripe account through Connect also creates Charges.\nSome legacy payment flows create Charges directly, which is not recommended for new integrations.",
      "properties": {
        "amount": {
          "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
          "type": "integer"
        },
        "amount_captured": {
          "description": "Amount in cents (or local equivalent) captured (can be less than the amount attribute on the charge if a partial capture was made).",
          "type": "integer"
        },
        "amount_refunded": {
          "description": "Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect application that created the charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee": {
          "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application_fee"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.",
          "type": "integer",
          "x-nullable": true
        },
        "balance_transaction": {
          "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "billing_details": {
          "$ref": "#/definitions/billing_details"
        },
        "calculated_statement_descriptor": {
          "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined. This value only exists for card payments.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "captured": {
          "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "ID of the customer this charge is for if one exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 40000,
          "type": "string",
          "x-nullable": true
        },
        "disputed": {
          "description": "Whether the charge has been disputed.",
          "type": "boolean"
        },
        "failure_balance_transaction": {
          "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "failure_code": {
          "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/error-codes) for a list of codes).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "failure_message": {
          "description": "Message to user further explaining reason for charge failure if available.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fraud_details": {
          "description": "Information on fraud assessments for the charge.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "ID of the invoice this charge is for if one exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "charge"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "outcome": {
          "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
          "x-nullable": true
        },
        "paid": {
          "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
          "type": "boolean"
        },
        "payment_intent": {
          "description": "ID of the PaymentIntent associated with this charge, if one exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method": {
          "description": "ID of the payment method used in this charge.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_method_details": {
          "description": "Details about the payment method at the time of the transaction.",
          "x-nullable": true
        },
        "radar_options": {
          "$ref": "#/definitions/radar_radar_options"
        },
        "receipt_email": {
          "description": "This is the email address that the receipt for this charge was sent to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "receipt_number": {
          "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "receipt_url": {
          "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "refunded": {
          "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
          "type": "boolean"
        },
        "refunds": {
          "description": "A list of refunds that have been applied to the charge.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/refund"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "RefundList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ],
          "x-nullable": true
        },
        "review": {
          "description": "ID of the review associated with this charge if one exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/review"
              }
            ]
          },
          "x-nullable": true
        },
        "shipping": {
          "description": "Shipping information for the charge.",
          "x-nullable": true
        },
        "source_transfer": {
          "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://docs.stripe.com/connect/destination-charges) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/transfer"
              }
            ]
          },
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "For a non-card charge, text that appears on the customer's statement as the statement descriptor. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nFor a card charge, this value is ignored unless you don't specify a `statement_descriptor_suffix`, in which case this value is used as the suffix.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_suffix": {
          "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement. If the account has no prefix value, the suffix is concatenated to the account's statement descriptor.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "type": "string"
        },
        "transfer": {
          "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/transfer"
              }
            ]
          }
        },
        "transfer_data": {
          "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
          "x-nullable": true
        },
        "transfer_group": {
          "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "amount_captured",
        "amount_refunded",
        "billing_details",
        "captured",
        "created",
        "currency",
        "disputed",
        "id",
        "livemode",
        "metadata",
        "object",
        "paid",
        "refunded",
        "status"
      ],
      "title": "Charge",
      "type": "object",
      "x-expandableFields": [
        "application",
        "application_fee",
        "balance_transaction",
        "billing_details",
        "customer",
        "failure_balance_transaction",
        "fraud_details",
        "invoice",
        "on_behalf_of",
        "outcome",
        "payment_intent",
        "payment_method_details",
        "radar_options",
        "refunds",
        "review",
        "shipping",
        "source_transfer",
        "transfer",
        "transfer_data"
      ],
      "x-resourceId": "charge"
    },
    "charge_fraud_details": {
      "description": "",
      "properties": {
        "stripe_report": {
          "description": "Assessments from Stripe. If set, the value is `fraudulent`.",
          "maxLength": 5000,
          "type": "string"
        },
        "user_report": {
          "description": "Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "ChargeFraudDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "charge_outcome": {
      "description": "",
      "properties": {
        "network_status": {
          "description": "Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as \"pending\" on a cardholder's statement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "risk_level": {
          "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.",
          "maxLength": 5000,
          "type": "string"
        },
        "risk_score": {
          "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.",
          "type": "integer"
        },
        "rule": {
          "description": "The ID of the Radar rule that matched the payment, if applicable.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/rule"
              }
            ]
          }
        },
        "seller_message": {
          "description": "A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ChargeOutcome",
      "type": "object",
      "x-expandableFields": [
        "rule"
      ]
    },
    "charge_transfer_data": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.",
          "type": "integer",
          "x-nullable": true
        },
        "destination": {
          "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "ChargeTransferData",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "checkout.session": {
      "description": "A Checkout Session represents your customer's session as they pay for\none-time purchases or subscriptions through [Checkout](https://stripe.com/docs/payments/checkout)\nor [Payment Links](https://stripe.com/docs/payments/payment-links). We recommend creating a\nnew Session each time your customer attempts to pay.\n\nOnce payment is successful, the Checkout Session will contain a reference\nto the [Customer](https://stripe.com/docs/api/customers), and either the successful\n[PaymentIntent](https://stripe.com/docs/api/payment_intents) or an active\n[Subscription](https://stripe.com/docs/api/subscriptions).\n\nYou can create a Checkout Session on your server and redirect to its URL\nto begin Checkout.\n\nRelated guide: [Checkout quickstart](https://stripe.com/docs/checkout/quickstart)",
      "properties": {
        "after_expiration": {
          "description": "When set, provides configuration for actions to take if this Checkout Session expires.",
          "x-nullable": true
        },
        "allow_promotion_codes": {
          "description": "Enables user redeemable promotion codes.",
          "type": "boolean",
          "x-nullable": true
        },
        "amount_subtotal": {
          "description": "Total of all items before discounts or taxes are applied.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_total": {
          "description": "Total of all items after discounts and taxes are applied.",
          "type": "integer",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/payment_pages_checkout_session_automatic_tax"
        },
        "billing_address_collection": {
          "description": "Describes whether Checkout should collect the customer's billing address. Defaults to `auto`.",
          "enum": [
            "auto",
            "required"
          ],
          "type": "string",
          "x-nullable": true
        },
        "cancel_url": {
          "description": "If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "client_reference_id": {
          "description": "A unique string to reference the Checkout Session. This can be a\ncustomer ID, a cart ID, or similar, and can be used to reconcile the\nSession with your internal systems.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "client_secret": {
          "description": "Client secret to be used when initializing Stripe.js embedded checkout.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "consent": {
          "description": "Results of `consent_collection` for this session.",
          "x-nullable": true
        },
        "consent_collection": {
          "description": "When set, provides configuration for the Checkout Session to gather active consent from customers.",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string",
          "x-nullable": true
        },
        "currency_conversion": {
          "description": "Currency conversion details for [Adaptive Pricing](https://docs.stripe.com/payments/checkout/adaptive-pricing) sessions",
          "x-nullable": true
        },
        "custom_fields": {
          "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
          "items": {
            "$ref": "#/definitions/payment_pages_checkout_session_custom_fields"
          },
          "type": "array"
        },
        "custom_text": {
          "$ref": "#/definitions/payment_pages_checkout_session_custom_text"
        },
        "customer": {
          "description": "The ID of the customer for this Session.\nFor Checkout Sessions in `subscription` mode or Checkout Sessions with `customer_creation` set as `always` in `payment` mode, Checkout\nwill create a new customer object based on information provided\nduring the payment flow unless an existing customer was provided when\nthe Session was created.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "customer_creation": {
          "description": "Configure whether a Checkout Session creates a Customer when the Checkout Session completes.",
          "enum": [
            "always",
            "if_required"
          ],
          "type": "string",
          "x-nullable": true
        },
        "customer_details": {
          "description": "The customer details including the customer's tax exempt status and the customer's tax IDs. Customer's address details are not present on Sessions in `setup` mode.",
          "x-nullable": true
        },
        "customer_email": {
          "description": "If provided, this value will be used when the Customer object is created.\nIf not provided, customers will be asked to enter their email address.\nUse this parameter to prefill customer data if you already have an email\non file. To access information about the customer once the payment flow is\ncomplete, use the `customer` attribute.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The timestamp at which the Checkout Session will expire.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "ID of the invoice created by the Checkout Session, if it exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "invoice_creation": {
          "description": "Details on the state of invoice creation for the Checkout Session.",
          "x-nullable": true
        },
        "line_items": {
          "description": "The line items purchased by the customer.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "PaymentPagesCheckoutSessionListLineItems",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "locale": {
          "description": "The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used.",
          "enum": [
            "auto",
            "bg",
            "cs",
            "da",
            "de",
            "el",
            "en",
            "en-GB",
            "es",
            "es-419",
            "et",
            "fi",
            "fil",
            "fr",
            "fr-CA",
            "hr",
            "hu",
            "id",
            "it",
            "ja",
            "ko",
            "lt",
            "lv",
            "ms",
            "mt",
            "nb",
            "nl",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "sk",
            "sl",
            "sv",
            "th",
            "tr",
            "vi",
            "zh",
            "zh-HK",
            "zh-TW"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "mode": {
          "description": "The mode of the Checkout Session.",
          "enum": [
            "payment",
            "setup",
            "subscription"
          ],
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "checkout.session"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "The ID of the PaymentIntent for Checkout Sessions in `payment` mode. You can't confirm or cancel the PaymentIntent for a Checkout Session. To cancel, [expire the Checkout Session](https://stripe.com/docs/api/checkout/sessions/expire) instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_link": {
          "description": "The ID of the Payment Link that created this Session.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_link"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method_collection": {
          "description": "Configure whether a Checkout Session should collect a payment method. Defaults to `always`.",
          "enum": [
            "always",
            "if_required"
          ],
          "type": "string",
          "x-nullable": true
        },
        "payment_method_configuration_details": {
          "description": "Information about the payment method configuration used for this Checkout session if using dynamic payment methods.",
          "x-nullable": true
        },
        "payment_method_options": {
          "description": "Payment-method-specific configuration for the PaymentIntent or SetupIntent of this CheckoutSession.",
          "x-nullable": true
        },
        "payment_method_types": {
          "description": "A list of the types of payment methods (e.g. card) this Checkout\nSession is allowed to accept.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "payment_status": {
          "description": "The payment status of the Checkout Session, one of `paid`, `unpaid`, or `no_payment_required`.\nYou can use this value to decide when to fulfill your customer's order.",
          "enum": [
            "no_payment_required",
            "paid",
            "unpaid"
          ],
          "type": "string"
        },
        "phone_number_collection": {
          "$ref": "#/definitions/payment_pages_checkout_session_phone_number_collection"
        },
        "recovered_from": {
          "description": "The ID of the original expired Checkout Session that triggered the recovery flow.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "redirect_on_completion": {
          "description": "This parameter applies to `ui_mode: embedded`. Learn more about the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-success-page?payment-ui=embedded-form) of embedded sessions. Defaults to `always`.",
          "enum": [
            "always",
            "if_required",
            "never"
          ],
          "type": "string"
        },
        "return_url": {
          "description": "Applies to Checkout Sessions with `ui_mode: embedded`. The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.",
          "maxLength": 5000,
          "type": "string"
        },
        "saved_payment_method_options": {
          "description": "Controls saved payment method settings for the session. Only available in `payment` and `subscription` mode.",
          "x-nullable": true
        },
        "setup_intent": {
          "description": "The ID of the SetupIntent for Checkout Sessions in `setup` mode. You can't confirm or cancel the SetupIntent for a Checkout Session. To cancel, [expire the Checkout Session](https://stripe.com/docs/api/checkout/sessions/expire) instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "shipping_address_collection": {
          "description": "When set, provides configuration for Checkout to collect a shipping address from a customer.",
          "x-nullable": true
        },
        "shipping_cost": {
          "description": "The details of the customer cost of shipping, including the customer chosen ShippingRate.",
          "x-nullable": true
        },
        "shipping_details": {
          "description": "Shipping information for this Checkout Session.",
          "x-nullable": true
        },
        "shipping_options": {
          "description": "The shipping rate options applied to this Session.",
          "items": {
            "$ref": "#/definitions/payment_pages_checkout_session_shipping_option"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the Checkout Session, one of `open`, `complete`, or `expired`.",
          "enum": [
            "complete",
            "expired",
            "open"
          ],
          "type": "string",
          "x-nullable": true
        },
        "submit_type": {
          "description": "Describes the type of transaction being performed by Checkout in order to customize\nrelevant text on the page, such as the submit button. `submit_type` can only be\nspecified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.",
          "enum": [
            "auto",
            "book",
            "donate",
            "pay"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "subscription": {
          "description": "The ID of the subscription for Checkout Sessions in `subscription` mode.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "success_url": {
          "description": "The URL the customer will be directed to after the payment or\nsubscription creation is successful.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_id_collection": {
          "$ref": "#/definitions/payment_pages_checkout_session_tax_id_collection"
        },
        "total_details": {
          "description": "Tax and discount details for the computed total amount.",
          "x-nullable": true
        },
        "ui_mode": {
          "description": "The UI mode of the Session. Defaults to `hosted`.",
          "enum": [
            "embedded",
            "hosted"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "url": {
          "description": "The URL to the Checkout Session. Redirect customers to this URL to take them to Checkout. If you’re using [Custom Domains](https://stripe.com/docs/payments/checkout/custom-domains), the URL will use your subdomain. Otherwise, it’ll use `checkout.stripe.com.`\nThis value is only present when the session is active.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "automatic_tax",
        "created",
        "custom_fields",
        "custom_text",
        "expires_at",
        "id",
        "livemode",
        "mode",
        "object",
        "payment_method_types",
        "payment_status",
        "shipping_options"
      ],
      "title": "Session",
      "type": "object",
      "x-expandableFields": [
        "after_expiration",
        "automatic_tax",
        "consent",
        "consent_collection",
        "currency_conversion",
        "custom_fields",
        "custom_text",
        "customer",
        "customer_details",
        "invoice",
        "invoice_creation",
        "line_items",
        "payment_intent",
        "payment_link",
        "payment_method_configuration_details",
        "payment_method_options",
        "phone_number_collection",
        "saved_payment_method_options",
        "setup_intent",
        "shipping_address_collection",
        "shipping_cost",
        "shipping_details",
        "shipping_options",
        "subscription",
        "tax_id_collection",
        "total_details"
      ],
      "x-resourceId": "checkout.session"
    },
    "checkout_acss_debit_mandate_options": {
      "description": "",
      "properties": {
        "custom_mandate_url": {
          "description": "A URL for custom mandate text",
          "maxLength": 5000,
          "type": "string"
        },
        "default_for": {
          "description": "List of Stripe products where this mandate can be selected automatically. Returned when the Session is in `setup` mode.",
          "items": {
            "enum": [
              "invoice",
              "subscription"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "interval_description": {
          "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_schedule": {
          "description": "Payment schedule for the mandate.",
          "enum": [
            "combined",
            "interval",
            "sporadic"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transaction_type": {
          "description": "Transaction type of the mandate.",
          "enum": [
            "business",
            "personal"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CheckoutAcssDebitMandateOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_acss_debit_payment_method_options": {
      "description": "",
      "properties": {
        "currency": {
          "description": "Currency supported by the bank account. Returned when the Session is in `setup` mode.",
          "enum": [
            "cad",
            "usd"
          ],
          "type": "string"
        },
        "mandate_options": {
          "$ref": "#/definitions/checkout_acss_debit_mandate_options"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "CheckoutAcssDebitPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "checkout_affirm_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutAffirmPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_afterpay_clearpay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutAfterpayClearpayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_alipay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutAlipayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_amazon_pay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutAmazonPayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_au_becs_debit_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutAuBecsDebitPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_bacs_debit_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutBacsDebitPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_bancontact_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutBancontactPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_boleto_payment_method_options": {
      "description": "",
      "properties": {
        "expires_after_days": {
          "description": "The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.",
          "type": "integer"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "required": [
        "expires_after_days"
      ],
      "title": "CheckoutBoletoPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_card_installments_options": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates if installments are enabled",
          "type": "boolean"
        }
      },
      "title": "CheckoutCardInstallmentsOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_card_payment_method_options": {
      "description": "",
      "properties": {
        "installments": {
          "$ref": "#/definitions/checkout_card_installments_options"
        },
        "request_three_d_secure": {
          "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
          "enum": [
            "any",
            "automatic",
            "challenge"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "statement_descriptor_suffix_kana": {
          "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "statement_descriptor_suffix_kanji": {
          "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "request_three_d_secure"
      ],
      "title": "CheckoutCardPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "installments"
      ]
    },
    "checkout_cashapp_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutCashappPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_customer_balance_bank_transfer_payment_method_options": {
      "description": "",
      "properties": {
        "eu_bank_transfer": {
          "$ref": "#/definitions/payment_method_options_customer_balance_eu_bank_account"
        },
        "requested_address_types": {
          "description": "List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.\n\nPermitted values include: `sort_code`, `zengin`, `iban`, or `spei`.",
          "items": {
            "enum": [
              "aba",
              "iban",
              "sepa",
              "sort_code",
              "spei",
              "swift",
              "zengin"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "type": {
          "description": "The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
          "enum": [
            "eu_bank_transfer",
            "gb_bank_transfer",
            "jp_bank_transfer",
            "mx_bank_transfer",
            "us_bank_transfer"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "CheckoutCustomerBalanceBankTransferPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "eu_bank_transfer"
      ]
    },
    "checkout_customer_balance_payment_method_options": {
      "description": "",
      "properties": {
        "bank_transfer": {
          "$ref": "#/definitions/checkout_customer_balance_bank_transfer_payment_method_options"
        },
        "funding_type": {
          "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
          "enum": [
            "bank_transfer"
          ],
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutCustomerBalancePaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "bank_transfer"
      ]
    },
    "checkout_eps_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutEpsPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_fpx_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutFpxPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_giropay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutGiropayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_grab_pay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutGrabPayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_ideal_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutIdealPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_klarna_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutKlarnaPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_konbini_payment_method_options": {
      "description": "",
      "properties": {
        "expires_after_days": {
          "description": "The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.",
          "type": "integer",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutKonbiniPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_link_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutLinkPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_mobilepay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutMobilepayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_multibanco_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutMultibancoPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_oxxo_payment_method_options": {
      "description": "",
      "properties": {
        "expires_after_days": {
          "description": "The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.",
          "type": "integer"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "expires_after_days"
      ],
      "title": "CheckoutOxxoPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_p24_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutP24PaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_paynow_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutPaynowPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_paypal_payment_method_options": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "preferred_locale": {
          "description": "Preferred locale of the PayPal checkout page that the customer is redirected to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutPaypalPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_pix_payment_method_options": {
      "description": "",
      "properties": {
        "expires_after_seconds": {
          "description": "The number of seconds after which Pix payment will expire.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "CheckoutPixPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_revolut_pay_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutRevolutPayPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_sepa_debit_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutSepaDebitPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_session_payment_method_options": {
      "description": "",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/checkout_acss_debit_payment_method_options"
        },
        "affirm": {
          "$ref": "#/definitions/checkout_affirm_payment_method_options"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/checkout_afterpay_clearpay_payment_method_options"
        },
        "alipay": {
          "$ref": "#/definitions/checkout_alipay_payment_method_options"
        },
        "amazon_pay": {
          "$ref": "#/definitions/checkout_amazon_pay_payment_method_options"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/checkout_au_becs_debit_payment_method_options"
        },
        "bacs_debit": {
          "$ref": "#/definitions/checkout_bacs_debit_payment_method_options"
        },
        "bancontact": {
          "$ref": "#/definitions/checkout_bancontact_payment_method_options"
        },
        "boleto": {
          "$ref": "#/definitions/checkout_boleto_payment_method_options"
        },
        "card": {
          "$ref": "#/definitions/checkout_card_payment_method_options"
        },
        "cashapp": {
          "$ref": "#/definitions/checkout_cashapp_payment_method_options"
        },
        "customer_balance": {
          "$ref": "#/definitions/checkout_customer_balance_payment_method_options"
        },
        "eps": {
          "$ref": "#/definitions/checkout_eps_payment_method_options"
        },
        "fpx": {
          "$ref": "#/definitions/checkout_fpx_payment_method_options"
        },
        "giropay": {
          "$ref": "#/definitions/checkout_giropay_payment_method_options"
        },
        "grabpay": {
          "$ref": "#/definitions/checkout_grab_pay_payment_method_options"
        },
        "ideal": {
          "$ref": "#/definitions/checkout_ideal_payment_method_options"
        },
        "klarna": {
          "$ref": "#/definitions/checkout_klarna_payment_method_options"
        },
        "konbini": {
          "$ref": "#/definitions/checkout_konbini_payment_method_options"
        },
        "link": {
          "$ref": "#/definitions/checkout_link_payment_method_options"
        },
        "mobilepay": {
          "$ref": "#/definitions/checkout_mobilepay_payment_method_options"
        },
        "multibanco": {
          "$ref": "#/definitions/checkout_multibanco_payment_method_options"
        },
        "oxxo": {
          "$ref": "#/definitions/checkout_oxxo_payment_method_options"
        },
        "p24": {
          "$ref": "#/definitions/checkout_p24_payment_method_options"
        },
        "paynow": {
          "$ref": "#/definitions/checkout_paynow_payment_method_options"
        },
        "paypal": {
          "$ref": "#/definitions/checkout_paypal_payment_method_options"
        },
        "pix": {
          "$ref": "#/definitions/checkout_pix_payment_method_options"
        },
        "revolut_pay": {
          "$ref": "#/definitions/checkout_revolut_pay_payment_method_options"
        },
        "sepa_debit": {
          "$ref": "#/definitions/checkout_sepa_debit_payment_method_options"
        },
        "sofort": {
          "$ref": "#/definitions/checkout_sofort_payment_method_options"
        },
        "swish": {
          "$ref": "#/definitions/checkout_swish_payment_method_options"
        },
        "us_bank_account": {
          "$ref": "#/definitions/checkout_us_bank_account_payment_method_options"
        }
      },
      "title": "CheckoutSessionPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "boleto",
        "card",
        "cashapp",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "grabpay",
        "ideal",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "swish",
        "us_bank_account"
      ]
    },
    "checkout_sofort_payment_method_options": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "CheckoutSofortPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_swish_payment_method_options": {
      "description": "",
      "properties": {
        "reference": {
          "description": "The order reference that will be displayed to customers in the Swish application. Defaults to the `id` of the Payment Intent.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CheckoutSwishPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "checkout_us_bank_account_payment_method_options": {
      "description": "",
      "properties": {
        "financial_connections": {
          "$ref": "#/definitions/linked_account_options_us_bank_account"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "CheckoutUsBankAccountPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "financial_connections"
      ]
    },
    "climate.order": {
      "description": "Orders represent your intent to purchase a particular Climate product. When you create an order, the\npayment is deducted from your merchant balance.",
      "properties": {
        "amount_fees": {
          "description": "Total amount of [Frontier](https://frontierclimate.com/)'s service fees in the currency's smallest unit.",
          "type": "integer"
        },
        "amount_subtotal": {
          "description": "Total amount of the carbon removal in the currency's smallest unit.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total amount of the order including fees in the currency's smallest unit.",
          "type": "integer"
        },
        "beneficiary": {
          "$ref": "#/definitions/climate_removals_beneficiary"
        },
        "canceled_at": {
          "description": "Time at which the order was canceled. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancellation_reason": {
          "description": "Reason for the cancellation of this order.",
          "enum": [
            "expired",
            "product_unavailable",
            "requested"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "certificate": {
          "description": "For delivered orders, a URL to a delivery certificate for the order.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "confirmed_at": {
          "description": "Time at which the order was confirmed. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase, representing the currency for this order.",
          "maxLength": 5000,
          "type": "string"
        },
        "delayed_at": {
          "description": "Time at which the order's expected_delivery_year was delayed. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "delivered_at": {
          "description": "Time at which the order was delivered. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "delivery_details": {
          "description": "Details about the delivery of carbon removal for this order.",
          "items": {
            "$ref": "#/definitions/climate_removals_order_deliveries"
          },
          "type": "array"
        },
        "expected_delivery_year": {
          "description": "The year this order is expected to be delivered.",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "metric_tons": {
          "description": "Quantity of carbon removal that is included in this order.",
          "format": "decimal",
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "climate.order"
          ],
          "type": "string"
        },
        "product": {
          "description": "Unique ID for the Climate `Product` this order is purchasing.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/climate.product"
              }
            ]
          }
        },
        "product_substituted_at": {
          "description": "Time at which the order's product was substituted for a different product. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "description": "The current status of this order.",
          "enum": [
            "awaiting_funds",
            "canceled",
            "confirmed",
            "delivered",
            "open"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount_fees",
        "amount_subtotal",
        "amount_total",
        "created",
        "currency",
        "delivery_details",
        "expected_delivery_year",
        "id",
        "livemode",
        "metadata",
        "metric_tons",
        "object",
        "product",
        "status"
      ],
      "title": "ClimateRemovalsOrders",
      "type": "object",
      "x-expandableFields": [
        "beneficiary",
        "delivery_details",
        "product"
      ],
      "x-resourceId": "climate.order"
    },
    "climate.product": {
      "description": "A Climate product represents a type of carbon removal unit available for reservation.\nYou can retrieve it to see the current price and availability.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "current_prices_per_metric_ton": {
          "additionalProperties": {
            "$ref": "#/definitions/climate_removals_products_price"
          },
          "description": "Current prices for a metric ton of carbon removal in a currency's smallest unit.",
          "type": "object"
        },
        "delivery_year": {
          "description": "The year in which the carbon removal is expected to be delivered.",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object. For convenience, Climate product IDs are human-readable strings\nthat start with `climsku_`. See [carbon removal inventory](https://stripe.com/docs/climate/orders/carbon-removal-inventory)\nfor a list of available carbon removal products.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metric_tons_available": {
          "description": "The quantity of metric tons available for reservation.",
          "format": "decimal",
          "type": "string"
        },
        "name": {
          "description": "The Climate product's name.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "climate.product"
          ],
          "type": "string"
        },
        "suppliers": {
          "description": "The carbon removal suppliers that fulfill orders for this Climate product.",
          "items": {
            "$ref": "#/definitions/climate.supplier"
          },
          "type": "array"
        }
      },
      "required": [
        "created",
        "current_prices_per_metric_ton",
        "id",
        "livemode",
        "metric_tons_available",
        "name",
        "object",
        "suppliers"
      ],
      "title": "ClimateRemovalsProducts",
      "type": "object",
      "x-expandableFields": [
        "current_prices_per_metric_ton",
        "suppliers"
      ],
      "x-resourceId": "climate.product"
    },
    "climate.supplier": {
      "description": "A supplier of carbon removal.",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "info_url": {
          "description": "Link to a webpage to learn more about the supplier.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "locations": {
          "description": "The locations in which this supplier operates.",
          "items": {
            "$ref": "#/definitions/climate_removals_location"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of this carbon removal supplier.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object’s type. Objects of the same type share the same value.",
          "enum": [
            "climate.supplier"
          ],
          "type": "string"
        },
        "removal_pathway": {
          "description": "The scientific pathway used for carbon removal.",
          "enum": [
            "biomass_carbon_removal_and_storage",
            "direct_air_capture",
            "enhanced_weathering"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "id",
        "info_url",
        "livemode",
        "locations",
        "name",
        "object",
        "removal_pathway"
      ],
      "title": "ClimateRemovalsSuppliers",
      "type": "object",
      "x-expandableFields": [
        "locations"
      ],
      "x-resourceId": "climate.supplier"
    },
    "climate_removals_beneficiary": {
      "description": "",
      "properties": {
        "public_name": {
          "description": "Publicly displayable name for the end beneficiary of carbon removal.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "public_name"
      ],
      "title": "ClimateRemovalsBeneficiary",
      "type": "object",
      "x-expandableFields": []
    },
    "climate_removals_location": {
      "description": "",
      "properties": {
        "city": {
          "description": "The city where the supplier is located.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country where the supplier is located.",
          "maxLength": 5000,
          "type": "string"
        },
        "latitude": {
          "description": "The geographic latitude where the supplier is located.",
          "type": "number",
          "x-nullable": true
        },
        "longitude": {
          "description": "The geographic longitude where the supplier is located.",
          "type": "number",
          "x-nullable": true
        },
        "region": {
          "description": "The state/county/province/region where the supplier is located.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "country"
      ],
      "title": "ClimateRemovalsLocation",
      "type": "object",
      "x-expandableFields": []
    },
    "climate_removals_order_deliveries": {
      "description": "The delivery of a specified quantity of carbon for an order.",
      "properties": {
        "delivered_at": {
          "description": "Time at which the delivery occurred. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "location": {
          "description": "Specific location of this delivery.",
          "x-nullable": true
        },
        "metric_tons": {
          "description": "Quantity of carbon removal supplied by this delivery.",
          "maxLength": 5000,
          "type": "string"
        },
        "registry_url": {
          "description": "Once retired, a URL to the registry entry for the tons from this delivery.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "supplier": {
          "$ref": "#/definitions/climate.supplier"
        }
      },
      "required": [
        "delivered_at",
        "metric_tons",
        "supplier"
      ],
      "title": "ClimateRemovalsOrderDeliveries",
      "type": "object",
      "x-expandableFields": [
        "location",
        "supplier"
      ]
    },
    "climate_removals_products_price": {
      "description": "",
      "properties": {
        "amount_fees": {
          "description": "Fees for one metric ton of carbon removal in the currency's smallest unit.",
          "type": "integer"
        },
        "amount_subtotal": {
          "description": "Subtotal for one metric ton of carbon removal (excluding fees) in the currency's smallest unit.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total for one metric ton of carbon removal (including fees) in the currency's smallest unit.",
          "type": "integer"
        }
      },
      "required": [
        "amount_fees",
        "amount_subtotal",
        "amount_total"
      ],
      "title": "ClimateRemovalsProductsPrice",
      "type": "object",
      "x-expandableFields": []
    },
    "confirmation_token": {
      "description": "ConfirmationTokens help transport client side data collected by Stripe JS over\nto your server for confirming a PaymentIntent or SetupIntent. If the confirmation\nis successful, values present on the ConfirmationToken are written onto the Intent.\n\nTo learn more about how to use ConfirmationToken, visit the related guides:\n- [Finalize payments on the server](https://stripe.com/docs/payments/finalize-payments-on-the-server)\n- [Build two-step confirmation](https://stripe.com/docs/payments/build-a-two-step-confirmation).",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expires_at": {
          "description": "Time at which this ConfirmationToken expires and can no longer be used to confirm a PaymentIntent or SetupIntent.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "mandate_data": {
          "description": "Data used for generating a Mandate.",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "confirmation_token"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "ID of the PaymentIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_method_options": {
          "description": "Payment-method-specific configuration for this ConfirmationToken.",
          "x-nullable": true
        },
        "payment_method_preview": {
          "description": "Payment details collected by the Payment Element, used to create a PaymentMethod when a PaymentIntent or SetupIntent is confirmed with this ConfirmationToken.",
          "x-nullable": true
        },
        "return_url": {
          "description": "Return URL used to confirm the Intent.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this ConfirmationToken's payment method.\n\nThe presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.",
          "enum": [
            "off_session",
            "on_session"
          ],
          "type": "string",
          "x-nullable": true
        },
        "setup_intent": {
          "description": "ID of the SetupIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping": {
          "description": "Shipping information collected on this ConfirmationToken.",
          "x-nullable": true
        },
        "use_stripe_sdk": {
          "description": "Indicates whether the Stripe SDK is used to handle confirmation flow. Defaults to `true` on ConfirmationToken.",
          "type": "boolean"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "use_stripe_sdk"
      ],
      "title": "ConfirmationTokensResourceConfirmationToken",
      "type": "object",
      "x-expandableFields": [
        "mandate_data",
        "payment_method_options",
        "payment_method_preview",
        "shipping"
      ],
      "x-resourceId": "confirmation_token"
    },
    "confirmation_tokens_resource_mandate_data": {
      "description": "Data used for generating a Mandate.",
      "properties": {
        "customer_acceptance": {
          "$ref": "#/definitions/confirmation_tokens_resource_mandate_data_resource_customer_acceptance"
        }
      },
      "required": [
        "customer_acceptance"
      ],
      "title": "ConfirmationTokensResourceMandateData",
      "type": "object",
      "x-expandableFields": [
        "customer_acceptance"
      ]
    },
    "confirmation_tokens_resource_mandate_data_resource_customer_acceptance": {
      "description": "This hash contains details about the customer acceptance of the Mandate.",
      "properties": {
        "online": {
          "description": "If this is a Mandate accepted online, this hash contains details about the online acceptance.",
          "x-nullable": true
        },
        "type": {
          "description": "The type of customer acceptance information included with the Mandate.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ConfirmationTokensResourceMandateDataResourceCustomerAcceptance",
      "type": "object",
      "x-expandableFields": [
        "online"
      ]
    },
    "confirmation_tokens_resource_mandate_data_resource_customer_acceptance_resource_online": {
      "description": "This hash contains details about the online acceptance.",
      "properties": {
        "ip_address": {
          "description": "The IP address from which the Mandate was accepted by the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user agent of the browser from which the Mandate was accepted by the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "ConfirmationTokensResourceMandateDataResourceCustomerAcceptanceResourceOnline",
      "type": "object",
      "x-expandableFields": []
    },
    "confirmation_tokens_resource_payment_method_options": {
      "description": "Payment-method-specific configuration",
      "properties": {
        "card": {
          "description": "This hash contains the card payment method options.",
          "x-nullable": true
        }
      },
      "title": "ConfirmationTokensResourcePaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "card"
      ]
    },
    "confirmation_tokens_resource_payment_method_options_resource_card": {
      "description": "This hash contains the card payment method options.",
      "properties": {
        "cvc_token": {
          "description": "The `cvc_update` Token collected from the Payment Element.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "ConfirmationTokensResourcePaymentMethodOptionsResourceCard",
      "type": "object",
      "x-expandableFields": []
    },
    "confirmation_tokens_resource_payment_method_preview": {
      "description": "Details of the PaymentMethod collected by Payment Element",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/payment_method_acss_debit"
        },
        "affirm": {
          "$ref": "#/definitions/payment_method_affirm"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/payment_method_afterpay_clearpay"
        },
        "alipay": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_alipay"
        },
        "allow_redisplay": {
          "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.",
          "enum": [
            "always",
            "limited",
            "unspecified"
          ],
          "type": "string"
        },
        "amazon_pay": {
          "$ref": "#/definitions/payment_method_amazon_pay"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/payment_method_au_becs_debit"
        },
        "bacs_debit": {
          "$ref": "#/definitions/payment_method_bacs_debit"
        },
        "bancontact": {
          "$ref": "#/definitions/payment_method_bancontact"
        },
        "billing_details": {
          "$ref": "#/definitions/billing_details"
        },
        "blik": {
          "$ref": "#/definitions/payment_method_blik"
        },
        "boleto": {
          "$ref": "#/definitions/payment_method_boleto"
        },
        "card": {
          "$ref": "#/definitions/payment_method_card"
        },
        "card_present": {
          "$ref": "#/definitions/payment_method_card_present"
        },
        "cashapp": {
          "$ref": "#/definitions/payment_method_cashapp"
        },
        "customer": {
          "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          },
          "x-nullable": true
        },
        "customer_balance": {
          "$ref": "#/definitions/payment_method_customer_balance"
        },
        "eps": {
          "$ref": "#/definitions/payment_method_eps"
        },
        "fpx": {
          "$ref": "#/definitions/payment_method_fpx"
        },
        "giropay": {
          "$ref": "#/definitions/payment_method_giropay"
        },
        "grabpay": {
          "$ref": "#/definitions/payment_method_grabpay"
        },
        "ideal": {
          "$ref": "#/definitions/payment_method_ideal"
        },
        "interac_present": {
          "$ref": "#/definitions/payment_method_interac_present"
        },
        "klarna": {
          "$ref": "#/definitions/payment_method_klarna"
        },
        "konbini": {
          "$ref": "#/definitions/payment_method_konbini"
        },
        "link": {
          "$ref": "#/definitions/payment_method_link"
        },
        "mobilepay": {
          "$ref": "#/definitions/payment_method_mobilepay"
        },
        "multibanco": {
          "$ref": "#/definitions/payment_method_multibanco"
        },
        "oxxo": {
          "$ref": "#/definitions/payment_method_oxxo"
        },
        "p24": {
          "$ref": "#/definitions/payment_method_p24"
        },
        "paynow": {
          "$ref": "#/definitions/payment_method_paynow"
        },
        "paypal": {
          "$ref": "#/definitions/payment_method_paypal"
        },
        "pix": {
          "$ref": "#/definitions/payment_method_pix"
        },
        "promptpay": {
          "$ref": "#/definitions/payment_method_promptpay"
        },
        "revolut_pay": {
          "$ref": "#/definitions/payment_method_revolut_pay"
        },
        "sepa_debit": {
          "$ref": "#/definitions/payment_method_sepa_debit"
        },
        "sofort": {
          "$ref": "#/definitions/payment_method_sofort"
        },
        "swish": {
          "$ref": "#/definitions/payment_method_swish"
        },
        "twint": {
          "$ref": "#/definitions/payment_method_twint"
        },
        "type": {
          "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
          "enum": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "amazon_pay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "blik",
            "boleto",
            "card",
            "card_present",
            "cashapp",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "mobilepay",
            "multibanco",
            "oxxo",
            "p24",
            "paynow",
            "paypal",
            "pix",
            "promptpay",
            "revolut_pay",
            "sepa_debit",
            "sofort",
            "swish",
            "twint",
            "us_bank_account",
            "wechat_pay",
            "zip"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_account": {
          "$ref": "#/definitions/payment_method_us_bank_account"
        },
        "wechat_pay": {
          "$ref": "#/definitions/payment_method_wechat_pay"
        },
        "zip": {
          "$ref": "#/definitions/payment_method_zip"
        }
      },
      "required": [
        "billing_details",
        "type"
      ],
      "title": "ConfirmationTokensResourcePaymentMethodPreview",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "billing_details",
        "blik",
        "boleto",
        "card",
        "card_present",
        "cashapp",
        "customer",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "grabpay",
        "ideal",
        "interac_present",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "promptpay",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "swish",
        "twint",
        "us_bank_account",
        "wechat_pay",
        "zip"
      ]
    },
    "confirmation_tokens_resource_shipping": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "name": {
          "description": "Recipient name.",
          "maxLength": 5000,
          "type": "string"
        },
        "phone": {
          "description": "Recipient phone (including extension).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "address",
        "name"
      ],
      "title": "ConfirmationTokensResourceShipping",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "connect_account_reference": {
      "description": "",
      "properties": {
        "account": {
          "description": "The connected account being referenced when `type` is `account`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "type": {
          "description": "Type of the account referenced.",
          "enum": [
            "account",
            "self"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ConnectAccountReference",
      "type": "object",
      "x-expandableFields": [
        "account"
      ]
    },
    "connect_collection_transfer": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount transferred, in cents (or local equivalent).",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "destination": {
          "description": "ID of the account that funds are being collected for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "connect_collection_transfer"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency",
        "destination",
        "id",
        "livemode",
        "object"
      ],
      "title": "ConnectCollectionTransfer",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "connect_embedded_account_config_claim": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the embedded component is enabled.",
          "type": "boolean"
        },
        "features": {
          "$ref": "#/definitions/connect_embedded_account_features_claim"
        }
      },
      "required": [
        "enabled",
        "features"
      ],
      "title": "ConnectEmbeddedAccountConfigClaim",
      "type": "object",
      "x-expandableFields": [
        "features"
      ]
    },
    "connect_embedded_account_features_claim": {
      "description": "",
      "properties": {
        "external_account_collection": {
          "description": "Whether to allow platforms to control bank account collection for their connected accounts. This feature can only be false for custom accounts (or accounts where the platform is compliance owner). Otherwise, bank account collection is determined by compliance requirements.",
          "type": "boolean"
        }
      },
      "required": [
        "external_account_collection"
      ],
      "title": "ConnectEmbeddedAccountFeaturesClaim",
      "type": "object",
      "x-expandableFields": []
    },
    "connect_embedded_account_session_create_components": {
      "description": "",
      "properties": {
        "account_management": {
          "$ref": "#/definitions/connect_embedded_account_config_claim"
        },
        "account_onboarding": {
          "$ref": "#/definitions/connect_embedded_account_config_claim"
        },
        "balances": {
          "$ref": "#/definitions/connect_embedded_payouts_config_claim"
        },
        "documents": {
          "$ref": "#/definitions/connect_embedded_base_config_claim"
        },
        "notification_banner": {
          "$ref": "#/definitions/connect_embedded_account_config_claim"
        },
        "payment_details": {
          "$ref": "#/definitions/connect_embedded_payments_config_claim"
        },
        "payments": {
          "$ref": "#/definitions/connect_embedded_payments_config_claim"
        },
        "payouts": {
          "$ref": "#/definitions/connect_embedded_payouts_config_claim"
        },
        "payouts_list": {
          "$ref": "#/definitions/connect_embedded_base_config_claim"
        },
        "tax_registrations": {
          "$ref": "#/definitions/connect_embedded_base_config_claim"
        },
        "tax_settings": {
          "$ref": "#/definitions/connect_embedded_base_config_claim"
        }
      },
      "required": [
        "account_management",
        "account_onboarding",
        "balances",
        "documents",
        "notification_banner",
        "payment_details",
        "payments",
        "payouts",
        "payouts_list",
        "tax_registrations",
        "tax_settings"
      ],
      "title": "ConnectEmbeddedAccountSessionCreateComponents",
      "type": "object",
      "x-expandableFields": [
        "account_management",
        "account_onboarding",
        "balances",
        "documents",
        "notification_banner",
        "payment_details",
        "payments",
        "payouts",
        "payouts_list",
        "tax_registrations",
        "tax_settings"
      ]
    },
    "connect_embedded_base_config_claim": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the embedded component is enabled.",
          "type": "boolean"
        },
        "features": {
          "$ref": "#/definitions/connect_embedded_base_features"
        }
      },
      "required": [
        "enabled",
        "features"
      ],
      "title": "ConnectEmbeddedBaseConfigClaim",
      "type": "object",
      "x-expandableFields": [
        "features"
      ]
    },
    "connect_embedded_base_features": {
      "description": "",
      "properties": {},
      "title": "ConnectEmbeddedBaseFeatures",
      "type": "object",
      "x-expandableFields": []
    },
    "connect_embedded_payments_config_claim": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the embedded component is enabled.",
          "type": "boolean"
        },
        "features": {
          "$ref": "#/definitions/connect_embedded_payments_features"
        }
      },
      "required": [
        "enabled",
        "features"
      ],
      "title": "ConnectEmbeddedPaymentsConfigClaim",
      "type": "object",
      "x-expandableFields": [
        "features"
      ]
    },
    "connect_embedded_payments_features": {
      "description": "",
      "properties": {
        "capture_payments": {
          "description": "Whether to allow capturing and cancelling payment intents. This is `true` by default.",
          "type": "boolean"
        },
        "destination_on_behalf_of_charge_management": {
          "description": "Whether to allow connected accounts to manage destination charges that are created on behalf of them. This is `false` by default.",
          "type": "boolean"
        },
        "dispute_management": {
          "description": "Whether to allow responding to disputes, including submitting evidence and accepting disputes. This is `true` by default.",
          "type": "boolean"
        },
        "refund_management": {
          "description": "Whether to allow sending refunds. This is `true` by default.",
          "type": "boolean"
        }
      },
      "required": [
        "capture_payments",
        "destination_on_behalf_of_charge_management",
        "dispute_management",
        "refund_management"
      ],
      "title": "ConnectEmbeddedPaymentsFeatures",
      "type": "object",
      "x-expandableFields": []
    },
    "connect_embedded_payouts_config_claim": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the embedded component is enabled.",
          "type": "boolean"
        },
        "features": {
          "$ref": "#/definitions/connect_embedded_payouts_features"
        }
      },
      "required": [
        "enabled",
        "features"
      ],
      "title": "ConnectEmbeddedPayoutsConfigClaim",
      "type": "object",
      "x-expandableFields": [
        "features"
      ]
    },
    "connect_embedded_payouts_features": {
      "description": "",
      "properties": {
        "edit_payout_schedule": {
          "description": "Whether to allow payout schedule to be changed. Default `true` when Stripe owns Loss Liability, default `false` otherwise.",
          "type": "boolean"
        },
        "external_account_collection": {
          "description": "Whether to allow platforms to control bank account collection for their connected accounts. This feature can only be false for custom accounts (or accounts where the platform is compliance owner). Otherwise, bank account collection is determined by compliance requirements.",
          "type": "boolean"
        },
        "instant_payouts": {
          "description": "Whether to allow creation of instant payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.",
          "type": "boolean"
        },
        "standard_payouts": {
          "description": "Whether to allow creation of standard payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.",
          "type": "boolean"
        }
      },
      "required": [
        "edit_payout_schedule",
        "external_account_collection",
        "instant_payouts",
        "standard_payouts"
      ],
      "title": "ConnectEmbeddedPayoutsFeatures",
      "type": "object",
      "x-expandableFields": []
    },
    "country_spec": {
      "description": "Stripe needs to collect certain pieces of information about each account\ncreated. These requirements can differ depending on the account's country. The\nCountry Specs API makes these rules available to your integration.\n\nYou can also view the information from this API call as [an online\nguide](/docs/connect/required-verification-information).",
      "properties": {
        "default_currency": {
          "description": "The default currency for this country. This applies to both payment methods and bank accounts.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object. Represented as the ISO country code for this country.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "country_spec"
          ],
          "type": "string"
        },
        "supported_bank_account_currencies": {
          "additionalProperties": {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "description": "Currencies that can be accepted in the specific country (for transfers).",
          "type": "object"
        },
        "supported_payment_currencies": {
          "description": "Currencies that can be accepted in the specified country (for payments).",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "supported_payment_methods": {
          "description": "Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges).",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "supported_transfer_countries": {
          "description": "Countries that can accept transfers from the specified country.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "verification_fields": {
          "$ref": "#/definitions/country_spec_verification_fields"
        }
      },
      "required": [
        "default_currency",
        "id",
        "object",
        "supported_bank_account_currencies",
        "supported_payment_currencies",
        "supported_payment_methods",
        "supported_transfer_countries",
        "verification_fields"
      ],
      "title": "CountrySpec",
      "type": "object",
      "x-expandableFields": [
        "verification_fields"
      ],
      "x-resourceId": "country_spec"
    },
    "country_spec_verification_field_details": {
      "description": "",
      "properties": {
        "additional": {
          "description": "Additional fields which are only required for some users.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "minimum": {
          "description": "Fields which every account must eventually provide.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "additional",
        "minimum"
      ],
      "title": "CountrySpecVerificationFieldDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "country_spec_verification_fields": {
      "description": "",
      "properties": {
        "company": {
          "$ref": "#/definitions/country_spec_verification_field_details"
        },
        "individual": {
          "$ref": "#/definitions/country_spec_verification_field_details"
        }
      },
      "required": [
        "company",
        "individual"
      ],
      "title": "CountrySpecVerificationFields",
      "type": "object",
      "x-expandableFields": [
        "company",
        "individual"
      ]
    },
    "coupon": {
      "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
      "properties": {
        "amount_off": {
          "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
          "type": "integer",
          "x-nullable": true
        },
        "applies_to": {
          "$ref": "#/definitions/coupon_applies_to"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
          "type": "string",
          "x-nullable": true
        },
        "currency_options": {
          "additionalProperties": {
            "$ref": "#/definitions/coupon_currency_option"
          },
          "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
          "type": "object"
        },
        "duration": {
          "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
          "enum": [
            "forever",
            "once",
            "repeating"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "duration_in_months": {
          "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "max_redemptions": {
          "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
          "type": "integer",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "coupon"
          ],
          "type": "string"
        },
        "percent_off": {
          "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or local equivalent)50 instead.",
          "type": "number",
          "x-nullable": true
        },
        "redeem_by": {
          "description": "Date after which the coupon can no longer be redeemed.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "times_redeemed": {
          "description": "Number of times this coupon has been applied to a customer.",
          "type": "integer"
        },
        "valid": {
          "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
          "type": "boolean"
        }
      },
      "required": [
        "created",
        "duration",
        "id",
        "livemode",
        "object",
        "times_redeemed",
        "valid"
      ],
      "title": "Coupon",
      "type": "object",
      "x-expandableFields": [
        "applies_to",
        "currency_options"
      ],
      "x-resourceId": "coupon"
    },
    "coupon_applies_to": {
      "description": "",
      "properties": {
        "products": {
          "description": "A list of product IDs this coupon applies to",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "products"
      ],
      "title": "CouponAppliesTo",
      "type": "object",
      "x-expandableFields": []
    },
    "coupon_currency_option": {
      "description": "",
      "properties": {
        "amount_off": {
          "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
          "type": "integer"
        }
      },
      "required": [
        "amount_off"
      ],
      "title": "CouponCurrencyOption",
      "type": "object",
      "x-expandableFields": []
    },
    "credit_balance": {
      "description": "",
      "properties": {
        "available_balance": {
          "$ref": "#/definitions/billing_credit_grants_resource_amount"
        },
        "ledger_balance": {
          "$ref": "#/definitions/billing_credit_grants_resource_amount"
        }
      },
      "required": [
        "available_balance",
        "ledger_balance"
      ],
      "title": "CreditBalance",
      "type": "object",
      "x-expandableFields": [
        "available_balance",
        "ledger_balance"
      ]
    },
    "credit_note": {
      "description": "Issue a credit note to adjust an invoice's amount after the invoice is finalized.\n\nRelated guide: [Credit notes](https://stripe.com/docs/billing/invoices/credit-notes)",
      "properties": {
        "amount": {
          "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax.",
          "type": "integer"
        },
        "amount_shipping": {
          "description": "This is the sum of all the shipping amounts.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "ID of the customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "customer_balance_transaction": {
          "description": "Customer balance transaction related to this credit note.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer_balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "discount_amount": {
          "description": "The integer amount in cents (or local equivalent) representing the total amount of discount that was credited.",
          "type": "integer"
        },
        "discount_amounts": {
          "description": "The aggregate amounts calculated per discount for all line items.",
          "items": {
            "$ref": "#/definitions/discounts_resource_discount_amount"
          },
          "type": "array"
        },
        "effective_at": {
          "description": "The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "ID of the invoice.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          }
        },
        "lines": {
          "description": "Line items that make up the credit note",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/credit_note_line_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "CreditNoteLinesList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "memo": {
          "description": "Customer-facing text that appears on the credit note PDF.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "number": {
          "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "credit_note"
          ],
          "type": "string"
        },
        "out_of_band_amount": {
          "description": "Amount that was credited outside of Stripe.",
          "type": "integer",
          "x-nullable": true
        },
        "pdf": {
          "description": "The link to download the PDF of the credit note.",
          "maxLength": 5000,
          "type": "string"
        },
        "pretax_credit_amounts": {
          "items": {
            "$ref": "#/definitions/credit_notes_pretax_credit_amount"
          },
          "type": "array"
        },
        "reason": {
          "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
          "enum": [
            "duplicate",
            "fraudulent",
            "order_change",
            "product_unsatisfactory"
          ],
          "type": "string",
          "x-nullable": true
        },
        "refund": {
          "description": "Refund related to this credit note.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/refund"
              }
            ]
          },
          "x-nullable": true
        },
        "shipping_cost": {
          "description": "The details of the cost of shipping, including the ShippingRate applied to the invoice.",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).",
          "enum": [
            "issued",
            "void"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "subtotal": {
          "description": "The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding exclusive tax and invoice level discounts.",
          "type": "integer"
        },
        "subtotal_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding all tax and invoice level discounts.",
          "type": "integer",
          "x-nullable": true
        },
        "tax_amounts": {
          "description": "The aggregate amounts calculated per tax rate for all line items.",
          "items": {
            "$ref": "#/definitions/credit_note_tax_amount"
          },
          "type": "array"
        },
        "total": {
          "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax and all discount.",
          "type": "integer"
        },
        "total_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the total amount of the credit note, excluding tax, but including discounts.",
          "type": "integer",
          "x-nullable": true
        },
        "type": {
          "description": "Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.",
          "enum": [
            "post_payment",
            "pre_payment"
          ],
          "type": "string"
        },
        "voided_at": {
          "description": "The time that the credit note was voided.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "amount_shipping",
        "created",
        "currency",
        "customer",
        "discount_amount",
        "discount_amounts",
        "id",
        "invoice",
        "lines",
        "livemode",
        "number",
        "object",
        "pdf",
        "status",
        "subtotal",
        "tax_amounts",
        "total",
        "type"
      ],
      "title": "CreditNote",
      "type": "object",
      "x-expandableFields": [
        "customer",
        "customer_balance_transaction",
        "discount_amounts",
        "invoice",
        "lines",
        "pretax_credit_amounts",
        "refund",
        "shipping_cost",
        "tax_amounts"
      ],
      "x-resourceId": "credit_note"
    },
    "credit_note_line_item": {
      "description": "The credit note line item object",
      "properties": {
        "amount": {
          "description": "The integer amount in cents (or local equivalent) representing the gross amount being credited for this line item, excluding (exclusive) tax and discounts.",
          "type": "integer"
        },
        "amount_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the amount being credited for this line item, excluding all tax and discounts.",
          "type": "integer",
          "x-nullable": true
        },
        "description": {
          "description": "Description of the item being credited.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discount_amount": {
          "description": "The integer amount in cents (or local equivalent) representing the discount being credited for this line item.",
          "type": "integer"
        },
        "discount_amounts": {
          "description": "The amount of discount calculated per discount for this line item",
          "items": {
            "$ref": "#/definitions/discounts_resource_discount_amount"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice_line_item": {
          "description": "ID of the invoice line item being credited",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "credit_note_line_item"
          ],
          "type": "string"
        },
        "pretax_credit_amounts": {
          "items": {
            "$ref": "#/definitions/credit_notes_pretax_credit_amount"
          },
          "type": "array"
        },
        "quantity": {
          "description": "The number of units of product being credited.",
          "type": "integer",
          "x-nullable": true
        },
        "tax_amounts": {
          "description": "The amount of tax calculated per tax rate for this line item",
          "items": {
            "$ref": "#/definitions/credit_note_tax_amount"
          },
          "type": "array"
        },
        "tax_rates": {
          "description": "The tax rates which apply to the line item.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of the credit note line item, one of `invoice_line_item` or `custom_line_item`. When the type is `invoice_line_item` there is an additional `invoice_line_item` property on the resource the value of which is the id of the credited line item on the invoice.",
          "enum": [
            "custom_line_item",
            "invoice_line_item"
          ],
          "type": "string"
        },
        "unit_amount": {
          "description": "The cost of each unit of product being credited.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "unit_amount_excluding_tax": {
          "description": "The amount in cents (or local equivalent) representing the unit amount being credited for this line item, excluding all tax and discounts.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "discount_amount",
        "discount_amounts",
        "id",
        "livemode",
        "object",
        "tax_amounts",
        "tax_rates",
        "type"
      ],
      "title": "CreditNoteLineItem",
      "type": "object",
      "x-expandableFields": [
        "discount_amounts",
        "pretax_credit_amounts",
        "tax_amounts",
        "tax_rates"
      ],
      "x-resourceId": "credit_note_line_item"
    },
    "credit_note_tax_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent), of the tax.",
          "type": "integer"
        },
        "inclusive": {
          "description": "Whether this tax amount is inclusive or exclusive.",
          "type": "boolean"
        },
        "tax_rate": {
          "description": "The tax rate that was applied to get this tax amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/tax_rate"
              }
            ]
          }
        },
        "taxability_reason": {
          "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
          "enum": [
            "customer_exempt",
            "not_collecting",
            "not_subject_to_tax",
            "not_supported",
            "portion_product_exempt",
            "portion_reduced_rated",
            "portion_standard_rated",
            "product_exempt",
            "product_exempt_holiday",
            "proportionally_rated",
            "reduced_rated",
            "reverse_charge",
            "standard_rated",
            "taxable_basis_reduced",
            "zero_rated"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "taxable_amount": {
          "description": "The amount on which tax is calculated, in cents (or local equivalent).",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "inclusive",
        "tax_rate"
      ],
      "title": "CreditNoteTaxAmount",
      "type": "object",
      "x-expandableFields": [
        "tax_rate"
      ]
    },
    "credit_notes_pretax_credit_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent), of the pretax credit amount.",
          "type": "integer"
        },
        "credit_balance_transaction": {
          "description": "The credit balance transaction that was applied to get this pretax credit amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/billing.credit_balance_transaction"
              }
            ]
          }
        },
        "discount": {
          "description": "The discount that was applied to get this pretax credit amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/discount"
              },
              {
                "$ref": "#/definitions/deleted_discount"
              }
            ]
          }
        },
        "type": {
          "description": "Type of the pretax credit amount referenced.",
          "enum": [
            "credit_balance_transaction",
            "discount"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "type"
      ],
      "title": "CreditNotesPretaxCreditAmount",
      "type": "object",
      "x-expandableFields": [
        "credit_balance_transaction",
        "discount"
      ]
    },
    "currency_option": {
      "description": "",
      "properties": {
        "custom_unit_amount": {
          "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
          "x-nullable": true
        },
        "tax_behavior": {
          "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
          "enum": [
            "exclusive",
            "inclusive",
            "unspecified"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tiers": {
          "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
          "items": {
            "$ref": "#/definitions/price_tier"
          },
          "type": "array"
        },
        "unit_amount": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CurrencyOption",
      "type": "object",
      "x-expandableFields": [
        "custom_unit_amount",
        "tiers"
      ]
    },
    "custom_unit_amount": {
      "description": "",
      "properties": {
        "maximum": {
          "description": "The maximum unit amount the customer can specify for this item.",
          "type": "integer",
          "x-nullable": true
        },
        "minimum": {
          "description": "The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.",
          "type": "integer",
          "x-nullable": true
        },
        "preset": {
          "description": "The starting unit amount which can be updated by the customer.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "CustomUnitAmount",
      "type": "object",
      "x-expandableFields": []
    },
    "customer": {
      "description": "This object represents a customer of your business. Use it to [create recurring charges](https://stripe.com/docs/invoicing/customer), [save payment](https://stripe.com/docs/payments/save-during-payment) and contact information,\nand track payments that belong to the same customer.",
      "properties": {
        "address": {
          "description": "The customer's address.",
          "x-nullable": true
        },
        "balance": {
          "description": "The current balance, if any, that's stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that's added to their next invoice. The balance only considers amounts that Stripe hasn't successfully applied to any invoice. It doesn't reflect unpaid invoices. This balance is only taken into account after invoices finalize.",
          "type": "integer"
        },
        "cash_balance": {
          "description": "The current funds being held by Stripe on behalf of the customer. You can apply these funds towards payment intents when the source is \"cash_balance\". The `settings[reconciliation_mode]` field describes if these funds apply to these payment intents manually or automatically.",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "default_source": {
          "description": "ID of the default payment source for the customer.\n\nIf you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/bank_account"
              },
              {
                "$ref": "#/definitions/card"
              },
              {
                "$ref": "#/definitions/source"
              }
            ]
          },
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "delinquent": {
          "description": "Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.\n\nIf an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.\n\nIf you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.",
          "type": "boolean",
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discount": {
          "description": "Describes the current discount active on the customer, if there is one.",
          "x-nullable": true
        },
        "email": {
          "description": "The customer's email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice_credit_balance": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "The current multi-currency balances, if any, that's stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that's added to their next invoice denominated in that currency. These balances don't apply to unpaid invoices. They solely track amounts that Stripe hasn't successfully applied to any invoice. Stripe only applies a balance in a specific currency to an invoice after that invoice (which is in the same currency) finalizes.",
          "type": "object"
        },
        "invoice_prefix": {
          "description": "The prefix for the customer used to generate unique invoice numbers.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_settings": {
          "$ref": "#/definitions/invoice_setting_customer_setting"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "The customer's full name or business name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "next_invoice_sequence": {
          "description": "The suffix of the customer's next invoice number (for example, 0001). When the account uses account level sequencing, this parameter is ignored in API requests and the field omitted in API responses.",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "customer"
          ],
          "type": "string"
        },
        "phone": {
          "description": "The customer's phone number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_locales": {
          "description": "The customer's preferred locales (languages), ordered by preference.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "shipping": {
          "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
          "x-nullable": true
        },
        "sources": {
          "description": "The customer's payment sources, if any.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "title": "Polymorphic",
                "x-stripeBypassValidation": true
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "ApmsSourcesSourceList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "subscriptions": {
          "description": "The customer's current subscriptions, if any.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/subscription"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "SubscriptionList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "tax": {
          "$ref": "#/definitions/customer_tax"
        },
        "tax_exempt": {
          "description": "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the following text: **\"Reverse charge\"**.",
          "enum": [
            "exempt",
            "none",
            "reverse"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tax_ids": {
          "description": "The customer's tax IDs.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/tax_id"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "TaxIDsList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "test_clock": {
          "description": "ID of the test clock that this customer belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object"
      ],
      "title": "Customer",
      "type": "object",
      "x-expandableFields": [
        "address",
        "cash_balance",
        "default_source",
        "discount",
        "invoice_settings",
        "shipping",
        "sources",
        "subscriptions",
        "tax",
        "tax_ids",
        "test_clock"
      ],
      "x-resourceId": "customer"
    },
    "customer_acceptance": {
      "description": "",
      "properties": {
        "accepted_at": {
          "description": "The time that the customer accepts the mandate.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "offline": {
          "$ref": "#/definitions/offline_acceptance"
        },
        "online": {
          "$ref": "#/definitions/online_acceptance"
        },
        "type": {
          "description": "The mandate includes the type of customer acceptance information, such as: `online` or `offline`.",
          "enum": [
            "offline",
            "online"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "customer_acceptance",
      "type": "object",
      "x-expandableFields": [
        "offline",
        "online"
      ]
    },
    "customer_balance_customer_balance_settings": {
      "description": "",
      "properties": {
        "reconciliation_mode": {
          "description": "The configuration for how funds that land in the customer cash balance are reconciled.",
          "enum": [
            "automatic",
            "manual"
          ],
          "type": "string"
        },
        "using_merchant_default": {
          "description": "A flag to indicate if reconciliation mode returned is the user's default or is specific to this customer cash balance",
          "type": "boolean"
        }
      },
      "required": [
        "reconciliation_mode",
        "using_merchant_default"
      ],
      "title": "CustomerBalanceCustomerBalanceSettings",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft": {
      "description": "",
      "properties": {
        "balance_transaction": {
          "description": "The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds taken out of your Stripe balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          }
        },
        "linked_transaction": {
          "description": "The [Cash Balance Transaction](https://stripe.com/docs/api/cash_balance_transactions/object) that brought the customer balance negative, triggering the clawback of funds.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer_cash_balance_transaction"
              }
            ]
          }
        }
      },
      "required": [
        "balance_transaction",
        "linked_transaction"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraft",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "linked_transaction"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction": {
      "description": "",
      "properties": {
        "payment_intent": {
          "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were applied to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        }
      },
      "required": [
        "payment_intent"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransaction",
      "type": "object",
      "x-expandableFields": [
        "payment_intent"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction": {
      "description": "",
      "properties": {
        "bank_transfer": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer"
        }
      },
      "required": [
        "bank_transfer"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransaction",
      "type": "object",
      "x-expandableFields": [
        "bank_transfer"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer": {
      "description": "",
      "properties": {
        "eu_bank_transfer": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer"
        },
        "gb_bank_transfer": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer"
        },
        "jp_bank_transfer": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer"
        },
        "reference": {
          "description": "The user-supplied reference field on the bank transfer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The funding method type used to fund the customer balance. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
          "enum": [
            "eu_bank_transfer",
            "gb_bank_transfer",
            "jp_bank_transfer",
            "mx_bank_transfer",
            "us_bank_transfer"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_transfer": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer"
        }
      },
      "required": [
        "type"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransfer",
      "type": "object",
      "x-expandableFields": [
        "eu_bank_transfer",
        "gb_bank_transfer",
        "jp_bank_transfer",
        "us_bank_transfer"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer": {
      "description": "",
      "properties": {
        "bic": {
          "description": "The BIC of the bank of the sender of the funding.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "iban_last4": {
          "description": "The last 4 digits of the IBAN of the sender of the funding.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sender_name": {
          "description": "The full name of the sender, as supplied by the sending bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceEuBankTransfer",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer": {
      "description": "",
      "properties": {
        "account_number_last4": {
          "description": "The last 4 digits of the account number of the sender of the funding.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sender_name": {
          "description": "The full name of the sender, as supplied by the sending bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sort_code": {
          "description": "The sort code of the bank of the sender of the funding",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceGbBankTransfer",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer": {
      "description": "",
      "properties": {
        "sender_bank": {
          "description": "The name of the bank of the sender of the funding.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sender_branch": {
          "description": "The name of the bank branch of the sender of the funding.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sender_name": {
          "description": "The full name of the sender, as supplied by the sending bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceJpBankTransfer",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer": {
      "description": "",
      "properties": {
        "network": {
          "description": "The banking network used for this funding.",
          "enum": [
            "ach",
            "domestic_wire_us",
            "swift"
          ],
          "type": "string"
        },
        "sender_name": {
          "description": "The full name of the sender, as supplied by the sending bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransfer",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction": {
      "description": "",
      "properties": {
        "refund": {
          "description": "The [Refund](https://stripe.com/docs/api/refunds/object) that moved these funds into the customer's cash balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/refund"
              }
            ]
          }
        }
      },
      "required": [
        "refund"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransaction",
      "type": "object",
      "x-expandableFields": [
        "refund"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance": {
      "description": "",
      "properties": {
        "balance_transaction": {
          "description": "The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds transferred to your Stripe balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          }
        }
      },
      "required": [
        "balance_transaction"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceTransferredToBalance",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction"
      ]
    },
    "customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction": {
      "description": "",
      "properties": {
        "payment_intent": {
          "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were unapplied from.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        }
      },
      "required": [
        "payment_intent"
      ],
      "title": "CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransaction",
      "type": "object",
      "x-expandableFields": [
        "payment_intent"
      ]
    },
    "customer_balance_transaction": {
      "description": "Each customer has a [Balance](https://stripe.com/docs/api/customers/object#customer_object-balance) value,\nwhich denotes a debit or credit that's automatically applied to their next invoice upon finalization.\nYou may modify the value directly by using the [update customer API](https://stripe.com/docs/api/customers/update),\nor by creating a Customer Balance Transaction, which increments or decrements the customer's `balance` by the specified `amount`.\n\nRelated guide: [Customer balance](https://stripe.com/docs/billing/customer/balance)",
      "properties": {
        "amount": {
          "description": "The amount of the transaction. A negative value is a credit for the customer's balance, and a positive value is a debit to the customer's `balance`.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "credit_note": {
          "description": "The ID of the credit note (if any) related to the transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/credit_note"
              }
            ]
          },
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "The ID of the customer the transaction belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          }
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "ending_balance": {
          "description": "The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The ID of the invoice (if any) related to the transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "customer_balance_transaction"
          ],
          "type": "string"
        },
        "type": {
          "description": "Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`, `initial`, `invoice_overpaid`, `invoice_too_large`, `invoice_too_small`, `unspent_receiver_credit`, or `unapplied_from_invoice`. See the [Customer Balance page](https://stripe.com/docs/billing/customer/balance#types) to learn more about transaction types.",
          "enum": [
            "adjustment",
            "applied_to_invoice",
            "credit_note",
            "initial",
            "invoice_overpaid",
            "invoice_too_large",
            "invoice_too_small",
            "migration",
            "unapplied_from_invoice",
            "unspent_receiver_credit"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "customer",
        "ending_balance",
        "id",
        "livemode",
        "object",
        "type"
      ],
      "title": "CustomerBalanceTransaction",
      "type": "object",
      "x-expandableFields": [
        "credit_note",
        "customer",
        "invoice"
      ],
      "x-resourceId": "customer_balance_transaction"
    },
    "customer_cash_balance_transaction": {
      "description": "Customers with certain payments enabled have a cash balance, representing funds that were paid\nby the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions\nrepresent when funds are moved into or out of this balance. This includes funding by the customer, allocation\nto payments, and refunds to the customer.",
      "properties": {
        "adjusted_for_overdraft": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft"
        },
        "applied_to_payment": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "customer": {
          "description": "The customer whose available cash balance changed as a result of this transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          }
        },
        "ending_balance": {
          "description": "The total available cash balance for the specified currency after this transaction was applied. Represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "funded": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_funded_transaction"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "net_amount": {
          "description": "The amount by which the cash balance changed, represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). A positive value represents funds being added to the cash balance, a negative value represents funds being removed from the cash balance.",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "customer_cash_balance_transaction"
          ],
          "type": "string"
        },
        "refunded_from_payment": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction"
        },
        "transferred_to_balance": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance"
        },
        "type": {
          "description": "The type of the cash balance transaction. New types may be added in future. See [Customer Balance](https://stripe.com/docs/payments/customer-balance#types) to learn more about these types.",
          "enum": [
            "adjusted_for_overdraft",
            "applied_to_payment",
            "funded",
            "funding_reversed",
            "refunded_from_payment",
            "return_canceled",
            "return_initiated",
            "transferred_to_balance",
            "unapplied_from_payment"
          ],
          "type": "string"
        },
        "unapplied_from_payment": {
          "$ref": "#/definitions/customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction"
        }
      },
      "required": [
        "created",
        "currency",
        "customer",
        "ending_balance",
        "id",
        "livemode",
        "net_amount",
        "object",
        "type"
      ],
      "title": "CustomerCashBalanceTransaction",
      "type": "object",
      "x-expandableFields": [
        "adjusted_for_overdraft",
        "applied_to_payment",
        "customer",
        "funded",
        "refunded_from_payment",
        "transferred_to_balance",
        "unapplied_from_payment"
      ],
      "x-resourceId": "customer_cash_balance_transaction"
    },
    "customer_session": {
      "description": "A Customer Session allows you to grant Stripe's frontend SDKs (like Stripe.js) client-side access\ncontrol over a Customer.\n\nRelated guides: [Customer Session with the Payment Element](/payments/accept-a-payment-deferred?platform=web&type=payment#save-payment-methods),\n[Customer Session with the Pricing Table](/payments/checkout/pricing-table#customer-session),\n[Customer Session with the Buy Button](/payment-links/buy-button#pass-an-existing-customer).",
      "properties": {
        "components": {
          "$ref": "#/definitions/customer_session_resource_components"
        },
        "client_secret": {
          "description": "The client secret of this Customer Session. Used on the client to set up secure access to the given `customer`.\n\nThe client secret can be used to provide access to `customer` from your frontend. It should not be stored, logged, or exposed to anyone other than the relevant customer. Make sure that you have TLS enabled on any page that includes the client secret.",
          "maxLength": 5000,
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "The Customer the Customer Session was created for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          }
        },
        "expires_at": {
          "description": "The timestamp at which this Customer Session will expire.",
          "format": "unix-time",
          "type": "integer"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "customer_session"
          ],
          "type": "string"
        }
      },
      "required": [
        "client_secret",
        "created",
        "customer",
        "expires_at",
        "livemode",
        "object"
      ],
      "title": "CustomerSessionResourceCustomerSession",
      "type": "object",
      "x-expandableFields": [
        "components",
        "customer"
      ],
      "x-resourceId": "customer_session"
    },
    "customer_session_resource_components": {
      "description": "Configuration for the components supported by this Customer Session.",
      "properties": {
        "buy_button": {
          "$ref": "#/definitions/customer_session_resource_components_resource_buy_button"
        },
        "payment_element": {
          "$ref": "#/definitions/customer_session_resource_components_resource_payment_element"
        },
        "pricing_table": {
          "$ref": "#/definitions/customer_session_resource_components_resource_pricing_table"
        }
      },
      "required": [
        "buy_button",
        "payment_element",
        "pricing_table"
      ],
      "title": "CustomerSessionResourceComponents",
      "type": "object",
      "x-expandableFields": [
        "buy_button",
        "payment_element",
        "pricing_table"
      ]
    },
    "customer_session_resource_components_resource_buy_button": {
      "description": "This hash contains whether the buy button is enabled.",
      "properties": {
        "enabled": {
          "description": "Whether the buy button is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "CustomerSessionResourceComponentsResourceBuyButton",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_session_resource_components_resource_payment_element": {
      "description": "This hash contains whether the Payment Element is enabled and the features it supports.",
      "properties": {
        "enabled": {
          "description": "Whether the Payment Element is enabled.",
          "type": "boolean"
        },
        "features": {
          "description": "This hash defines whether the Payment Element supports certain features.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "CustomerSessionResourceComponentsResourcePaymentElement",
      "type": "object",
      "x-expandableFields": [
        "features"
      ]
    },
    "customer_session_resource_components_resource_payment_element_resource_features": {
      "description": "This hash contains the features the Payment Element supports.",
      "properties": {
        "payment_method_allow_redisplay_filters": {
          "description": "A list of [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) values that controls which saved payment methods the Payment Element displays by filtering to only show payment methods with an `allow_redisplay` value that is present in this list.\n\nIf not specified, defaults to [\"always\"]. In order to display all saved payment methods, specify [\"always\", \"limited\", \"unspecified\"].",
          "items": {
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "payment_method_redisplay": {
          "description": "Controls whether or not the Payment Element shows saved payment methods. This parameter defaults to `disabled`.",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "payment_method_redisplay_limit": {
          "description": "Determines the max number of saved payment methods for the Payment Element to display. This parameter defaults to `3`.",
          "type": "integer",
          "x-nullable": true
        },
        "payment_method_remove": {
          "description": "Controls whether the Payment Element displays the option to remove a saved payment method. This parameter defaults to `disabled`.\n\nAllowing buyers to remove their saved payment methods impacts subscriptions that depend on that payment method. Removing the payment method detaches the [`customer` object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer) from that [PaymentMethod](https://docs.stripe.com/api/payment_methods).",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "payment_method_save": {
          "description": "Controls whether the Payment Element displays a checkbox offering to save a new payment method. This parameter defaults to `disabled`.\n\nIf a customer checks the box, the [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) value on the PaymentMethod is set to `'always'` at confirmation time. For PaymentIntents, the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value is also set to the value defined in `payment_method_save_usage`.",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "payment_method_save_usage": {
          "description": "When using PaymentIntents and the customer checks the save checkbox, this field determines the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value used to confirm the PaymentIntent.\n\nWhen using SetupIntents, directly configure the [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage) value on SetupIntent creation.",
          "enum": [
            "off_session",
            "on_session"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "payment_method_allow_redisplay_filters",
        "payment_method_redisplay",
        "payment_method_remove",
        "payment_method_save"
      ],
      "title": "CustomerSessionResourceComponentsResourcePaymentElementResourceFeatures",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_session_resource_components_resource_pricing_table": {
      "description": "This hash contains whether the pricing table is enabled.",
      "properties": {
        "enabled": {
          "description": "Whether the pricing table is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "CustomerSessionResourceComponentsResourcePricingTable",
      "type": "object",
      "x-expandableFields": []
    },
    "customer_tax": {
      "description": "",
      "properties": {
        "automatic_tax": {
          "description": "Surfaces if automatic tax computation is possible given the current customer location information.",
          "enum": [
            "failed",
            "not_collecting",
            "supported",
            "unrecognized_location"
          ],
          "type": "string"
        },
        "ip_address": {
          "description": "A recent IP address of the customer used for tax reporting and tax location inference.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "location": {
          "description": "The customer's location as identified by Stripe Tax.",
          "x-nullable": true
        }
      },
      "required": [
        "automatic_tax"
      ],
      "title": "CustomerTax",
      "type": "object",
      "x-expandableFields": [
        "location"
      ]
    },
    "customer_tax_location": {
      "description": "",
      "properties": {
        "country": {
          "description": "The customer's country as identified by Stripe Tax.",
          "maxLength": 5000,
          "type": "string"
        },
        "source": {
          "description": "The data source used to infer the customer's location.",
          "enum": [
            "billing_address",
            "ip_address",
            "payment_method",
            "shipping_destination"
          ],
          "type": "string"
        },
        "state": {
          "description": "The customer's state, county, province, or region as identified by Stripe Tax.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "country",
        "source"
      ],
      "title": "CustomerTaxLocation",
      "type": "object",
      "x-expandableFields": []
    },
    "deleted_account": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "account"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedAccount",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_account"
    },
    "deleted_apple_pay_domain": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "apple_pay_domain"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedApplePayDomain",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_apple_pay_domain"
    },
    "deleted_application": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "The name of the application.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "application"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedApplication",
      "type": "object",
      "x-expandableFields": []
    },
    "deleted_bank_account": {
      "description": "",
      "properties": {
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "bank_account"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedBankAccount",
      "type": "object",
      "x-expandableFields": []
    },
    "deleted_card": {
      "description": "",
      "properties": {
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "card"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedCard",
      "type": "object",
      "x-expandableFields": []
    },
    "deleted_coupon": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "coupon"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedCoupon",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_coupon"
    },
    "deleted_customer": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "customer"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedCustomer",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_customer"
    },
    "deleted_discount": {
      "description": "",
      "properties": {
        "checkout_session": {
          "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "coupon": {
          "$ref": "#/definitions/coupon"
        },
        "customer": {
          "description": "The ID of the customer associated with this discount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_item": {
          "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "discount"
          ],
          "type": "string"
        },
        "promotion_code": {
          "description": "The promotion code applied to create this discount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/promotion_code"
              }
            ]
          },
          "x-nullable": true
        },
        "start": {
          "description": "Date that the coupon was applied.",
          "format": "unix-time",
          "type": "integer"
        },
        "subscription": {
          "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "subscription_item": {
          "description": "The subscription item that this coupon is applied to, if it is applied to a particular subscription item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "coupon",
        "deleted",
        "id",
        "object",
        "start"
      ],
      "title": "DeletedDiscount",
      "type": "object",
      "x-expandableFields": [
        "coupon",
        "customer",
        "promotion_code"
      ],
      "x-resourceId": "deleted_discount"
    },
    "deleted_external_account": {
      "title": "Polymorphic",
      "x-resourceId": "deleted_external_account",
      "x-stripeBypassValidation": true
    },
    "deleted_invoice": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "invoice"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedInvoice",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_invoice"
    },
    "deleted_invoiceitem": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "invoiceitem"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedInvoiceItem",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_invoiceitem"
    },
    "deleted_payment_source": {
      "title": "Polymorphic",
      "x-resourceId": "deleted_payment_source",
      "x-stripeBypassValidation": true
    },
    "deleted_person": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "person"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedPerson",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_person"
    },
    "deleted_plan": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "plan"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedPlan",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_plan"
    },
    "deleted_price": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "price"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedPrice",
      "type": "object",
      "x-expandableFields": []
    },
    "deleted_product": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "product"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedProduct",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_product"
    },
    "deleted_product_feature": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "product_feature"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedProductFeature",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_product_feature"
    },
    "deleted_radar.value_list": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "radar.value_list"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "RadarListDeletedList",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_radar.value_list"
    },
    "deleted_radar.value_list_item": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "radar.value_list_item"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "RadarListDeletedListItem",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_radar.value_list_item"
    },
    "deleted_subscription_item": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "subscription_item"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedSubscriptionItem",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_subscription_item"
    },
    "deleted_tax_id": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax_id"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "deleted_tax_id",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_tax_id"
    },
    "deleted_terminal.configuration": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.configuration"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "TerminalConfigurationDeletedConfiguration",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_terminal.configuration"
    },
    "deleted_terminal.location": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.location"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "TerminalLocationDeletedLocation",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_terminal.location"
    },
    "deleted_terminal.reader": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.reader"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "TerminalReaderDeletedReader",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_terminal.reader"
    },
    "deleted_test_helpers.test_clock": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "test_helpers.test_clock"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "DeletedTestClock",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_test_helpers.test_clock"
    },
    "deleted_webhook_endpoint": {
      "description": "",
      "properties": {
        "deleted": {
          "description": "Always true for a deleted object",
          "enum": [
            true
          ],
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "webhook_endpoint"
          ],
          "type": "string"
        }
      },
      "required": [
        "deleted",
        "id",
        "object"
      ],
      "title": "NotificationWebhookEndpointDeleted",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "deleted_webhook_endpoint"
    },
    "destination_details_unimplemented": {
      "description": "",
      "properties": {},
      "title": "destination_details_unimplemented",
      "type": "object",
      "x-expandableFields": []
    },
    "discount": {
      "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)",
      "properties": {
        "checkout_session": {
          "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "coupon": {
          "$ref": "#/definitions/coupon"
        },
        "customer": {
          "description": "The ID of the customer associated with this discount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "end": {
          "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_item": {
          "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "discount"
          ],
          "type": "string"
        },
        "promotion_code": {
          "description": "The promotion code applied to create this discount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/promotion_code"
              }
            ]
          },
          "x-nullable": true
        },
        "start": {
          "description": "Date that the coupon was applied.",
          "format": "unix-time",
          "type": "integer"
        },
        "subscription": {
          "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "subscription_item": {
          "description": "The subscription item that this coupon is applied to, if it is applied to a particular subscription item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "coupon",
        "id",
        "object",
        "start"
      ],
      "title": "Discount",
      "type": "object",
      "x-expandableFields": [
        "coupon",
        "customer",
        "promotion_code"
      ],
      "x-resourceId": "discount"
    },
    "discounts_resource_discount_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent), of the discount.",
          "type": "integer"
        },
        "discount": {
          "description": "The discount that was applied to get this discount amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/discount"
              },
              {
                "$ref": "#/definitions/deleted_discount"
              }
            ]
          }
        }
      },
      "required": [
        "amount",
        "discount"
      ],
      "title": "DiscountsResourceDiscountAmount",
      "type": "object",
      "x-expandableFields": [
        "discount"
      ]
    },
    "discounts_resource_stackable_discount": {
      "description": "",
      "properties": {
        "coupon": {
          "description": "ID of the coupon to create a new discount for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/coupon"
              }
            ]
          },
          "x-nullable": true
        },
        "discount": {
          "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/discount"
              }
            ]
          },
          "x-nullable": true
        },
        "promotion_code": {
          "description": "ID of the promotion code to create a new discount for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/promotion_code"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "DiscountsResourceStackableDiscount",
      "type": "object",
      "x-expandableFields": [
        "coupon",
        "discount",
        "promotion_code"
      ]
    },
    "dispute": {
      "description": "A dispute occurs when a customer questions your charge with their card issuer.\nWhen this happens, you have the opportunity to respond to the dispute with\nevidence that shows that the charge is legitimate.\n\nRelated guide: [Disputes and fraud](https://stripe.com/docs/disputes)",
      "properties": {
        "amount": {
          "description": "Disputed amount. Usually the amount of the charge, but it can differ (usually because of currency fluctuation or because only part of the order is disputed).",
          "type": "integer"
        },
        "balance_transactions": {
          "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
          "items": {
            "$ref": "#/definitions/balance_transaction"
          },
          "type": "array"
        },
        "charge": {
          "description": "ID of the charge that's disputed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "evidence": {
          "$ref": "#/definitions/dispute_evidence"
        },
        "evidence_details": {
          "$ref": "#/definitions/dispute_evidence_details"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "is_charge_refundable": {
          "description": "If true, it's still possible to refund the disputed payment. After the payment has been fully refunded, no further funds are withdrawn from your Stripe account as a result of this dispute.",
          "type": "boolean"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "dispute"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "ID of the PaymentIntent that's disputed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method_details": {
          "$ref": "#/definitions/dispute_payment_method_details"
        },
        "reason": {
          "description": "Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Learn more about [dispute reasons](https://stripe.com/docs/disputes/categories).",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `won`, or `lost`.",
          "enum": [
            "lost",
            "needs_response",
            "under_review",
            "warning_closed",
            "warning_needs_response",
            "warning_under_review",
            "won"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "balance_transactions",
        "charge",
        "created",
        "currency",
        "evidence",
        "evidence_details",
        "id",
        "is_charge_refundable",
        "livemode",
        "metadata",
        "object",
        "reason",
        "status"
      ],
      "title": "Dispute",
      "type": "object",
      "x-expandableFields": [
        "balance_transactions",
        "charge",
        "evidence",
        "evidence_details",
        "payment_intent",
        "payment_method_details"
      ],
      "x-resourceId": "dispute"
    },
    "dispute_evidence": {
      "description": "",
      "properties": {
        "access_activity_log": {
          "description": "Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "billing_address": {
          "description": "The billing address provided by the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cancellation_policy": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "cancellation_policy_disclosure": {
          "description": "An explanation of how and when the customer was shown your refund policy prior to purchase.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "cancellation_rebuttal": {
          "description": "A justification for why the customer's subscription was not canceled.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "customer_communication": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "customer_email_address": {
          "description": "The email address of the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_name": {
          "description": "The name of the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_purchase_ip": {
          "description": "The IP address that the customer used when making the purchase.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_signature": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "duplicate_charge_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "duplicate_charge_explanation": {
          "description": "An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "duplicate_charge_id": {
          "description": "The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_description": {
          "description": "A description of the product or service that was sold.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "receipt": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "refund_policy": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "refund_policy_disclosure": {
          "description": "Documentation demonstrating that the customer was shown your refund policy prior to purchase.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "refund_refusal_explanation": {
          "description": "A justification for why the customer is not entitled to a refund.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        },
        "service_date": {
          "description": "The date on which the customer received or began receiving the purchased service, in a clear human-readable format.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "service_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "shipping_address": {
          "description": "The address to which a physical product was shipped. You should try to include as complete address information as possible.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_carrier": {
          "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_date": {
          "description": "The date on which a physical product began its route to the shipping address, in a clear human-readable format.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "shipping_tracking_number": {
          "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "uncategorized_file": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "uncategorized_text": {
          "description": "Any additional evidence or statements.",
          "maxLength": 150000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "DisputeEvidence",
      "type": "object",
      "x-expandableFields": [
        "cancellation_policy",
        "customer_communication",
        "customer_signature",
        "duplicate_charge_documentation",
        "receipt",
        "refund_policy",
        "service_documentation",
        "shipping_documentation",
        "uncategorized_file"
      ]
    },
    "dispute_evidence_details": {
      "description": "",
      "properties": {
        "due_by": {
          "description": "Date by which evidence must be submitted in order to successfully challenge dispute. Will be 0 if the customer's bank or credit card company doesn't allow a response for this particular dispute.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "has_evidence": {
          "description": "Whether evidence has been staged for this dispute.",
          "type": "boolean"
        },
        "past_due": {
          "description": "Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.",
          "type": "boolean"
        },
        "submission_count": {
          "description": "The number of times evidence has been submitted. Typically, you may only submit evidence once.",
          "type": "integer"
        }
      },
      "required": [
        "has_evidence",
        "past_due",
        "submission_count"
      ],
      "title": "DisputeEvidenceDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "dispute_payment_method_details": {
      "description": "",
      "properties": {
        "amazon_pay": {
          "$ref": "#/definitions/dispute_payment_method_details_amazon_pay"
        },
        "card": {
          "$ref": "#/definitions/dispute_payment_method_details_card"
        },
        "klarna": {
          "$ref": "#/definitions/dispute_payment_method_details_klarna"
        },
        "paypal": {
          "$ref": "#/definitions/dispute_payment_method_details_paypal"
        },
        "type": {
          "description": "Payment method type.",
          "enum": [
            "amazon_pay",
            "card",
            "klarna",
            "paypal"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "DisputePaymentMethodDetails",
      "type": "object",
      "x-expandableFields": [
        "amazon_pay",
        "card",
        "klarna",
        "paypal"
      ]
    },
    "dispute_payment_method_details_amazon_pay": {
      "description": "",
      "properties": {
        "dispute_type": {
          "description": "The AmazonPay dispute type, chargeback or claim",
          "enum": [
            "chargeback",
            "claim"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "DisputePaymentMethodDetailsAmazonPay",
      "type": "object",
      "x-expandableFields": []
    },
    "dispute_payment_method_details_card": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "case_type": {
          "description": "The type of dispute opened. Different case types may have varying fees and financial impact.",
          "enum": [
            "chargeback",
            "inquiry"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "network_reason_code": {
          "description": "The card network's specific dispute reason code, which maps to one of Stripe's primary dispute categories to simplify response guidance. The [Network code map](https://stripe.com/docs/disputes/categories#network-code-map) lists all available dispute reason codes by network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "brand",
        "case_type"
      ],
      "title": "DisputePaymentMethodDetailsCard",
      "type": "object",
      "x-expandableFields": []
    },
    "dispute_payment_method_details_klarna": {
      "description": "",
      "properties": {
        "reason_code": {
          "description": "The reason for the dispute as defined by Klarna",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "DisputePaymentMethodDetailsKlarna",
      "type": "object",
      "x-expandableFields": []
    },
    "dispute_payment_method_details_paypal": {
      "description": "",
      "properties": {
        "case_id": {
          "description": "The ID of the dispute in PayPal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reason_code": {
          "description": "The reason for the dispute as defined by PayPal",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "DisputePaymentMethodDetailsPaypal",
      "type": "object",
      "x-expandableFields": []
    },
    "email_sent": {
      "description": "",
      "properties": {
        "email_sent_at": {
          "description": "The timestamp when the email was sent.",
          "format": "unix-time",
          "type": "integer"
        },
        "email_sent_to": {
          "description": "The recipient's email address.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "email_sent_at",
        "email_sent_to"
      ],
      "title": "EmailSent",
      "type": "object",
      "x-expandableFields": []
    },
    "entitlements.active_entitlement": {
      "description": "An active entitlement describes access to a feature for a customer.",
      "properties": {
        "feature": {
          "description": "The [Feature](https://stripe.com/docs/api/entitlements/feature) that the customer is entitled to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/entitlements.feature"
              }
            ]
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "lookup_key": {
          "description": "A unique key you provide as your own system identifier. This may be up to 80 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "entitlements.active_entitlement"
          ],
          "type": "string"
        }
      },
      "required": [
        "feature",
        "id",
        "livemode",
        "lookup_key",
        "object"
      ],
      "title": "ActiveEntitlement",
      "type": "object",
      "x-expandableFields": [
        "feature"
      ],
      "x-resourceId": "entitlements.active_entitlement"
    },
    "entitlements.feature": {
      "description": "A feature represents a monetizable ability or functionality in your system.\nFeatures can be assigned to products, and when those products are purchased, Stripe will create an entitlement to the feature for the purchasing customer.",
      "properties": {
        "active": {
          "description": "Inactive features cannot be attached to new products and will not be returned from the features list endpoint.",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "lookup_key": {
          "description": "A unique key you provide as your own system identifier. This may be up to 80 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "The feature's name, for your own purpose, not meant to be displayable to the customer.",
          "maxLength": 80,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "entitlements.feature"
          ],
          "type": "string"
        }
      },
      "required": [
        "active",
        "id",
        "livemode",
        "lookup_key",
        "metadata",
        "name",
        "object"
      ],
      "title": "Feature",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "entitlements.feature"
    },
    "ephemeral_key": {
      "description": "",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expires": {
          "description": "Time at which the key will expire. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "ephemeral_key"
          ],
          "type": "string"
        },
        "secret": {
          "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "expires",
        "id",
        "livemode",
        "object"
      ],
      "title": "EphemeralKey",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "ephemeral_key"
    },
    "error": {
      "description": "An error response from the Stripe API",
      "properties": {
        "error": {
          "$ref": "#/definitions/api_errors"
        }
      },
      "required": [
        "error"
      ],
      "type": "object"
    },
    "event": {
      "description": "Events are our way of letting you know when something interesting happens in\nyour account. When an interesting event occurs, we create a new `Event`\nobject. For example, when a charge succeeds, we create a `charge.succeeded`\nevent, and when an invoice payment attempt fails, we create an\n`invoice.payment_failed` event. Certain API requests might create multiple\nevents. For example, if you create a new subscription for a\ncustomer, you receive both a `customer.subscription.created` event and a\n`charge.succeeded` event.\n\nEvents occur when the state of another API resource changes. The event's data\nfield embeds the resource's state at the time of the change. For\nexample, a `charge.succeeded` event contains a charge, and an\n`invoice.payment_failed` event contains an invoice.\n\nAs with other API resources, you can use endpoints to retrieve an\n[individual event](https://stripe.com/docs/api#retrieve_event) or a [list of events](https://stripe.com/docs/api#list_events)\nfrom the API. We also have a separate\n[webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the\n`Event` objects directly to an endpoint on your server. You can manage\nwebhooks in your\n[account settings](https://dashboard.stripe.com/account/webhooks). Learn how\nto [listen for events](https://docs.stripe.com/webhooks)\nso that your integration can automatically trigger reactions.\n\nWhen using [Connect](https://docs.stripe.com/connect), you can also receive event notifications\nthat occur in connected accounts. For these events, there's an\nadditional `account` attribute in the received `Event` object.\n\nWe only guarantee access to events through the [Retrieve Event API](https://stripe.com/docs/api#retrieve_event)\nfor 30 days.",
      "properties": {
        "account": {
          "description": "The connected account that originates the event.",
          "maxLength": 5000,
          "type": "string"
        },
        "api_version": {
          "description": "The Stripe API version used to render `data`. This property is populated only for events on or after October 31, 2014.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/notification_event_data"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "event"
          ],
          "type": "string"
        },
        "pending_webhooks": {
          "description": "Number of webhooks that haven't been successfully delivered (for example, to return a 20x response) to the URLs you specify.",
          "type": "integer"
        },
        "request": {
          "description": "Information on the API request that triggers the event.",
          "x-nullable": true
        },
        "type": {
          "description": "Description of the event (for example, `invoice.created` or `charge.refunded`).",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "data",
        "id",
        "livemode",
        "object",
        "pending_webhooks",
        "type"
      ],
      "title": "NotificationEvent",
      "type": "object",
      "x-expandableFields": [
        "data",
        "request"
      ],
      "x-resourceId": "event"
    },
    "exchange_rate": {
      "description": "`ExchangeRate` objects allow you to determine the rates that Stripe is currently\nusing to convert from one currency to another. Since this number is variable\nthroughout the day, there are various reasons why you might want to know the current\nrate (for example, to dynamically price an item for a user with a default\npayment in a foreign currency).\n\nPlease refer to our [Exchange Rates API](https://stripe.com/docs/fx-rates) guide for more details.\n\n*[Note: this integration path is supported but no longer recommended]* Additionally,\nyou can guarantee that a charge is made with an exchange rate that you expect is\ncurrent. To do so, you must pass in the exchange_rate to charges endpoints. If the\nvalue is no longer up to date, the charge won't go through. Please refer to our\n[Using with charges](https://stripe.com/docs/exchange-rates) guide for more details.\n\n-----\n\n&nbsp;\n\n*This Exchange Rates API is a Beta Service and is subject to Stripe's terms of service. You may use the API solely for the purpose of transacting on Stripe. For example, the API may be queried in order to:*\n\n- *localize prices for processing payments on Stripe*\n- *reconcile Stripe transactions*\n- *determine how much money to send to a connected account*\n- *determine app fees to charge a connected account*\n\n*Using this Exchange Rates API beta for any purpose other than to transact on Stripe is strictly prohibited and constitutes a violation of Stripe's terms of service.*",
      "properties": {
        "id": {
          "description": "Unique identifier for the object. Represented as the three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in lowercase.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "exchange_rate"
          ],
          "type": "string"
        },
        "rates": {
          "additionalProperties": {
            "type": "number"
          },
          "description": "Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.",
          "type": "object"
        }
      },
      "required": [
        "id",
        "object",
        "rates"
      ],
      "title": "ExchangeRate",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "exchange_rate"
    },
    "external_account": {
      "title": "Polymorphic",
      "x-resourceId": "external_account",
      "x-stripeBypassValidation": true
    },
    "external_account_requirements": {
      "description": "",
      "properties": {
        "currently_due": {
          "description": "Fields that need to be collected to keep the external account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array",
          "x-nullable": true
        },
        "past_due": {
          "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the external account.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "ExternalAccountRequirements",
      "type": "object",
      "x-expandableFields": [
        "errors"
      ]
    },
    "fee": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount of the fee, in cents.",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect application that earned the fee.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "Type of the fee, one of: `application_fee`, `payment_method_passthrough_fee`, `stripe_fee` or `tax`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency",
        "type"
      ],
      "title": "Fee",
      "type": "object",
      "x-expandableFields": []
    },
    "fee_refund": {
      "description": "`Application Fee Refund` objects allow you to refund an application fee that\nhas previously been created but not yet refunded. Funds will be refunded to\nthe Stripe account from which the fee was originally collected.\n\nRelated guide: [Refunding application fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee)",
      "properties": {
        "amount": {
          "description": "Amount, in cents (or local equivalent).",
          "type": "integer"
        },
        "balance_transaction": {
          "description": "Balance transaction that describes the impact on your account balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "fee": {
          "description": "ID of the application fee that was refunded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application_fee"
              }
            ]
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "fee_refund"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "fee",
        "id",
        "object"
      ],
      "title": "FeeRefund",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "fee"
      ],
      "x-resourceId": "fee_refund"
    },
    "file": {
      "description": "This object represents files hosted on Stripe's servers. You can upload\nfiles with the [create file](https://stripe.com/docs/api#create_file) request\n(for example, when uploading dispute evidence). Stripe also\ncreates files independently (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File upload guide](https://stripe.com/docs/file-upload)",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expires_at": {
          "description": "The file expires and isn't available at this time in epoch seconds.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "filename": {
          "description": "The suitable name for saving the file to a filesystem.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "links": {
          "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/file_link"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "pattern": "^/v1/file_links",
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "FileResourceFileLinkList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ],
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "file"
          ],
          "type": "string"
        },
        "purpose": {
          "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
          "enum": [
            "account_requirement",
            "additional_verification",
            "business_icon",
            "business_logo",
            "customer_signature",
            "dispute_evidence",
            "document_provider_identity_document",
            "finance_report_run",
            "identity_document",
            "identity_document_downloadable",
            "issuing_regulatory_reporting",
            "pci_document",
            "selfie",
            "sigma_scheduled_query",
            "tax_document_user_upload",
            "terminal_reader_splashscreen"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "size": {
          "description": "The size of the file object in bytes.",
          "type": "integer"
        },
        "title": {
          "description": "A suitable title for the document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The returned file type (for example, `csv`, `pdf`, `jpg`, or `png`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "Use your live secret API key to download the file from this URL.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "object",
        "purpose",
        "size"
      ],
      "title": "File",
      "type": "object",
      "x-expandableFields": [
        "links"
      ],
      "x-resourceId": "file"
    },
    "file_link": {
      "description": "To share the contents of a `File` object with non-Stripe users, you can\ncreate a `FileLink`. `FileLink`s contain a URL that you can use to\nretrieve the contents of the file without authentication.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expired": {
          "description": "Returns if the link is already expired.",
          "type": "boolean"
        },
        "expires_at": {
          "description": "Time that the link expires.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "file": {
          "description": "The file object this link points to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "file_link"
          ],
          "type": "string"
        },
        "url": {
          "description": "The publicly accessible URL to download the file.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "expired",
        "file",
        "id",
        "livemode",
        "metadata",
        "object"
      ],
      "title": "FileLink",
      "type": "object",
      "x-expandableFields": [
        "file"
      ],
      "x-resourceId": "file_link"
    },
    "financial_connections.account": {
      "description": "A Financial Connections Account represents an account that exists outside of Stripe, to which you have been granted some degree of access.",
      "properties": {
        "account_holder": {
          "description": "The account holder that this account belongs to.",
          "x-nullable": true
        },
        "balance": {
          "description": "The most recent information about the account's balance.",
          "x-nullable": true
        },
        "balance_refresh": {
          "description": "The state of the most recent attempt to refresh the account balance.",
          "x-nullable": true
        },
        "category": {
          "description": "The type of the account. Account category is further divided in `subcategory`.",
          "enum": [
            "cash",
            "credit",
            "investment",
            "other"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "display_name": {
          "description": "A human-readable name that has been assigned to this account, either by the account holder or by the institution.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "institution_name": {
          "description": "The name of the institution that holds this account.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last 4 digits of the account number. If present, this will be 4 numeric characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "financial_connections.account"
          ],
          "type": "string"
        },
        "ownership": {
          "description": "The most recent information about the account's owners.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/financial_connections.account_ownership"
              }
            ]
          },
          "x-nullable": true
        },
        "ownership_refresh": {
          "description": "The state of the most recent attempt to refresh the account owners.",
          "x-nullable": true
        },
        "permissions": {
          "description": "The list of permissions granted by this account.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "payment_method",
              "transactions"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the link to the account.",
          "enum": [
            "active",
            "disconnected",
            "inactive"
          ],
          "type": "string"
        },
        "subcategory": {
          "description": "If `category` is `cash`, one of:\n\n - `checking`\n - `savings`\n - `other`\n\nIf `category` is `credit`, one of:\n\n - `mortgage`\n - `line_of_credit`\n - `credit_card`\n - `other`\n\nIf `category` is `investment` or `other`, this will be `other`.",
          "enum": [
            "checking",
            "credit_card",
            "line_of_credit",
            "mortgage",
            "other",
            "savings"
          ],
          "type": "string"
        },
        "subscriptions": {
          "description": "The list of data refresh subscriptions requested on this account.",
          "items": {
            "enum": [
              "transactions"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "supported_payment_method_types": {
          "description": "The [PaymentMethod type](https://stripe.com/docs/api/payment_methods/object#payment_method_object-type)(s) that can be created from this account.",
          "items": {
            "enum": [
              "link",
              "us_bank_account"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "transaction_refresh": {
          "description": "The state of the most recent attempt to refresh the account transactions.",
          "x-nullable": true
        }
      },
      "required": [
        "category",
        "created",
        "id",
        "institution_name",
        "livemode",
        "object",
        "status",
        "subcategory",
        "supported_payment_method_types"
      ],
      "title": "BankConnectionsResourceLinkedAccount",
      "type": "object",
      "x-expandableFields": [
        "account_holder",
        "balance",
        "balance_refresh",
        "ownership",
        "ownership_refresh",
        "transaction_refresh"
      ],
      "x-resourceId": "financial_connections.account"
    },
    "financial_connections.account_owner": {
      "description": "Describes an owner of an account.",
      "properties": {
        "email": {
          "description": "The email address of the owner.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "The full name of the owner.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "financial_connections.account_owner"
          ],
          "type": "string"
        },
        "ownership": {
          "description": "The ownership object that this owner belongs to.",
          "maxLength": 5000,
          "type": "string"
        },
        "phone": {
          "description": "The raw phone number of the owner.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "raw_address": {
          "description": "The raw physical address of the owner.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "refreshed_at": {
          "description": "The timestamp of the refresh that updated this owner.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "id",
        "name",
        "object",
        "ownership"
      ],
      "title": "BankConnectionsResourceOwner",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "financial_connections.account_owner"
    },
    "financial_connections.account_ownership": {
      "description": "Describes a snapshot of the owners of an account at a particular point in time.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "financial_connections.account_ownership"
          ],
          "type": "string"
        },
        "owners": {
          "description": "A paginated list of owners for this account.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/financial_connections.account_owner"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "BankConnectionsResourceOwnerList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        }
      },
      "required": [
        "created",
        "id",
        "object",
        "owners"
      ],
      "title": "BankConnectionsResourceOwnership",
      "type": "object",
      "x-expandableFields": [
        "owners"
      ]
    },
    "financial_connections.session": {
      "description": "A Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.",
      "properties": {
        "account_holder": {
          "description": "The account holder for whom accounts are collected in this session.",
          "x-nullable": true
        },
        "accounts": {
          "description": "The accounts that were collected as part of this Session.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/financial_connections.account"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "pattern": "^/v1/financial_connections/accounts",
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "BankConnectionsResourceLinkedAccountList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "client_secret": {
          "description": "A value that will be passed to the client to launch the authentication flow.",
          "maxLength": 5000,
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/bank_connections_resource_link_account_session_filters"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "financial_connections.session"
          ],
          "type": "string"
        },
        "permissions": {
          "description": "Permissions requested for accounts collected during this session.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "payment_method",
              "transactions"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "prefetch": {
          "description": "Data features requested to be retrieved upon account creation.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "transactions"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "return_url": {
          "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "accounts",
        "client_secret",
        "id",
        "livemode",
        "object",
        "permissions"
      ],
      "title": "BankConnectionsResourceLinkAccountSession",
      "type": "object",
      "x-expandableFields": [
        "account_holder",
        "accounts",
        "filters"
      ],
      "x-resourceId": "financial_connections.session"
    },
    "financial_connections.transaction": {
      "description": "A Transaction represents a real transaction that affects a Financial Connections Account balance.",
      "properties": {
        "account": {
          "description": "The ID of the Financial Connections Account this transaction belongs to.",
          "maxLength": 5000,
          "type": "string"
        },
        "amount": {
          "description": "The amount of this transaction, in cents (or local equivalent).",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "description": {
          "description": "The description of this transaction.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "financial_connections.transaction"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the transaction.",
          "enum": [
            "pending",
            "posted",
            "void"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/bank_connections_resource_transaction_resource_status_transitions"
        },
        "transacted_at": {
          "description": "Time at which the transaction was transacted. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "transaction_refresh": {
          "description": "The token of the transaction refresh that last updated or created this transaction.",
          "maxLength": 5000,
          "type": "string"
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "account",
        "amount",
        "currency",
        "description",
        "id",
        "livemode",
        "object",
        "status",
        "status_transitions",
        "transacted_at",
        "transaction_refresh",
        "updated"
      ],
      "title": "BankConnectionsResourceTransaction",
      "type": "object",
      "x-expandableFields": [
        "status_transitions"
      ],
      "x-resourceId": "financial_connections.transaction"
    },
    "financial_reporting_finance_report_run_run_parameters": {
      "description": "",
      "properties": {
        "columns": {
          "description": "The set of output columns requested for inclusion in the report run.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "connected_account": {
          "description": "Connected account ID by which to filter the report run.",
          "maxLength": 5000,
          "type": "string"
        },
        "currency": {
          "description": "Currency of objects to be included in the report run.",
          "type": "string"
        },
        "interval_end": {
          "description": "Ending timestamp of data to be included in the report run. Can be any UTC timestamp between 1 second after the user specified `interval_start` and 1 second before this report's last `data_available_end` value.",
          "format": "unix-time",
          "type": "integer"
        },
        "interval_start": {
          "description": "Starting timestamp of data to be included in the report run. Can be any UTC timestamp between 1 second after this report's `data_available_start` and 1 second before the user specified `interval_end` value.",
          "format": "unix-time",
          "type": "integer"
        },
        "payout": {
          "description": "Payout ID by which to filter the report run.",
          "maxLength": 5000,
          "type": "string"
        },
        "reporting_category": {
          "description": "Category of balance transactions to be included in the report run.",
          "maxLength": 5000,
          "type": "string"
        },
        "timezone": {
          "description": "Defaults to `Etc/UTC`. The output timezone for all timestamps in the report. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones). Has no effect on `interval_start` or `interval_end`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "FinancialReportingFinanceReportRunRunParameters",
      "type": "object",
      "x-expandableFields": []
    },
    "forwarded_request_context": {
      "description": "Metadata about the forwarded request.",
      "properties": {
        "destination_duration": {
          "description": "The time it took in milliseconds for the destination endpoint to respond.",
          "type": "integer"
        },
        "destination_ip_address": {
          "description": "The IP address of the destination.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "destination_duration",
        "destination_ip_address"
      ],
      "title": "ForwardedRequestContext",
      "type": "object",
      "x-expandableFields": []
    },
    "forwarded_request_details": {
      "description": "Details about the request forwarded to the destination endpoint.",
      "properties": {
        "body": {
          "description": "The body payload to send to the destination endpoint.",
          "maxLength": 5000,
          "type": "string"
        },
        "headers": {
          "description": "The headers to include in the forwarded request. Can be omitted if no additional headers (excluding Stripe-generated ones such as the Content-Type header) should be included.",
          "items": {
            "$ref": "#/definitions/forwarded_request_header"
          },
          "type": "array"
        },
        "http_method": {
          "description": "The HTTP method used to call the destination endpoint.",
          "enum": [
            "POST"
          ],
          "type": "string"
        }
      },
      "required": [
        "body",
        "headers",
        "http_method"
      ],
      "title": "ForwardedRequestDetails",
      "type": "object",
      "x-expandableFields": [
        "headers"
      ]
    },
    "forwarded_request_header": {
      "description": "Header data.",
      "properties": {
        "name": {
          "description": "The header name.",
          "maxLength": 5000,
          "type": "string"
        },
        "value": {
          "description": "The header value.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "ForwardedRequestHeader",
      "type": "object",
      "x-expandableFields": []
    },
    "forwarded_response_details": {
      "description": "Details about the response from the destination endpoint.",
      "properties": {
        "body": {
          "description": "The response body from the destination endpoint to Stripe.",
          "maxLength": 5000,
          "type": "string"
        },
        "headers": {
          "description": "HTTP headers that the destination endpoint returned.",
          "items": {
            "$ref": "#/definitions/forwarded_request_header"
          },
          "type": "array"
        },
        "status": {
          "description": "The HTTP status code that the destination endpoint returned.",
          "type": "integer"
        }
      },
      "required": [
        "body",
        "headers",
        "status"
      ],
      "title": "ForwardedResponseDetails",
      "type": "object",
      "x-expandableFields": [
        "headers"
      ]
    },
    "forwarding.request": {
      "description": "Instructs Stripe to make a request on your behalf using the destination URL. The destination URL\nis activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials\nprovided during onboarding, and injects card details from the payment_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers,\nbefore storing the request and response data in the forwarding Request object, which are subject to a\n30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one\noutbound request. The Stripe idempotency key provided should be unique and different from any idempotency\nkeys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to\nStripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "forwarding.request"
          ],
          "type": "string"
        },
        "payment_method": {
          "description": "The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.",
          "maxLength": 5000,
          "type": "string"
        },
        "replacements": {
          "description": "The field kinds to be replaced in the forwarded request.",
          "items": {
            "enum": [
              "card_cvc",
              "card_expiry",
              "card_number",
              "cardholder_name"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "request_context": {
          "description": "Context about the request from Stripe's servers to the destination endpoint.",
          "x-nullable": true
        },
        "request_details": {
          "description": "The request that was sent to the destination endpoint. We redact any sensitive fields.",
          "x-nullable": true
        },
        "response_details": {
          "description": "The response that the destination endpoint returned to us. We redact any sensitive fields.",
          "x-nullable": true
        },
        "url": {
          "description": "The destination URL for the forwarded request. Must be supported by the config.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "payment_method",
        "replacements"
      ],
      "title": "ForwardingRequest",
      "type": "object",
      "x-expandableFields": [
        "request_context",
        "request_details",
        "response_details"
      ],
      "x-resourceId": "forwarding.request"
    },
    "funding_instructions": {
      "description": "Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) that is\nautomatically applied to future invoices and payments using the `customer_balance` payment method.\nCustomers can fund this balance by initiating a bank transfer to any account in the\n`financial_addresses` field.\nRelated guide: [Customer balance funding instructions](https://stripe.com/docs/payments/customer-balance/funding-instructions)",
      "properties": {
        "bank_transfer": {
          "$ref": "#/definitions/funding_instructions_bank_transfer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "funding_type": {
          "description": "The `funding_type` of the returned instructions",
          "enum": [
            "bank_transfer"
          ],
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "funding_instructions"
          ],
          "type": "string"
        }
      },
      "required": [
        "bank_transfer",
        "currency",
        "funding_type",
        "livemode",
        "object"
      ],
      "title": "CustomerBalanceFundingInstructionsCustomerBalanceFundingInstructions",
      "type": "object",
      "x-expandableFields": [
        "bank_transfer"
      ],
      "x-resourceId": "funding_instructions"
    },
    "funding_instructions_bank_transfer": {
      "description": "",
      "properties": {
        "country": {
          "description": "The country of the bank account to fund",
          "maxLength": 5000,
          "type": "string"
        },
        "financial_addresses": {
          "description": "A list of financial addresses that can be used to fund a particular balance",
          "items": {
            "$ref": "#/definitions/funding_instructions_bank_transfer_financial_address"
          },
          "type": "array"
        },
        "type": {
          "description": "The bank_transfer type",
          "enum": [
            "eu_bank_transfer",
            "jp_bank_transfer"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "country",
        "financial_addresses",
        "type"
      ],
      "title": "FundingInstructionsBankTransfer",
      "type": "object",
      "x-expandableFields": [
        "financial_addresses"
      ]
    },
    "funding_instructions_bank_transfer_aba_record": {
      "description": "ABA Records contain U.S. bank account details per the ABA format.",
      "properties": {
        "account_number": {
          "description": "The ABA account number",
          "maxLength": 5000,
          "type": "string"
        },
        "bank_name": {
          "description": "The bank name",
          "maxLength": 5000,
          "type": "string"
        },
        "routing_number": {
          "description": "The ABA routing number",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "bank_name",
        "routing_number"
      ],
      "title": "FundingInstructionsBankTransferABARecord",
      "type": "object",
      "x-expandableFields": []
    },
    "funding_instructions_bank_transfer_financial_address": {
      "description": "FinancialAddresses contain identifying information that resolves to a FinancialAccount.",
      "properties": {
        "aba": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_aba_record"
        },
        "iban": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_iban_record"
        },
        "sort_code": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_sort_code_record"
        },
        "spei": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_spei_record"
        },
        "supported_networks": {
          "description": "The payment networks supported by this FinancialAddress",
          "items": {
            "enum": [
              "ach",
              "bacs",
              "domestic_wire_us",
              "fps",
              "sepa",
              "spei",
              "swift",
              "zengin"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "swift": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_swift_record"
        },
        "type": {
          "description": "The type of financial address",
          "enum": [
            "aba",
            "iban",
            "sort_code",
            "spei",
            "swift",
            "zengin"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "zengin": {
          "$ref": "#/definitions/funding_instructions_bank_transfer_zengin_record"
        }
      },
      "required": [
        "type"
      ],
      "title": "FundingInstructionsBankTransferFinancialAddress",
      "type": "object",
      "x-expandableFields": [
        "aba",
        "iban",
        "sort_code",
        "spei",
        "swift",
        "zengin"
      ]
    },
    "funding_instructions_bank_transfer_iban_record": {
      "description": "Iban Records contain E.U. bank account details per the SEPA format.",
      "properties": {
        "account_holder_name": {
          "description": "The name of the person or business that owns the bank account",
          "maxLength": 5000,
          "type": "string"
        },
        "bic": {
          "description": "The BIC/SWIFT code of the account.",
          "maxLength": 5000,
          "type": "string"
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "iban": {
          "description": "The IBAN of the account.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "account_holder_name",
        "bic",
        "country",
        "iban"
      ],
      "title": "FundingInstructionsBankTransferIbanRecord",
      "type": "object",
      "x-expandableFields": []
    },
    "funding_instructions_bank_transfer_sort_code_record": {
      "description": "Sort Code Records contain U.K. bank account details per the sort code format.",
      "properties": {
        "account_holder_name": {
          "description": "The name of the person or business that owns the bank account",
          "maxLength": 5000,
          "type": "string"
        },
        "account_number": {
          "description": "The account number",
          "maxLength": 5000,
          "type": "string"
        },
        "sort_code": {
          "description": "The six-digit sort code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "account_holder_name",
        "account_number",
        "sort_code"
      ],
      "title": "FundingInstructionsBankTransferSortCodeRecord",
      "type": "object",
      "x-expandableFields": []
    },
    "funding_instructions_bank_transfer_spei_record": {
      "description": "SPEI Records contain Mexico bank account details per the SPEI format.",
      "properties": {
        "bank_code": {
          "description": "The three-digit bank code",
          "maxLength": 5000,
          "type": "string"
        },
        "bank_name": {
          "description": "The short banking institution name",
          "maxLength": 5000,
          "type": "string"
        },
        "clabe": {
          "description": "The CLABE number",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "bank_code",
        "bank_name",
        "clabe"
      ],
      "title": "FundingInstructionsBankTransferSpeiRecord",
      "type": "object",
      "x-expandableFields": []
    },
    "funding_instructions_bank_transfer_swift_record": {
      "description": "SWIFT Records contain U.S. bank account details per the SWIFT format.",
      "properties": {
        "account_number": {
          "description": "The account number",
          "maxLength": 5000,
          "type": "string"
        },
        "bank_name": {
          "description": "The bank name",
          "maxLength": 5000,
          "type": "string"
        },
        "swift_code": {
          "description": "The SWIFT code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "account_number",
        "bank_name",
        "swift_code"
      ],
      "title": "FundingInstructionsBankTransferSwiftRecord",
      "type": "object",
      "x-expandableFields": []
    },
    "funding_instructions_bank_transfer_zengin_record": {
      "description": "Zengin Records contain Japan bank account details per the Zengin format.",
      "properties": {
        "account_holder_name": {
          "description": "The account holder name",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_number": {
          "description": "The account number",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "The bank account type. In Japan, this can only be `futsu` or `toza`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_code": {
          "description": "The bank code of the account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "The bank name of the account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "branch_code": {
          "description": "The branch code of the account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "branch_name": {
          "description": "The branch name of the account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "FundingInstructionsBankTransferZenginRecord",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_data_document_report_date_of_birth": {
      "description": "Point in Time",
      "properties": {
        "day": {
          "description": "Numerical day between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "Numerical month between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "GelatoDataDocumentReportDateOfBirth",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_data_document_report_expiration_date": {
      "description": "Point in Time",
      "properties": {
        "day": {
          "description": "Numerical day between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "Numerical month between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "GelatoDataDocumentReportExpirationDate",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_data_document_report_issued_date": {
      "description": "Point in Time",
      "properties": {
        "day": {
          "description": "Numerical day between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "Numerical month between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "GelatoDataDocumentReportIssuedDate",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_data_id_number_report_date": {
      "description": "Point in Time",
      "properties": {
        "day": {
          "description": "Numerical day between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "Numerical month between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "GelatoDataIdNumberReportDate",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_data_verified_outputs_date": {
      "description": "Point in Time",
      "properties": {
        "day": {
          "description": "Numerical day between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "Numerical month between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "GelatoDataVerifiedOutputsDate",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_document_report": {
      "description": "Result from a document check",
      "properties": {
        "address": {
          "description": "Address as it appears in the document.",
          "x-nullable": true
        },
        "dob": {
          "description": "Date of birth as it appears in the document.",
          "x-nullable": true
        },
        "error": {
          "description": "Details on the verification error. Present when status is `unverified`.",
          "x-nullable": true
        },
        "expiration_date": {
          "description": "Expiration date of the document.",
          "x-nullable": true
        },
        "files": {
          "description": "Array of [File](https://stripe.com/docs/api/files) ids containing images for this document.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "first_name": {
          "description": "First name as it appears in the document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issued_date": {
          "description": "Issued date of the document.",
          "x-nullable": true
        },
        "issuing_country": {
          "description": "Issuing country of the document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "description": "Last name as it appears in the document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "number": {
          "description": "Document ID number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this `document` check.",
          "enum": [
            "unverified",
            "verified"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "type": {
          "description": "Type of the document.",
          "enum": [
            "driving_license",
            "id_card",
            "passport"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "status"
      ],
      "title": "GelatoDocumentReport",
      "type": "object",
      "x-expandableFields": [
        "address",
        "dob",
        "error",
        "expiration_date",
        "issued_date"
      ]
    },
    "gelato_document_report_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification failure.",
          "enum": [
            "document_expired",
            "document_type_not_supported",
            "document_unverified_other"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "reason": {
          "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoDocumentReportError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_email_report": {
      "description": "Result from a email check",
      "properties": {
        "email": {
          "description": "Email to be verified.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "error": {
          "description": "Details on the verification error. Present when status is `unverified`.",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this `email` check.",
          "enum": [
            "unverified",
            "verified"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "status"
      ],
      "title": "GelatoEmailReport",
      "type": "object",
      "x-expandableFields": [
        "error"
      ]
    },
    "gelato_email_report_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification failure.",
          "enum": [
            "email_unverified_other",
            "email_verification_declined"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoEmailReportError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_id_number_report": {
      "description": "Result from an id_number check",
      "properties": {
        "dob": {
          "description": "Date of birth.",
          "x-nullable": true
        },
        "error": {
          "description": "Details on the verification error. Present when status is `unverified`.",
          "x-nullable": true
        },
        "first_name": {
          "description": "First name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id_number": {
          "description": "ID number. When `id_number_type` is `us_ssn`, only the last 4 digits are present.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id_number_type": {
          "description": "Type of ID number.",
          "enum": [
            "br_cpf",
            "sg_nric",
            "us_ssn"
          ],
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "description": "Last name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this `id_number` check.",
          "enum": [
            "unverified",
            "verified"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "status"
      ],
      "title": "GelatoIdNumberReport",
      "type": "object",
      "x-expandableFields": [
        "dob",
        "error"
      ]
    },
    "gelato_id_number_report_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification failure.",
          "enum": [
            "id_number_insufficient_document_data",
            "id_number_mismatch",
            "id_number_unverified_other"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoIdNumberReportError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_phone_report": {
      "description": "Result from a phone check",
      "properties": {
        "error": {
          "description": "Details on the verification error. Present when status is `unverified`.",
          "x-nullable": true
        },
        "phone": {
          "description": "Phone to be verified.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this `phone` check.",
          "enum": [
            "unverified",
            "verified"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "status"
      ],
      "title": "GelatoPhoneReport",
      "type": "object",
      "x-expandableFields": [
        "error"
      ]
    },
    "gelato_phone_report_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification failure.",
          "enum": [
            "phone_unverified_other",
            "phone_verification_declined"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoPhoneReportError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_provided_details": {
      "description": "",
      "properties": {
        "email": {
          "description": "Email of user being verified",
          "maxLength": 5000,
          "type": "string"
        },
        "phone": {
          "description": "Phone number of user being verified",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "GelatoProvidedDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_report_document_options": {
      "description": "",
      "properties": {
        "allowed_types": {
          "description": "Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.",
          "items": {
            "enum": [
              "driving_license",
              "id_card",
              "passport"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "require_id_number": {
          "description": "Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.",
          "type": "boolean"
        },
        "require_live_capture": {
          "description": "Disable image uploads, identity document images have to be captured using the device’s camera.",
          "type": "boolean"
        },
        "require_matching_selfie": {
          "description": "Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).",
          "type": "boolean"
        }
      },
      "title": "GelatoReportDocumentOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_report_id_number_options": {
      "description": "",
      "properties": {},
      "title": "GelatoReportIdNumberOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_selfie_report": {
      "description": "Result from a selfie check",
      "properties": {
        "document": {
          "description": "ID of the [File](https://stripe.com/docs/api/files) holding the image of the identity document used in this check.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "error": {
          "description": "Details on the verification error. Present when status is `unverified`.",
          "x-nullable": true
        },
        "selfie": {
          "description": "ID of the [File](https://stripe.com/docs/api/files) holding the image of the selfie used in this check.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this `selfie` check.",
          "enum": [
            "unverified",
            "verified"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "status"
      ],
      "title": "GelatoSelfieReport",
      "type": "object",
      "x-expandableFields": [
        "error"
      ]
    },
    "gelato_selfie_report_error": {
      "description": "",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification failure.",
          "enum": [
            "selfie_document_missing_photo",
            "selfie_face_mismatch",
            "selfie_manipulated",
            "selfie_unverified_other"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoSelfieReportError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_session_document_options": {
      "description": "",
      "properties": {
        "allowed_types": {
          "description": "Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.",
          "items": {
            "enum": [
              "driving_license",
              "id_card",
              "passport"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "require_id_number": {
          "description": "Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.",
          "type": "boolean"
        },
        "require_live_capture": {
          "description": "Disable image uploads, identity document images have to be captured using the device’s camera.",
          "type": "boolean"
        },
        "require_matching_selfie": {
          "description": "Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).",
          "type": "boolean"
        }
      },
      "title": "GelatoSessionDocumentOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_session_email_options": {
      "description": "",
      "properties": {
        "require_verification": {
          "description": "Request one time password verification of `provided_details.email`.",
          "type": "boolean"
        }
      },
      "title": "GelatoSessionEmailOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_session_id_number_options": {
      "description": "",
      "properties": {},
      "title": "GelatoSessionIdNumberOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_session_last_error": {
      "description": "Shows last VerificationSession error",
      "properties": {
        "code": {
          "description": "A short machine-readable string giving the reason for the verification or user-session failure.",
          "enum": [
            "abandoned",
            "consent_declined",
            "country_not_supported",
            "device_not_supported",
            "document_expired",
            "document_type_not_supported",
            "document_unverified_other",
            "email_unverified_other",
            "email_verification_declined",
            "id_number_insufficient_document_data",
            "id_number_mismatch",
            "id_number_unverified_other",
            "phone_unverified_other",
            "phone_verification_declined",
            "selfie_document_missing_photo",
            "selfie_face_mismatch",
            "selfie_manipulated",
            "selfie_unverified_other",
            "under_supported_age"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "reason": {
          "description": "A message that explains the reason for verification or user-session failure.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoSessionLastError",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_session_phone_options": {
      "description": "",
      "properties": {
        "require_verification": {
          "description": "Request one time password verification of `provided_details.phone`.",
          "type": "boolean"
        }
      },
      "title": "GelatoSessionPhoneOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "gelato_verification_report_options": {
      "description": "",
      "properties": {
        "document": {
          "$ref": "#/definitions/gelato_report_document_options"
        },
        "id_number": {
          "$ref": "#/definitions/gelato_report_id_number_options"
        }
      },
      "title": "GelatoVerificationReportOptions",
      "type": "object",
      "x-expandableFields": [
        "document",
        "id_number"
      ]
    },
    "gelato_verification_session_options": {
      "description": "",
      "properties": {
        "document": {
          "$ref": "#/definitions/gelato_session_document_options"
        },
        "email": {
          "$ref": "#/definitions/gelato_session_email_options"
        },
        "id_number": {
          "$ref": "#/definitions/gelato_session_id_number_options"
        },
        "phone": {
          "$ref": "#/definitions/gelato_session_phone_options"
        }
      },
      "title": "GelatoVerificationSessionOptions",
      "type": "object",
      "x-expandableFields": [
        "document",
        "email",
        "id_number",
        "phone"
      ]
    },
    "gelato_verified_outputs": {
      "description": "",
      "properties": {
        "address": {
          "description": "The user's verified address.",
          "x-nullable": true
        },
        "dob": {
          "description": "The user’s verified date of birth.",
          "x-nullable": true
        },
        "email": {
          "description": "The user's verified email address",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "first_name": {
          "description": "The user's verified first name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id_number": {
          "description": "The user's verified id number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id_number_type": {
          "description": "The user's verified id number type.",
          "enum": [
            "br_cpf",
            "sg_nric",
            "us_ssn"
          ],
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "description": "The user's verified last name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "description": "The user's verified phone number",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "GelatoVerifiedOutputs",
      "type": "object",
      "x-expandableFields": [
        "address",
        "dob"
      ]
    },
    "identity.verification_report": {
      "description": "A VerificationReport is the result of an attempt to collect and verify data from a user.\nThe collection of verification checks performed is determined from the `type` and `options`\nparameters used. You can find the result of each verification check performed in the\nappropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as\nreference IDs which can be used to access collected images through the [FileUpload](https://stripe.com/docs/api/files)\nAPI. To configure and create VerificationReports, use the\n[VerificationSession](https://stripe.com/docs/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://stripe.com/docs/identity/verification-sessions#results).",
      "properties": {
        "client_reference_id": {
          "description": "A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "document": {
          "$ref": "#/definitions/gelato_document_report"
        },
        "email": {
          "$ref": "#/definitions/gelato_email_report"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "id_number": {
          "$ref": "#/definitions/gelato_id_number_report"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "identity.verification_report"
          ],
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/gelato_verification_report_options"
        },
        "phone": {
          "$ref": "#/definitions/gelato_phone_report"
        },
        "selfie": {
          "$ref": "#/definitions/gelato_selfie_report"
        },
        "type": {
          "description": "Type of report.",
          "enum": [
            "document",
            "id_number",
            "verification_flow"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "verification_flow": {
          "description": "The configuration token of a Verification Flow from the dashboard.",
          "maxLength": 5000,
          "type": "string"
        },
        "verification_session": {
          "description": "ID of the VerificationSession that created this report.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "type"
      ],
      "title": "GelatoVerificationReport",
      "type": "object",
      "x-expandableFields": [
        "document",
        "email",
        "id_number",
        "options",
        "phone",
        "selfie"
      ],
      "x-resourceId": "identity.verification_report"
    },
    "identity.verification_session": {
      "description": "A VerificationSession guides you through the process of collecting and verifying the identities\nof your users. It contains details about the type of verification, such as what [verification\ncheck](/docs/identity/verification-checks) to perform. Only create one VerificationSession for\neach verification in your system.\n\nA VerificationSession transitions through [multiple\nstatuses](/docs/identity/how-sessions-work) throughout its lifetime as it progresses through\nthe verification flow. The VerificationSession contains the user's verified data after\nverification checks are complete.\n\nRelated guide: [The Verification Sessions API](https://stripe.com/docs/identity/verification-sessions)",
      "properties": {
        "client_reference_id": {
          "description": "A string to reference this user. This can be a customer ID, a session ID, or similar, and can be used to reconcile this verification with your internal systems.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "client_secret": {
          "description": "The short-lived client secret used by Stripe.js to [show a verification modal](https://stripe.com/docs/js/identity/modal) inside your app. This client secret expires after 24 hours and can only be used once. Don’t store it, log it, embed it in a URL, or expose it to anyone other than the user. Make sure that you have TLS enabled on any page that includes the client secret. Refer to our docs on [passing the client secret to the frontend](https://stripe.com/docs/identity/verification-sessions#client-secret) to learn more.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last_error": {
          "description": "If present, this property tells you the last error encountered when processing the verification.",
          "x-nullable": true
        },
        "last_verification_report": {
          "description": "ID of the most recent VerificationReport. [Learn more about accessing detailed verification results.](https://stripe.com/docs/identity/verification-sessions#results)",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/identity.verification_report"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "identity.verification_session"
          ],
          "type": "string"
        },
        "options": {
          "description": "A set of options for the session’s verification checks.",
          "x-nullable": true
        },
        "provided_details": {
          "description": "Details provided about the user being verified. These details may be shown to the user.",
          "x-nullable": true
        },
        "redaction": {
          "description": "Redaction status of this VerificationSession. If the VerificationSession is not redacted, this field will be null.",
          "x-nullable": true
        },
        "related_customer": {
          "description": "Token referencing a Customer resource.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this VerificationSession. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work).",
          "enum": [
            "canceled",
            "processing",
            "requires_input",
            "verified"
          ],
          "type": "string"
        },
        "type": {
          "description": "The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.",
          "enum": [
            "document",
            "id_number",
            "verification_flow"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "url": {
          "description": "The short-lived URL that you use to redirect a user to Stripe to submit their identity information. This URL expires after 48 hours and can only be used once. Don’t store it, log it, send it in emails or expose it to anyone other than the user. Refer to our docs on [verifying identity documents](https://stripe.com/docs/identity/verify-identity-documents?platform=web&type=redirect) to learn how to redirect users to Stripe.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verification_flow": {
          "description": "The configuration token of a Verification Flow from the dashboard.",
          "maxLength": 5000,
          "type": "string"
        },
        "verified_outputs": {
          "description": "The user’s verified data.",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "metadata",
        "object",
        "status",
        "type"
      ],
      "title": "GelatoVerificationSession",
      "type": "object",
      "x-expandableFields": [
        "last_error",
        "last_verification_report",
        "options",
        "provided_details",
        "redaction",
        "verified_outputs"
      ],
      "x-resourceId": "identity.verification_session"
    },
    "inbound_transfers": {
      "description": "",
      "properties": {
        "billing_details": {
          "$ref": "#/definitions/treasury_shared_resource_billing_details"
        },
        "type": {
          "description": "The type of the payment method used in the InboundTransfer.",
          "enum": [
            "us_bank_account"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_account": {
          "$ref": "#/definitions/inbound_transfers_payment_method_details_us_bank_account"
        }
      },
      "required": [
        "billing_details",
        "type"
      ],
      "title": "InboundTransfers",
      "type": "object",
      "x-expandableFields": [
        "billing_details",
        "us_bank_account"
      ]
    },
    "inbound_transfers_payment_method_details_us_bank_account": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Account holder type: individual or company.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "Account type: checkings or savings. Defaults to checking if omitted.",
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          }
        },
        "network": {
          "description": "The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.",
          "enum": [
            "ach"
          ],
          "type": "string"
        },
        "routing_number": {
          "description": "Routing number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "network"
      ],
      "title": "inbound_transfers_payment_method_details_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "mandate"
      ]
    },
    "internal_card": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Brand of the card used in the transaction",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two digit number representing the card's expiration month",
          "type": "integer",
          "x-nullable": true
        },
        "exp_year": {
          "description": "Two digit number representing the card's expiration year",
          "type": "integer",
          "x-nullable": true
        },
        "last4": {
          "description": "The last 4 digits of the card",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "internal_card",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice": {
      "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send invoices to customers](https://stripe.com/docs/billing/invoices/sending)",
      "properties": {
        "account_country": {
          "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_name": {
          "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_tax_ids": {
          "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "amount_due": {
          "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
          "type": "integer"
        },
        "amount_paid": {
          "description": "The amount, in cents (or local equivalent), that was paid.",
          "type": "integer"
        },
        "amount_remaining": {
          "description": "The difference between amount_due and amount_paid, in cents (or local equivalent).",
          "type": "integer"
        },
        "amount_shipping": {
          "description": "This is the sum of all the shipping amounts.",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect Application that created the invoice.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
          "type": "integer",
          "x-nullable": true
        },
        "attempt_count": {
          "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule. If a failure is returned with a non-retryable return code, the invoice can no longer be retried unless a new payment method is obtained. Retries will continue to be scheduled, and attempt_count will continue to increment, but retries will only be executed if a new payment method is obtained.",
          "type": "integer"
        },
        "attempted": {
          "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
          "type": "boolean"
        },
        "auto_advance": {
          "description": "Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.",
          "type": "boolean"
        },
        "automatic_tax": {
          "$ref": "#/definitions/automatic_tax"
        },
        "automatically_finalizes_at": {
          "description": "The time when this invoice is currently scheduled to be automatically finalized. The field will be `null` if the invoice is not scheduled to finalize in the future. If the invoice is not in the draft state, this field will always be `null` - see `finalized_at` for the time when an already-finalized invoice was finalized.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "billing_reason": {
          "description": "Indicates the reason why the invoice was created.\n\n* `manual`: Unrelated to a subscription, for example, created via the invoice editor.\n* `subscription`: No longer in use. Applies to subscriptions from before May 2018 where no distinction was made between updates, cycles, and thresholds.\n* `subscription_create`: A new subscription was created.\n* `subscription_cycle`: A subscription advanced into a new period.\n* `subscription_threshold`: A subscription reached a billing threshold.\n* `subscription_update`: A subscription was updated.\n* `upcoming`: Reserved for simulated invoices, per the upcoming invoice endpoint.",
          "enum": [
            "automatic_pending_invoice_item_invoice",
            "manual",
            "quote_accept",
            "subscription",
            "subscription_create",
            "subscription_cycle",
            "subscription_threshold",
            "subscription_update",
            "upcoming"
          ],
          "type": "string",
          "x-nullable": true
        },
        "charge": {
          "description": "ID of the latest charge generated for this invoice, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "collection_method": {
          "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
          "enum": [
            "charge_automatically",
            "send_invoice"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "custom_fields": {
          "description": "Custom fields displayed on the invoice.",
          "items": {
            "$ref": "#/definitions/invoice_setting_custom_field"
          },
          "type": "array",
          "x-nullable": true
        },
        "customer": {
          "description": "The ID of the customer who will be billed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "customer_address": {
          "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
          "x-nullable": true
        },
        "customer_email": {
          "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_name": {
          "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_phone": {
          "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_shipping": {
          "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
          "x-nullable": true
        },
        "customer_tax_exempt": {
          "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
          "enum": [
            "exempt",
            "none",
            "reverse"
          ],
          "type": "string",
          "x-nullable": true
        },
        "customer_tax_ids": {
          "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
          "items": {
            "$ref": "#/definitions/invoices_resource_invoice_tax_id"
          },
          "type": "array",
          "x-nullable": true
        },
        "default_payment_method": {
          "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "default_source": {
          "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/bank_account"
              },
              {
                "$ref": "#/definitions/card"
              },
              {
                "$ref": "#/definitions/source"
              }
            ]
          },
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "default_tax_rates": {
          "description": "The tax rates applied to this invoice, if any.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discount": {
          "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
          "x-nullable": true
        },
        "discounts": {
          "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                },
                {
                  "$ref": "#/definitions/deleted_discount"
                }
              ]
            }
          },
          "type": "array"
        },
        "due_date": {
          "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "effective_at": {
          "description": "The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "ending_balance": {
          "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
          "type": "integer",
          "x-nullable": true
        },
        "footer": {
          "description": "Footer displayed on the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "from_invoice": {
          "description": "Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.",
          "x-nullable": true
        },
        "hosted_invoice_url": {
          "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object. This property is always present unless the invoice is an upcoming invoice. See [Retrieve an upcoming invoice](https://stripe.com/docs/api/invoices/upcoming) for more details.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice_pdf": {
          "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "$ref": "#/definitions/connect_account_reference"
        },
        "last_finalization_error": {
          "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
          "x-nullable": true
        },
        "latest_revision": {
          "description": "The ID of the most recent non-draft revision of this invoice",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "lines": {
          "description": "The individual line items that make up the invoice. `lines` is sorted as follows: (1) pending invoice items (including prorations) in reverse chronological order, (2) subscription items in reverse chronological order, and (3) invoice items added after invoice creation in chronological order.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/line_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "InvoiceLinesList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "next_payment_attempt": {
          "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "number": {
          "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "invoice"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "paid": {
          "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
          "type": "boolean"
        },
        "paid_out_of_band": {
          "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
          "type": "boolean"
        },
        "payment_intent": {
          "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_settings": {
          "$ref": "#/definitions/invoices_payment_settings"
        },
        "period_end": {
          "description": "End of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.",
          "format": "unix-time",
          "type": "integer"
        },
        "period_start": {
          "description": "Start of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.",
          "format": "unix-time",
          "type": "integer"
        },
        "post_payment_credit_notes_amount": {
          "description": "Total amount of all post-payment credit notes issued for this invoice.",
          "type": "integer"
        },
        "pre_payment_credit_notes_amount": {
          "description": "Total amount of all pre-payment credit notes issued for this invoice.",
          "type": "integer"
        },
        "quote": {
          "description": "The quote this invoice was generated from.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/quote"
              }
            ]
          },
          "x-nullable": true
        },
        "receipt_number": {
          "description": "This is the transaction number that appears on email receipts sent for this invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "rendering": {
          "description": "The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.",
          "x-nullable": true
        },
        "shipping_cost": {
          "description": "The details of the cost of shipping, including the ShippingRate applied on the invoice.",
          "x-nullable": true
        },
        "shipping_details": {
          "description": "Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.",
          "x-nullable": true
        },
        "starting_balance": {
          "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. For revision invoices, this also includes any customer balance that was applied to the original invoice.",
          "type": "integer"
        },
        "statement_descriptor": {
          "description": "Extra information about an invoice for the customer's credit card statement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
          "enum": [
            "draft",
            "open",
            "paid",
            "uncollectible",
            "void"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "status_transitions": {
          "$ref": "#/definitions/invoices_resource_status_transitions"
        },
        "subscription": {
          "description": "The subscription that this invoice was prepared for, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "subscription_details": {
          "description": "Details about the subscription that created this invoice.",
          "x-nullable": true
        },
        "subscription_proration_date": {
          "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
          "type": "integer"
        },
        "subtotal": {
          "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
          "type": "integer"
        },
        "subtotal_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
          "type": "integer",
          "x-nullable": true
        },
        "tax": {
          "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
          "type": "integer",
          "x-nullable": true
        },
        "test_clock": {
          "description": "ID of the test clock this invoice belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "threshold_reason": {
          "$ref": "#/definitions/invoice_threshold_reason"
        },
        "total": {
          "description": "Total after discounts and taxes.",
          "type": "integer"
        },
        "total_discount_amounts": {
          "description": "The aggregate amounts calculated per discount across all line items.",
          "items": {
            "$ref": "#/definitions/discounts_resource_discount_amount"
          },
          "type": "array",
          "x-nullable": true
        },
        "total_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the total amount of the invoice including all discounts but excluding all tax.",
          "type": "integer",
          "x-nullable": true
        },
        "total_pretax_credit_amounts": {
          "items": {
            "$ref": "#/definitions/invoices_resource_pretax_credit_amount"
          },
          "type": "array",
          "x-nullable": true
        },
        "total_tax_amounts": {
          "description": "The aggregate amounts calculated per tax rate for all line items.",
          "items": {
            "$ref": "#/definitions/invoice_tax_amount"
          },
          "type": "array"
        },
        "transfer_data": {
          "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
          "x-nullable": true
        },
        "webhooks_delivered_at": {
          "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount_due",
        "amount_paid",
        "amount_remaining",
        "amount_shipping",
        "attempt_count",
        "attempted",
        "automatic_tax",
        "collection_method",
        "created",
        "currency",
        "default_tax_rates",
        "discounts",
        "issuer",
        "lines",
        "livemode",
        "object",
        "paid",
        "paid_out_of_band",
        "payment_settings",
        "period_end",
        "period_start",
        "post_payment_credit_notes_amount",
        "pre_payment_credit_notes_amount",
        "starting_balance",
        "status_transitions",
        "subtotal",
        "total",
        "total_tax_amounts"
      ],
      "title": "Invoice",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "application",
        "automatic_tax",
        "charge",
        "custom_fields",
        "customer",
        "customer_address",
        "customer_shipping",
        "customer_tax_ids",
        "default_payment_method",
        "default_source",
        "default_tax_rates",
        "discount",
        "discounts",
        "from_invoice",
        "issuer",
        "last_finalization_error",
        "latest_revision",
        "lines",
        "on_behalf_of",
        "payment_intent",
        "payment_settings",
        "quote",
        "rendering",
        "shipping_cost",
        "shipping_details",
        "status_transitions",
        "subscription",
        "subscription_details",
        "test_clock",
        "threshold_reason",
        "total_discount_amounts",
        "total_pretax_credit_amounts",
        "total_tax_amounts",
        "transfer_data"
      ],
      "x-resourceId": "invoice"
    },
    "invoice_installments_card": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether Installments are enabled for this Invoice.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "invoice_installments_card",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_item_threshold_reason": {
      "description": "",
      "properties": {
        "line_item_ids": {
          "description": "The IDs of the line items that triggered the threshold invoice.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "usage_gte": {
          "description": "The quantity threshold boundary that applied to the given line item.",
          "type": "integer"
        }
      },
      "required": [
        "line_item_ids",
        "usage_gte"
      ],
      "title": "InvoiceItemThresholdReason",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_line_item_period": {
      "description": "",
      "properties": {
        "end": {
          "description": "The end of the period, which must be greater than or equal to the start. This value is inclusive.",
          "format": "unix-time",
          "type": "integer"
        },
        "start": {
          "description": "The start of the period. This value is inclusive.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "end",
        "start"
      ],
      "title": "InvoiceLineItemPeriod",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_mandate_options_card": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount to be charged for future payments.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_type": {
          "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
          "enum": [
            "fixed",
            "maximum"
          ],
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
          "maxLength": 200,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "invoice_mandate_options_card",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_acss_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/invoice_payment_method_options_acss_debit_mandate_options"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "invoice_payment_method_options_acss_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "invoice_payment_method_options_acss_debit_mandate_options": {
      "description": "",
      "properties": {
        "transaction_type": {
          "description": "Transaction type of the mandate.",
          "enum": [
            "business",
            "personal"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "invoice_payment_method_options_acss_debit_mandate_options",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_bancontact": {
      "description": "",
      "properties": {
        "preferred_language": {
          "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
          "enum": [
            "de",
            "en",
            "fr",
            "nl"
          ],
          "type": "string"
        }
      },
      "required": [
        "preferred_language"
      ],
      "title": "invoice_payment_method_options_bancontact",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_card": {
      "description": "",
      "properties": {
        "installments": {
          "$ref": "#/definitions/invoice_installments_card"
        },
        "request_three_d_secure": {
          "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
          "enum": [
            "any",
            "automatic",
            "challenge"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "invoice_payment_method_options_card",
      "type": "object",
      "x-expandableFields": [
        "installments"
      ]
    },
    "invoice_payment_method_options_customer_balance": {
      "description": "",
      "properties": {
        "bank_transfer": {
          "$ref": "#/definitions/invoice_payment_method_options_customer_balance_bank_transfer"
        },
        "funding_type": {
          "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
          "enum": [
            "bank_transfer"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "invoice_payment_method_options_customer_balance",
      "type": "object",
      "x-expandableFields": [
        "bank_transfer"
      ]
    },
    "invoice_payment_method_options_customer_balance_bank_transfer": {
      "description": "",
      "properties": {
        "eu_bank_transfer": {
          "$ref": "#/definitions/invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer"
        },
        "type": {
          "description": "The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "invoice_payment_method_options_customer_balance_bank_transfer",
      "type": "object",
      "x-expandableFields": [
        "eu_bank_transfer"
      ]
    },
    "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer": {
      "description": "",
      "properties": {
        "country": {
          "description": "The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.",
          "enum": [
            "BE",
            "DE",
            "ES",
            "FR",
            "IE",
            "NL"
          ],
          "type": "string"
        }
      },
      "required": [
        "country"
      ],
      "title": "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_konbini": {
      "description": "",
      "properties": {},
      "title": "invoice_payment_method_options_konbini",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_sepa_debit": {
      "description": "",
      "properties": {},
      "title": "invoice_payment_method_options_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_payment_method_options_us_bank_account": {
      "description": "",
      "properties": {
        "financial_connections": {
          "$ref": "#/definitions/invoice_payment_method_options_us_bank_account_linked_account_options"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "invoice_payment_method_options_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "financial_connections"
      ]
    },
    "invoice_payment_method_options_us_bank_account_linked_account_options": {
      "description": "",
      "properties": {
        "filters": {
          "$ref": "#/definitions/invoice_payment_method_options_us_bank_account_linked_account_options_filters"
        },
        "permissions": {
          "description": "The list of permissions to request. The `payment_method` permission must be included.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "payment_method",
              "transactions"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "prefetch": {
          "description": "Data features requested to be retrieved upon account creation.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "transactions"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "invoice_payment_method_options_us_bank_account_linked_account_options",
      "type": "object",
      "x-expandableFields": [
        "filters"
      ]
    },
    "invoice_payment_method_options_us_bank_account_linked_account_options_filters": {
      "description": "",
      "properties": {
        "account_subcategories": {
          "description": "The account subcategories to use to filter for possible accounts to link. Valid subcategories are `checking` and `savings`.",
          "items": {
            "enum": [
              "checking",
              "savings"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "invoice_payment_method_options_us_bank_account_linked_account_options_filters",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_rendering_pdf": {
      "description": "",
      "properties": {
        "page_size": {
          "description": "Page size of invoice pdf. Options include a4, letter, and auto. If set to auto, page size will be switched to a4 or letter based on customer locale.",
          "enum": [
            "a4",
            "auto",
            "letter"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "InvoiceRenderingPdf",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_rendering_template": {
      "description": "Invoice Rendering Templates are used to configure how invoices are rendered on surfaces like the PDF. Invoice Rendering Templates\ncan be created from within the Dashboard, and they can be used over the API when creating invoices.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "nickname": {
          "description": "A brief description of the template, hidden from customers",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "invoice_rendering_template"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the template, one of `active` or `archived`.",
          "enum": [
            "active",
            "archived"
          ],
          "type": "string"
        },
        "version": {
          "description": "Version of this template; version increases by one when an update on the template changes any field that controls invoice rendering",
          "type": "integer"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "status",
        "version"
      ],
      "title": "InvoiceRenderingTemplate",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "invoice_rendering_template"
    },
    "invoice_setting_custom_field": {
      "description": "",
      "properties": {
        "name": {
          "description": "The name of the custom field.",
          "maxLength": 5000,
          "type": "string"
        },
        "value": {
          "description": "The value of the custom field.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "InvoiceSettingCustomField",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_setting_customer_rendering_options": {
      "description": "",
      "properties": {
        "amount_tax_display": {
          "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "template": {
          "description": "ID of the invoice rendering template to be used for this customer's invoices. If set, the template will be used on all invoices for this customer unless a template is set directly on the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "InvoiceSettingCustomerRenderingOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_setting_customer_setting": {
      "description": "",
      "properties": {
        "custom_fields": {
          "description": "Default custom fields to be displayed on invoices for this customer.",
          "items": {
            "$ref": "#/definitions/invoice_setting_custom_field"
          },
          "type": "array",
          "x-nullable": true
        },
        "default_payment_method": {
          "description": "ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "footer": {
          "description": "Default footer to be displayed on invoices for this customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "rendering_options": {
          "description": "Default options for invoice PDF rendering for this customer.",
          "x-nullable": true
        }
      },
      "title": "InvoiceSettingCustomerSetting",
      "type": "object",
      "x-expandableFields": [
        "custom_fields",
        "default_payment_method",
        "rendering_options"
      ]
    },
    "invoice_setting_quote_setting": {
      "description": "",
      "properties": {
        "days_until_due": {
          "description": "Number of days within which a customer must pay invoices generated by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.",
          "type": "integer",
          "x-nullable": true
        },
        "issuer": {
          "$ref": "#/definitions/connect_account_reference"
        }
      },
      "required": [
        "issuer"
      ],
      "title": "InvoiceSettingQuoteSetting",
      "type": "object",
      "x-expandableFields": [
        "issuer"
      ]
    },
    "invoice_setting_rendering_options": {
      "description": "",
      "properties": {
        "amount_tax_display": {
          "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "InvoiceSettingRenderingOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "invoice_setting_subscription_schedule_phase_setting": {
      "description": "",
      "properties": {
        "account_tax_ids": {
          "description": "The account tax IDs associated with this phase of the subscription schedule. Will be set on invoices generated by this phase of the subscription schedule.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "days_until_due": {
          "description": "Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.",
          "type": "integer",
          "x-nullable": true
        },
        "issuer": {
          "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
          "x-nullable": true
        }
      },
      "title": "InvoiceSettingSubscriptionSchedulePhaseSetting",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "issuer"
      ]
    },
    "invoice_setting_subscription_schedule_setting": {
      "description": "",
      "properties": {
        "account_tax_ids": {
          "description": "The account tax IDs associated with the subscription schedule. Will be set on invoices generated by the subscription schedule.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "days_until_due": {
          "description": "Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.",
          "type": "integer",
          "x-nullable": true
        },
        "issuer": {
          "$ref": "#/definitions/connect_account_reference"
        }
      },
      "required": [
        "issuer"
      ],
      "title": "InvoiceSettingSubscriptionScheduleSetting",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "issuer"
      ]
    },
    "invoice_tax_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent), of the tax.",
          "type": "integer"
        },
        "inclusive": {
          "description": "Whether this tax amount is inclusive or exclusive.",
          "type": "boolean"
        },
        "tax_rate": {
          "description": "The tax rate that was applied to get this tax amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/tax_rate"
              }
            ]
          }
        },
        "taxability_reason": {
          "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
          "enum": [
            "customer_exempt",
            "not_collecting",
            "not_subject_to_tax",
            "not_supported",
            "portion_product_exempt",
            "portion_reduced_rated",
            "portion_standard_rated",
            "product_exempt",
            "product_exempt_holiday",
            "proportionally_rated",
            "reduced_rated",
            "reverse_charge",
            "standard_rated",
            "taxable_basis_reduced",
            "zero_rated"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "taxable_amount": {
          "description": "The amount on which tax is calculated, in cents (or local equivalent).",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "inclusive",
        "tax_rate"
      ],
      "title": "InvoiceTaxAmount",
      "type": "object",
      "x-expandableFields": [
        "tax_rate"
      ]
    },
    "invoice_threshold_reason": {
      "description": "",
      "properties": {
        "amount_gte": {
          "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
          "type": "integer",
          "x-nullable": true
        },
        "item_reasons": {
          "description": "Indicates which line items triggered a threshold invoice.",
          "items": {
            "$ref": "#/definitions/invoice_item_threshold_reason"
          },
          "type": "array"
        }
      },
      "required": [
        "item_reasons"
      ],
      "title": "InvoiceThresholdReason",
      "type": "object",
      "x-expandableFields": [
        "item_reasons"
      ]
    },
    "invoice_transfer_data": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
          "type": "integer",
          "x-nullable": true
        },
        "destination": {
          "description": "The account where funds from the payment will be transferred to upon payment success.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "InvoiceTransferData",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "invoiceitem": {
      "description": "Invoice Items represent the component lines of an [invoice](https://stripe.com/docs/api/invoices). An invoice item is added to an\ninvoice by creating or updating it with an `invoice` field, at which point it will be included as\n[an invoice line item](https://stripe.com/docs/api/invoices/line_item) within\n[invoice.lines](https://stripe.com/docs/api/invoices/object#invoice_object-lines).\n\nInvoice Items can be created before you are ready to actually send the invoice. This can be particularly useful when combined\nwith a [subscription](https://stripe.com/docs/api/subscriptions). Sometimes you want to add a charge or credit to a customer, but actually charge\nor credit the customer’s card only at the end of a regular billing cycle. This is useful for combining several charges\n(to minimize per-transaction fees), or for having Stripe tabulate your usage-based billing totals.\n\nRelated guides: [Integrate with the Invoicing API](https://stripe.com/docs/invoicing/integration), [Subscription Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).",
      "properties": {
        "amount": {
          "description": "Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "The ID of the customer who will be billed when this invoice item is billed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "date": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discountable": {
          "description": "If true, discounts will apply to this invoice item. Always false for prorations.",
          "type": "boolean"
        },
        "discounts": {
          "description": "The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The ID of the invoice this invoice item belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "invoiceitem"
          ],
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/invoice_line_item_period"
        },
        "price": {
          "description": "The price of the invoice item.",
          "x-nullable": true
        },
        "proration": {
          "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.",
          "type": "integer"
        },
        "subscription": {
          "description": "The subscription that this invoice item has been created for, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "subscription_item": {
          "description": "The subscription item that this invoice item has been created for, if any.",
          "maxLength": 5000,
          "type": "string"
        },
        "tax_rates": {
          "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        },
        "test_clock": {
          "description": "ID of the test clock this invoice item belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "unit_amount": {
          "description": "Unit amount (in the `currency` specified) of the invoice item.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "currency",
        "customer",
        "date",
        "discountable",
        "id",
        "livemode",
        "object",
        "period",
        "proration",
        "quantity"
      ],
      "title": "InvoiceItem",
      "type": "object",
      "x-expandableFields": [
        "customer",
        "discounts",
        "invoice",
        "period",
        "price",
        "subscription",
        "tax_rates",
        "test_clock"
      ],
      "x-resourceId": "invoiceitem"
    },
    "invoices_payment_method_options": {
      "description": "",
      "properties": {
        "acss_debit": {
          "description": "If paying by `acss_debit`, this sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "bancontact": {
          "description": "If paying by `bancontact`, this sub-hash contains details about the Bancontact payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "card": {
          "description": "If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "customer_balance": {
          "description": "If paying by `customer_balance`, this sub-hash contains details about the Bank transfer payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "konbini": {
          "description": "If paying by `konbini`, this sub-hash contains details about the Konbini payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "sepa_debit": {
          "description": "If paying by `sepa_debit`, this sub-hash contains details about the SEPA Direct Debit payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "us_bank_account": {
          "description": "If paying by `us_bank_account`, this sub-hash contains details about the ACH direct debit payment method options to pass to the invoice’s PaymentIntent.",
          "x-nullable": true
        }
      },
      "title": "InvoicesPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "bancontact",
        "card",
        "customer_balance",
        "konbini",
        "sepa_debit",
        "us_bank_account"
      ]
    },
    "invoices_payment_settings": {
      "description": "",
      "properties": {
        "default_mandate": {
          "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_method_options": {
          "description": "Payment-method-specific configuration to provide to the invoice’s PaymentIntent.",
          "x-nullable": true
        },
        "payment_method_types": {
          "description": "The list of payment method types (e.g. card) to provide to the invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
          "items": {
            "enum": [
              "ach_credit_transfer",
              "ach_debit",
              "acss_debit",
              "amazon_pay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "boleto",
              "card",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "konbini",
              "link",
              "multibanco",
              "p24",
              "paynow",
              "paypal",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "swish",
              "us_bank_account",
              "wechat_pay"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "InvoicesPaymentSettings",
      "type": "object",
      "x-expandableFields": [
        "payment_method_options"
      ]
    },
    "invoices_resource_from_invoice": {
      "description": "",
      "properties": {
        "action": {
          "description": "The relation between this invoice and the cloned invoice",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The invoice that was cloned.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          }
        }
      },
      "required": [
        "action",
        "invoice"
      ],
      "title": "InvoicesResourceFromInvoice",
      "type": "object",
      "x-expandableFields": [
        "invoice"
      ]
    },
    "invoices_resource_invoice_rendering": {
      "description": "",
      "properties": {
        "amount_tax_display": {
          "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "pdf": {
          "description": "Invoice pdf rendering options",
          "x-nullable": true
        },
        "template": {
          "description": "ID of the rendering template that the invoice is formatted by.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "template_version": {
          "description": "Version of the rendering template that the invoice is using.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "InvoicesResourceInvoiceRendering",
      "type": "object",
      "x-expandableFields": [
        "pdf"
      ]
    },
    "invoices_resource_invoice_tax_id": {
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`",
          "enum": [
            "ad_nrt",
            "ae_trn",
            "ar_cuit",
            "au_abn",
            "au_arn",
            "bg_uic",
            "bh_vat",
            "bo_tin",
            "br_cnpj",
            "br_cpf",
            "ca_bn",
            "ca_gst_hst",
            "ca_pst_bc",
            "ca_pst_mb",
            "ca_pst_sk",
            "ca_qst",
            "ch_uid",
            "ch_vat",
            "cl_tin",
            "cn_tin",
            "co_nit",
            "cr_tin",
            "de_stn",
            "do_rcn",
            "ec_ruc",
            "eg_tin",
            "es_cif",
            "eu_oss_vat",
            "eu_vat",
            "gb_vat",
            "ge_vat",
            "hk_br",
            "hr_oib",
            "hu_tin",
            "id_npwp",
            "il_vat",
            "in_gst",
            "is_vat",
            "jp_cn",
            "jp_rn",
            "jp_trn",
            "ke_pin",
            "kr_brn",
            "kz_bin",
            "li_uid",
            "mx_rfc",
            "my_frp",
            "my_itn",
            "my_sst",
            "ng_tin",
            "no_vat",
            "no_voec",
            "nz_gst",
            "om_vat",
            "pe_ruc",
            "ph_tin",
            "ro_tin",
            "rs_pib",
            "ru_inn",
            "ru_kpp",
            "sa_vat",
            "sg_gst",
            "sg_uen",
            "si_tin",
            "sv_nit",
            "th_vat",
            "tr_tin",
            "tw_vat",
            "ua_vat",
            "unknown",
            "us_ein",
            "uy_ruc",
            "ve_rif",
            "vn_tin",
            "za_vat"
          ],
          "type": "string"
        },
        "value": {
          "description": "The value of the tax ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "type"
      ],
      "title": "InvoicesResourceInvoiceTaxID",
      "type": "object",
      "x-expandableFields": []
    },
    "invoices_resource_line_items_credited_items": {
      "description": "",
      "properties": {
        "invoice": {
          "description": "Invoice containing the credited invoice line items",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice_line_items": {
          "description": "Credited invoice line items",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "invoice",
        "invoice_line_items"
      ],
      "title": "InvoicesResourceLineItemsCreditedItems",
      "type": "object",
      "x-expandableFields": []
    },
    "invoices_resource_line_items_proration_details": {
      "description": "",
      "properties": {
        "credited_items": {
          "description": "For a credit proration `line_item`, the original debit line_items to which the credit proration applies.",
          "x-nullable": true
        }
      },
      "title": "InvoicesResourceLineItemsProrationDetails",
      "type": "object",
      "x-expandableFields": [
        "credited_items"
      ]
    },
    "invoices_resource_pretax_credit_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent), of the pretax credit amount.",
          "type": "integer"
        },
        "credit_balance_transaction": {
          "description": "The credit balance transaction that was applied to get this pretax credit amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/billing.credit_balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "discount": {
          "description": "The discount that was applied to get this pretax credit amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/discount"
              },
              {
                "$ref": "#/definitions/deleted_discount"
              }
            ]
          }
        },
        "margin": {
          "description": "The margin that was applied to get this pretax credit amount.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/margin"
              }
            ]
          }
        },
        "type": {
          "description": "Type of the pretax credit amount referenced.",
          "enum": [
            "credit_balance_transaction",
            "discount"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "amount",
        "type"
      ],
      "title": "InvoicesResourcePretaxCreditAmount",
      "type": "object",
      "x-expandableFields": [
        "credit_balance_transaction",
        "discount",
        "margin"
      ]
    },
    "invoices_resource_shipping_cost": {
      "description": "",
      "properties": {
        "amount_subtotal": {
          "description": "Total shipping cost before any taxes are applied.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total shipping cost after taxes are applied.",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The ID of the ShippingRate for this invoice.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/shipping_rate"
              }
            ]
          },
          "x-nullable": true
        },
        "taxes": {
          "description": "The taxes applied to the shipping rate.",
          "items": {
            "$ref": "#/definitions/line_items_tax_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "amount_subtotal",
        "amount_tax",
        "amount_total"
      ],
      "title": "InvoicesResourceShippingCost",
      "type": "object",
      "x-expandableFields": [
        "shipping_rate",
        "taxes"
      ]
    },
    "invoices_resource_status_transitions": {
      "description": "",
      "properties": {
        "finalized_at": {
          "description": "The time that the invoice draft was finalized.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "marked_uncollectible_at": {
          "description": "The time that the invoice was marked uncollectible.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "paid_at": {
          "description": "The time that the invoice was paid.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "voided_at": {
          "description": "The time that the invoice was voided.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "InvoicesResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing.authorization": {
      "description": "When an [issued card](https://stripe.com/docs/issuing) is used to make a purchase, an Issuing `Authorization`\nobject is created. [Authorizations](https://stripe.com/docs/issuing/purchases/authorizations) must be approved for the\npurchase to be completed successfully.\n\nRelated guide: [Issued card authorizations](https://stripe.com/docs/issuing/purchases/authorizations)",
      "properties": {
        "amount": {
          "description": "The total amount that was authorized or rejected. This amount is in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). `amount` should be the same as `merchant_amount`, unless `currency` and `merchant_currency` are different.",
          "type": "integer"
        },
        "amount_details": {
          "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "x-nullable": true
        },
        "approved": {
          "description": "Whether the authorization has been approved.",
          "type": "boolean"
        },
        "authorization_method": {
          "description": "How the card details were provided.",
          "enum": [
            "chip",
            "contactless",
            "keyed_in",
            "online",
            "swipe"
          ],
          "type": "string"
        },
        "balance_transactions": {
          "description": "List of balance transactions associated with this authorization.",
          "items": {
            "$ref": "#/definitions/balance_transaction"
          },
          "type": "array"
        },
        "card": {
          "$ref": "#/definitions/issuing.card"
        },
        "cardholder": {
          "description": "The cardholder to whom this authorization belongs.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.cardholder"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "The currency of the cardholder. This currency can be different from the currency presented at authorization and the `merchant_currency` field on this authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "fleet": {
          "description": "Fleet-specific information for authorizations using Fleet cards.",
          "x-nullable": true
        },
        "fuel": {
          "description": "Information about fuel that was purchased with this transaction. Typically this information is received from the merchant after the authorization has been approved and the fuel dispensed.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "merchant_amount": {
          "description": "The total amount that was authorized or rejected. This amount is in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). `merchant_amount` should be the same as `amount`, unless `merchant_currency` and `currency` are different.",
          "type": "integer"
        },
        "merchant_currency": {
          "description": "The local currency that was presented to the cardholder for the authorization. This currency can be different from the cardholder currency and the `currency` field on this authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "merchant_data": {
          "$ref": "#/definitions/issuing_authorization_merchant_data"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "network_data": {
          "description": "Details about the authorization, such as identifiers, set by the card network.",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.authorization"
          ],
          "type": "string"
        },
        "pending_request": {
          "description": "The pending authorization request. This field will only be non-null during an `issuing_authorization.request` webhook.",
          "x-nullable": true
        },
        "request_history": {
          "description": "History of every time a `pending_request` authorization was approved/declined, either by you directly or by Stripe (e.g. based on your spending_controls). If the merchant changes the authorization by performing an incremental authorization, you can look at this field to see the previous requests for the authorization. This field can be helpful in determining why a given authorization was approved/declined.",
          "items": {
            "$ref": "#/definitions/issuing_authorization_request"
          },
          "type": "array"
        },
        "status": {
          "description": "The current status of the authorization in its lifecycle.",
          "enum": [
            "closed",
            "pending",
            "reversed"
          ],
          "type": "string"
        },
        "token": {
          "description": "[Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this authorization. If a network token was not used for this authorization, this field will be null.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.token"
              }
            ]
          },
          "x-nullable": true
        },
        "transactions": {
          "description": "List of [transactions](https://stripe.com/docs/api/issuing/transactions) associated with this authorization.",
          "items": {
            "$ref": "#/definitions/issuing.transaction"
          },
          "type": "array"
        },
        "treasury": {
          "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this authorization if it was created on a [FinancialAccount](https://stripe.com/docs/api/treasury/financial_accounts).",
          "x-nullable": true
        },
        "verification_data": {
          "$ref": "#/definitions/issuing_authorization_verification_data"
        },
        "wallet": {
          "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "approved",
        "authorization_method",
        "balance_transactions",
        "card",
        "created",
        "currency",
        "id",
        "livemode",
        "merchant_amount",
        "merchant_currency",
        "merchant_data",
        "metadata",
        "object",
        "request_history",
        "status",
        "transactions",
        "verification_data"
      ],
      "title": "IssuingAuthorization",
      "type": "object",
      "x-expandableFields": [
        "amount_details",
        "balance_transactions",
        "card",
        "cardholder",
        "fleet",
        "fuel",
        "merchant_data",
        "network_data",
        "pending_request",
        "request_history",
        "token",
        "transactions",
        "treasury",
        "verification_data"
      ],
      "x-resourceId": "issuing.authorization"
    },
    "issuing.card": {
      "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
      "properties": {
        "brand": {
          "description": "The brand of the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "cancellation_reason": {
          "description": "The reason why the card was canceled.",
          "enum": [
            "design_rejected",
            "lost",
            "stolen"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "cardholder": {
          "$ref": "#/definitions/issuing.cardholder"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
          "type": "string"
        },
        "cvc": {
          "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
          "maxLength": 5000,
          "type": "string"
        },
        "exp_month": {
          "description": "The expiration month of the card.",
          "type": "integer"
        },
        "exp_year": {
          "description": "The expiration year of the card.",
          "type": "integer"
        },
        "financial_account": {
          "description": "The financial account this card is attached to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last 4 digits of the card number.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "number": {
          "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.card"
          ],
          "type": "string"
        },
        "personalization_design": {
          "description": "The personalization design object belonging to this card.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.personalization_design"
              }
            ]
          },
          "x-nullable": true
        },
        "replaced_by": {
          "description": "The latest card that replaces this card, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.card"
              }
            ]
          },
          "x-nullable": true
        },
        "replacement_for": {
          "description": "The card this card replaces, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.card"
              }
            ]
          },
          "x-nullable": true
        },
        "replacement_reason": {
          "description": "The reason why the previous card needed to be replaced.",
          "enum": [
            "damaged",
            "expired",
            "lost",
            "stolen"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "shipping": {
          "description": "Where and how the card will be shipped.",
          "x-nullable": true
        },
        "spending_controls": {
          "$ref": "#/definitions/issuing_card_authorization_controls"
        },
        "status": {
          "description": "Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.",
          "enum": [
            "active",
            "canceled",
            "inactive"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "type": {
          "description": "The type of the card.",
          "enum": [
            "physical",
            "virtual"
          ],
          "type": "string"
        },
        "wallets": {
          "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
          "x-nullable": true
        }
      },
      "required": [
        "brand",
        "cardholder",
        "created",
        "currency",
        "exp_month",
        "exp_year",
        "id",
        "last4",
        "livemode",
        "metadata",
        "object",
        "spending_controls",
        "status",
        "type"
      ],
      "title": "IssuingCard",
      "type": "object",
      "x-expandableFields": [
        "cardholder",
        "personalization_design",
        "replaced_by",
        "replacement_for",
        "shipping",
        "spending_controls",
        "wallets"
      ],
      "x-resourceId": "issuing.card"
    },
    "issuing.cardholder": {
      "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
      "properties": {
        "billing": {
          "$ref": "#/definitions/issuing_cardholder_address"
        },
        "company": {
          "description": "Additional information about a `company` cardholder.",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "email": {
          "description": "The cardholder's email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "individual": {
          "description": "Additional information about an `individual` cardholder.",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "The cardholder's name. This will be printed on cards issued to them.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.cardholder"
          ],
          "type": "string"
        },
        "phone_number": {
          "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_locales": {
          "description": "The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.\n This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.",
          "items": {
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "it"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "requirements": {
          "$ref": "#/definitions/issuing_cardholder_requirements"
        },
        "spending_controls": {
          "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
          "x-nullable": true
        },
        "status": {
          "description": "Specifies whether to permit authorizations on this cardholder's cards.",
          "enum": [
            "active",
            "blocked",
            "inactive"
          ],
          "type": "string"
        },
        "type": {
          "description": "One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "billing",
        "created",
        "id",
        "livemode",
        "metadata",
        "name",
        "object",
        "requirements",
        "status",
        "type"
      ],
      "title": "IssuingCardholder",
      "type": "object",
      "x-expandableFields": [
        "billing",
        "company",
        "individual",
        "requirements",
        "spending_controls"
      ],
      "x-resourceId": "issuing.cardholder"
    },
    "issuing.dispute": {
      "description": "As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.\n\nRelated guide: [Issuing disputes](https://stripe.com/docs/issuing/purchases/disputes)",
      "properties": {
        "amount": {
          "description": "Disputed amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Usually the amount of the `transaction`, but can differ (usually because of currency fluctuation).",
          "type": "integer"
        },
        "balance_transactions": {
          "description": "List of balance transactions associated with the dispute.",
          "items": {
            "$ref": "#/definitions/balance_transaction"
          },
          "type": "array",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "The currency the `transaction` was made in.",
          "type": "string"
        },
        "evidence": {
          "$ref": "#/definitions/issuing_dispute_evidence"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "loss_reason": {
          "description": "The enum that describes the dispute loss outcome. If the dispute is not lost, this field will be absent. New enum values may be added in the future, so be sure to handle unknown values.",
          "enum": [
            "cardholder_authentication_issuer_liability",
            "eci5_token_transaction_with_tavv",
            "excess_disputes_in_timeframe",
            "has_not_met_the_minimum_dispute_amount_requirements",
            "invalid_duplicate_dispute",
            "invalid_incorrect_amount_dispute",
            "invalid_no_authorization",
            "invalid_use_of_disputes",
            "merchandise_delivered_or_shipped",
            "merchandise_or_service_as_described",
            "not_cancelled",
            "other",
            "refund_issued",
            "submitted_beyond_allowable_time_limit",
            "transaction_3ds_required",
            "transaction_approved_after_prior_fraud_dispute",
            "transaction_authorized",
            "transaction_electronically_read",
            "transaction_qualifies_for_visa_easy_payment_service",
            "transaction_unattended"
          ],
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.dispute"
          ],
          "type": "string"
        },
        "status": {
          "description": "Current status of the dispute.",
          "enum": [
            "expired",
            "lost",
            "submitted",
            "unsubmitted",
            "won"
          ],
          "type": "string"
        },
        "transaction": {
          "description": "The transaction being disputed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.transaction"
              }
            ]
          }
        },
        "treasury": {
          "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this dispute if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "evidence",
        "id",
        "livemode",
        "metadata",
        "object",
        "status",
        "transaction"
      ],
      "title": "IssuingDispute",
      "type": "object",
      "x-expandableFields": [
        "balance_transactions",
        "evidence",
        "transaction",
        "treasury"
      ],
      "x-resourceId": "issuing.dispute"
    },
    "issuing.personalization_design": {
      "description": "A Personalization Design is a logical grouping of a Physical Bundle, card logo, and carrier text that represents a product line.",
      "properties": {
        "card_logo": {
          "description": "The file for the card logo to use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "carrier_text": {
          "description": "Hash containing carrier text, for use with physical bundles that support carrier text.",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "lookup_key": {
          "description": "A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "Friendly display name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.personalization_design"
          ],
          "type": "string"
        },
        "physical_bundle": {
          "description": "The physical bundle object belonging to this personalization design.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.physical_bundle"
              }
            ]
          }
        },
        "preferences": {
          "$ref": "#/definitions/issuing_personalization_design_preferences"
        },
        "rejection_reasons": {
          "$ref": "#/definitions/issuing_personalization_design_rejection_reasons"
        },
        "status": {
          "description": "Whether this personalization design can be used to create cards.",
          "enum": [
            "active",
            "inactive",
            "rejected",
            "review"
          ],
          "type": "string"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "metadata",
        "object",
        "physical_bundle",
        "preferences",
        "rejection_reasons",
        "status"
      ],
      "title": "IssuingPersonalizationDesign",
      "type": "object",
      "x-expandableFields": [
        "card_logo",
        "carrier_text",
        "physical_bundle",
        "preferences",
        "rejection_reasons"
      ],
      "x-resourceId": "issuing.personalization_design"
    },
    "issuing.physical_bundle": {
      "description": "A Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.",
      "properties": {
        "features": {
          "$ref": "#/definitions/issuing_physical_bundle_features"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "name": {
          "description": "Friendly display name.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.physical_bundle"
          ],
          "type": "string"
        },
        "status": {
          "description": "Whether this physical bundle can be used to create cards.",
          "enum": [
            "active",
            "inactive",
            "review"
          ],
          "type": "string"
        },
        "type": {
          "description": "Whether this physical bundle is a standard Stripe offering or custom-made for you.",
          "enum": [
            "custom",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "features",
        "id",
        "livemode",
        "name",
        "object",
        "status",
        "type"
      ],
      "title": "IssuingPhysicalBundle",
      "type": "object",
      "x-expandableFields": [
        "features"
      ],
      "x-resourceId": "issuing.physical_bundle"
    },
    "issuing.settlement": {
      "description": "When a non-stripe BIN is used, any use of an [issued card](https://stripe.com/docs/issuing) must be settled directly with the card network. The net amount owed is represented by an Issuing `Settlement` object.",
      "properties": {
        "bin": {
          "description": "The Bank Identification Number reflecting this settlement record.",
          "maxLength": 5000,
          "type": "string"
        },
        "clearing_date": {
          "description": "The date that the transactions are cleared and posted to user's accounts.",
          "format": "unix-time",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "interchange_fees": {
          "description": "The total interchange received as reimbursement for the transactions.",
          "type": "integer"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "net_total": {
          "description": "The total net amount required to settle with the network.",
          "type": "integer"
        },
        "network": {
          "description": "The card network for this settlement report. One of [\"visa\", \"maestro\"]",
          "enum": [
            "maestro",
            "visa"
          ],
          "type": "string"
        },
        "network_fees": {
          "description": "The total amount of fees owed to the network.",
          "type": "integer"
        },
        "network_settlement_identifier": {
          "description": "The Settlement Identification Number assigned by the network.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.settlement"
          ],
          "type": "string"
        },
        "settlement_service": {
          "description": "One of `international` or `uk_national_net`.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "The current processing status of this settlement.",
          "enum": [
            "complete",
            "pending"
          ],
          "type": "string"
        },
        "transaction_count": {
          "description": "The total number of transactions reflected in this settlement.",
          "type": "integer"
        },
        "transaction_volume": {
          "description": "The total transaction amount reflected in this settlement.",
          "type": "integer"
        }
      },
      "required": [
        "bin",
        "clearing_date",
        "created",
        "currency",
        "id",
        "interchange_fees",
        "livemode",
        "metadata",
        "net_total",
        "network",
        "network_fees",
        "network_settlement_identifier",
        "object",
        "settlement_service",
        "status",
        "transaction_count",
        "transaction_volume"
      ],
      "title": "IssuingSettlement",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "issuing.settlement"
    },
    "issuing.token": {
      "description": "An issuing token object is created when an issued card is added to a digital wallet. As a [card issuer](https://stripe.com/docs/issuing), you can [view and manage these tokens](https://stripe.com/docs/issuing/controls/token-management) through Stripe.",
      "properties": {
        "card": {
          "description": "Card associated with this token.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.card"
              }
            ]
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "device_fingerprint": {
          "description": "The hashed ID derived from the device ID from the card network associated with the token.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last four digits of the token.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "network": {
          "description": "The token service provider / card network associated with the token.",
          "enum": [
            "mastercard",
            "visa"
          ],
          "type": "string"
        },
        "network_data": {
          "$ref": "#/definitions/issuing_network_token_network_data"
        },
        "network_updated_at": {
          "description": "Time at which the token was last updated by the card network. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.token"
          ],
          "type": "string"
        },
        "status": {
          "description": "The usage state of the token.",
          "enum": [
            "active",
            "deleted",
            "requested",
            "suspended"
          ],
          "type": "string"
        },
        "wallet_provider": {
          "description": "The digital wallet for this token, if one was used.",
          "enum": [
            "apple_pay",
            "google_pay",
            "samsung_pay"
          ],
          "type": "string"
        }
      },
      "required": [
        "card",
        "created",
        "id",
        "livemode",
        "network",
        "network_updated_at",
        "object",
        "status"
      ],
      "title": "IssuingNetworkToken",
      "type": "object",
      "x-expandableFields": [
        "card",
        "network_data"
      ],
      "x-resourceId": "issuing.token"
    },
    "issuing.transaction": {
      "description": "Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund, is represented by an Issuing\n`Transaction` object.\n\nRelated guide: [Issued card transactions](https://stripe.com/docs/issuing/purchases/transactions)",
      "properties": {
        "amount": {
          "description": "The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "amount_details": {
          "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "x-nullable": true
        },
        "authorization": {
          "description": "The `Authorization` object that led to this transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.authorization"
              }
            ]
          },
          "x-nullable": true
        },
        "balance_transaction": {
          "description": "ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "card": {
          "description": "The card used to make this transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.card"
              }
            ]
          }
        },
        "cardholder": {
          "description": "The cardholder to whom this transaction belongs.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.cardholder"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "dispute": {
          "description": "If you've disputed the transaction, the ID of the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.dispute"
              }
            ]
          },
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "merchant_amount": {
          "description": "The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.",
          "type": "integer"
        },
        "merchant_currency": {
          "description": "The currency with which the merchant is taking payment.",
          "type": "string"
        },
        "merchant_data": {
          "$ref": "#/definitions/issuing_authorization_merchant_data"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "network_data": {
          "description": "Details about the transaction, such as processing dates, set by the card network.",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "issuing.transaction"
          ],
          "type": "string"
        },
        "purchase_details": {
          "description": "Additional purchase information that is optionally provided by the merchant.",
          "x-nullable": true
        },
        "token": {
          "description": "[Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this transaction. If a network token was not used for this transaction, this field will be null.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/issuing.token"
              }
            ]
          },
          "x-nullable": true
        },
        "treasury": {
          "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this transaction if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
          "x-nullable": true
        },
        "type": {
          "description": "The nature of the transaction.",
          "enum": [
            "capture",
            "refund"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "wallet": {
          "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
          "enum": [
            "apple_pay",
            "google_pay",
            "samsung_pay"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "card",
        "created",
        "currency",
        "id",
        "livemode",
        "merchant_amount",
        "merchant_currency",
        "merchant_data",
        "metadata",
        "object",
        "type"
      ],
      "title": "IssuingTransaction",
      "type": "object",
      "x-expandableFields": [
        "amount_details",
        "authorization",
        "balance_transaction",
        "card",
        "cardholder",
        "dispute",
        "merchant_data",
        "network_data",
        "purchase_details",
        "token",
        "treasury"
      ],
      "x-resourceId": "issuing.transaction"
    },
    "issuing_authorization_amount_details": {
      "description": "",
      "properties": {
        "atm_fee": {
          "description": "The fee charged by the ATM for the cash withdrawal.",
          "type": "integer",
          "x-nullable": true
        },
        "cashback_amount": {
          "description": "The amount of cash requested by the cardholder.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationAmountDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_authentication_exemption": {
      "description": "",
      "properties": {
        "claimed_by": {
          "description": "The entity that requested the exemption, either the acquiring merchant or the Issuing user.",
          "enum": [
            "acquirer",
            "issuer"
          ],
          "type": "string"
        },
        "type": {
          "description": "The specific exemption claimed for this authorization.",
          "enum": [
            "low_value_transaction",
            "transaction_risk_analysis",
            "unknown"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "claimed_by",
        "type"
      ],
      "title": "IssuingAuthorizationAuthenticationExemption",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_fleet_cardholder_prompt_data": {
      "description": "",
      "properties": {
        "alphanumeric_id": {
          "description": "[Deprecated] An alphanumeric ID, though typical point of sales only support numeric entry. The card program can be configured to prompt for a vehicle ID, driver ID, or generic ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "driver_id": {
          "description": "Driver ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "odometer": {
          "description": "Odometer reading.",
          "type": "integer",
          "x-nullable": true
        },
        "unspecified_id": {
          "description": "An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_id": {
          "description": "User ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "vehicle_number": {
          "description": "Vehicle number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetCardholderPromptData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_fleet_data": {
      "description": "",
      "properties": {
        "cardholder_prompt_data": {
          "description": "Answers to prompts presented to the cardholder at the point of sale. Prompted fields vary depending on the configuration of your physical fleet cards. Typical points of sale support only numeric entry.",
          "x-nullable": true
        },
        "purchase_type": {
          "description": "The type of purchase.",
          "enum": [
            "fuel_and_non_fuel_purchase",
            "fuel_purchase",
            "non_fuel_purchase"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reported_breakdown": {
          "description": "More information about the total amount. Typically this information is received from the merchant after the authorization has been approved and the fuel dispensed. This information is not guaranteed to be accurate as some merchants may provide unreliable data.",
          "x-nullable": true
        },
        "service_type": {
          "description": "The type of fuel service.",
          "enum": [
            "full_service",
            "non_fuel_transaction",
            "self_service"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetData",
      "type": "object",
      "x-expandableFields": [
        "cardholder_prompt_data",
        "reported_breakdown"
      ]
    },
    "issuing_authorization_fleet_fuel_price_data": {
      "description": "",
      "properties": {
        "gross_amount_decimal": {
          "description": "Gross fuel amount that should equal Fuel Quantity multiplied by Fuel Unit Cost, inclusive of taxes.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetFuelPriceData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_fleet_non_fuel_price_data": {
      "description": "",
      "properties": {
        "gross_amount_decimal": {
          "description": "Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetNonFuelPriceData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_fleet_reported_breakdown": {
      "description": "",
      "properties": {
        "fuel": {
          "description": "Breakdown of fuel portion of the purchase.",
          "x-nullable": true
        },
        "non_fuel": {
          "description": "Breakdown of non-fuel portion of the purchase.",
          "x-nullable": true
        },
        "tax": {
          "description": "Information about tax included in this transaction.",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetReportedBreakdown",
      "type": "object",
      "x-expandableFields": [
        "fuel",
        "non_fuel",
        "tax"
      ]
    },
    "issuing_authorization_fleet_tax_data": {
      "description": "",
      "properties": {
        "local_amount_decimal": {
          "description": "Amount of state or provincial Sales Tax included in the transaction amount. `null` if not reported by merchant or not subject to tax.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "national_amount_decimal": {
          "description": "Amount of national Sales Tax or VAT included in the transaction amount. `null` if not reported by merchant or not subject to tax.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFleetTaxData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_fuel_data": {
      "description": "",
      "properties": {
        "industry_product_code": {
          "description": "[Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity_decimal": {
          "description": "The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The type of fuel that was purchased.",
          "enum": [
            "diesel",
            "other",
            "unleaded_plus",
            "unleaded_regular",
            "unleaded_super"
          ],
          "type": "string",
          "x-nullable": true
        },
        "unit": {
          "description": "The units for `quantity_decimal`.",
          "enum": [
            "charging_minute",
            "imperial_gallon",
            "kilogram",
            "kilowatt_hour",
            "liter",
            "other",
            "pound",
            "us_gallon"
          ],
          "type": "string",
          "x-nullable": true
        },
        "unit_cost_decimal": {
          "description": "The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationFuelData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_merchant_data": {
      "description": "",
      "properties": {
        "category": {
          "description": "A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.",
          "maxLength": 5000,
          "type": "string"
        },
        "category_code": {
          "description": "The merchant category code for the seller’s business",
          "maxLength": 5000,
          "type": "string"
        },
        "city": {
          "description": "City where the seller is located",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Country where the seller is located",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the seller",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network_id": {
          "description": "Identifier assigned to the seller by the card network. Different card networks may assign different network_id fields to the same merchant.",
          "maxLength": 5000,
          "type": "string"
        },
        "postal_code": {
          "description": "Postal code where the seller is located",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "state": {
          "description": "State where the seller is located",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "terminal_id": {
          "description": "An ID assigned by the seller to the location of the sale.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "URL provided by the merchant on a 3DS request",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "category",
        "category_code",
        "network_id"
      ],
      "title": "IssuingAuthorizationMerchantData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_network_data": {
      "description": "",
      "properties": {
        "acquiring_institution_id": {
          "description": "Identifier assigned to the acquirer by the card network. Sometimes this value is not provided by the network; in this case, the value will be `null`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "system_trace_audit_number": {
          "description": "The System Trace Audit Number (STAN) is a 6-digit identifier assigned by the acquirer. Prefer `network_data.transaction_id` if present, unless you have special requirements.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingAuthorizationNetworkData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_pending_request": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The additional amount Stripe will hold if the authorization is approved, in the card's [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "amount_details": {
          "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "is_amount_controllable": {
          "description": "If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.",
          "type": "boolean"
        },
        "merchant_amount": {
          "description": "The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "merchant_currency": {
          "description": "The local currency the merchant is requesting to authorize.",
          "type": "string"
        },
        "network_risk_score": {
          "description": "The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "currency",
        "is_amount_controllable",
        "merchant_amount",
        "merchant_currency"
      ],
      "title": "IssuingAuthorizationPendingRequest",
      "type": "object",
      "x-expandableFields": [
        "amount_details"
      ]
    },
    "issuing_authorization_request": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The `pending_request.amount` at the time of the request, presented in your card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held this amount from your account to fund the authorization if the request was approved.",
          "type": "integer"
        },
        "amount_details": {
          "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "x-nullable": true
        },
        "approved": {
          "description": "Whether this request was approved.",
          "type": "boolean"
        },
        "authorization_code": {
          "description": "A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter \"S\", followed by a six-digit number. For example, \"S498162\". Please note that the code is not guaranteed to be unique across authorizations.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "merchant_amount": {
          "description": "The `pending_request.merchant_amount` at the time of the request, presented in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "merchant_currency": {
          "description": "The currency that was collected by the merchant and presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "network_risk_score": {
          "description": "The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.",
          "type": "integer",
          "x-nullable": true
        },
        "reason": {
          "description": "When an authorization is approved or declined by you or by Stripe, this field provides additional detail on the reason for the outcome.",
          "enum": [
            "account_disabled",
            "card_active",
            "card_canceled",
            "card_expired",
            "card_inactive",
            "cardholder_blocked",
            "cardholder_inactive",
            "cardholder_verification_required",
            "insecure_authorization_method",
            "insufficient_funds",
            "not_allowed",
            "pin_blocked",
            "spending_controls",
            "suspected_fraud",
            "verification_failed",
            "webhook_approved",
            "webhook_declined",
            "webhook_error",
            "webhook_timeout"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "reason_message": {
          "description": "If the `request_history.reason` is `webhook_error` because the direct webhook response is invalid (for example, parsing errors or missing parameters), we surface a more detailed error message via this field.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "requested_at": {
          "description": "Time when the card network received an authorization request from the acquirer in UTC. Referred to by networks as transmission time.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "approved",
        "created",
        "currency",
        "merchant_amount",
        "merchant_currency",
        "reason"
      ],
      "title": "IssuingAuthorizationRequest",
      "type": "object",
      "x-expandableFields": [
        "amount_details"
      ]
    },
    "issuing_authorization_three_d_secure": {
      "description": "",
      "properties": {
        "result": {
          "description": "The outcome of the 3D Secure authentication request.",
          "enum": [
            "attempt_acknowledged",
            "authenticated",
            "failed",
            "required"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "result"
      ],
      "title": "IssuingAuthorizationThreeDSecure",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_treasury": {
      "description": "",
      "properties": {
        "received_credits": {
          "description": "The array of [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits) associated with this authorization",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "received_debits": {
          "description": "The array of [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits) associated with this authorization",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "transaction": {
          "description": "The Treasury [Transaction](https://stripe.com/docs/api/treasury/transactions) associated with this authorization",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "received_credits",
        "received_debits"
      ],
      "title": "IssuingAuthorizationTreasury",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_authorization_verification_data": {
      "description": "",
      "properties": {
        "address_line1_check": {
          "description": "Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.",
          "enum": [
            "match",
            "mismatch",
            "not_provided"
          ],
          "type": "string"
        },
        "address_postal_code_check": {
          "description": "Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.",
          "enum": [
            "match",
            "mismatch",
            "not_provided"
          ],
          "type": "string"
        },
        "authentication_exemption": {
          "description": "The exemption applied to this authorization.",
          "x-nullable": true
        },
        "cvc_check": {
          "description": "Whether the cardholder provided a CVC and if it matched Stripe’s record.",
          "enum": [
            "match",
            "mismatch",
            "not_provided"
          ],
          "type": "string"
        },
        "expiry_check": {
          "description": "Whether the cardholder provided an expiry date and if it matched Stripe’s record.",
          "enum": [
            "match",
            "mismatch",
            "not_provided"
          ],
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code submitted as part of the authorization used for postal code verification.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "three_d_secure": {
          "description": "3D Secure details.",
          "x-nullable": true
        }
      },
      "required": [
        "address_line1_check",
        "address_postal_code_check",
        "cvc_check",
        "expiry_check"
      ],
      "title": "IssuingAuthorizationVerificationData",
      "type": "object",
      "x-expandableFields": [
        "authentication_exemption",
        "three_d_secure"
      ]
    },
    "issuing_card_apple_pay": {
      "description": "",
      "properties": {
        "eligible": {
          "description": "Apple Pay Eligibility",
          "type": "boolean"
        },
        "ineligible_reason": {
          "description": "Reason the card is ineligible for Apple Pay",
          "enum": [
            "missing_agreement",
            "missing_cardholder_contact",
            "unsupported_region"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "eligible"
      ],
      "title": "IssuingCardApplePay",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_card_authorization_controls": {
      "description": "",
      "properties": {
        "allowed_categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "allowed_merchant_countries": {
          "description": "Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "blocked_categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "blocked_merchant_countries": {
          "description": "Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "spending_limits": {
          "description": "Limit spending with amount-based rules that apply across any cards this card replaced (i.e., its `replacement_for` card and _that_ card's `replacement_for` card, up the chain).",
          "items": {
            "$ref": "#/definitions/issuing_card_spending_limit"
          },
          "type": "array",
          "x-nullable": true
        },
        "spending_limits_currency": {
          "description": "Currency of the amounts within `spending_limits`. Always the same as the currency of the card.",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingCardAuthorizationControls",
      "type": "object",
      "x-expandableFields": [
        "spending_limits"
      ]
    },
    "issuing_card_google_pay": {
      "description": "",
      "properties": {
        "eligible": {
          "description": "Google Pay Eligibility",
          "type": "boolean"
        },
        "ineligible_reason": {
          "description": "Reason the card is ineligible for Google Pay",
          "enum": [
            "missing_agreement",
            "missing_cardholder_contact",
            "unsupported_region"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "eligible"
      ],
      "title": "IssuingCardGooglePay",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_card_shipping": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "address_validation": {
          "description": "Address validation details for the shipment.",
          "x-nullable": true
        },
        "carrier": {
          "description": "The delivery company that shipped a card.",
          "enum": [
            "dhl",
            "fedex",
            "royal_mail",
            "usps"
          ],
          "type": "string",
          "x-nullable": true
        },
        "customs": {
          "description": "Additional information that may be required for clearing customs.",
          "x-nullable": true
        },
        "eta": {
          "description": "A unix timestamp representing a best estimate of when the card will be delivered.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "description": "Recipient name.",
          "maxLength": 5000,
          "type": "string"
        },
        "phone_number": {
          "description": "The phone number of the receiver of the shipment. Our courier partners will use this number to contact you in the event of card delivery issues. For individual shipments to the EU/UK, if this field is empty, we will provide them with the phone number provided when the cardholder was initially created.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "require_signature": {
          "description": "Whether a signature is required for card delivery. This feature is only supported for US users. Standard shipping service does not support signature on delivery. The default value for standard shipping service is false and for express and priority services is true.",
          "type": "boolean",
          "x-nullable": true
        },
        "service": {
          "description": "Shipment service, such as `standard` or `express`.",
          "enum": [
            "express",
            "priority",
            "standard"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "status": {
          "description": "The delivery status of the card.",
          "enum": [
            "canceled",
            "delivered",
            "failure",
            "pending",
            "returned",
            "shipped",
            "submitted"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tracking_number": {
          "description": "A tracking number for a card shipment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tracking_url": {
          "description": "A link to the shipping carrier's site where you can view detailed information about a card shipment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "Packaging options.",
          "enum": [
            "bulk",
            "individual"
          ],
          "type": "string"
        }
      },
      "required": [
        "address",
        "name",
        "service",
        "type"
      ],
      "title": "IssuingCardShipping",
      "type": "object",
      "x-expandableFields": [
        "address",
        "address_validation",
        "customs"
      ]
    },
    "issuing_card_shipping_address_validation": {
      "description": "",
      "properties": {
        "mode": {
          "description": "The address validation capabilities to use.",
          "enum": [
            "disabled",
            "normalization_only",
            "validation_and_normalization"
          ],
          "type": "string"
        },
        "normalized_address": {
          "description": "The normalized shipping address.",
          "x-nullable": true
        },
        "result": {
          "description": "The validation result for the shipping address.",
          "enum": [
            "indeterminate",
            "likely_deliverable",
            "likely_undeliverable"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "mode"
      ],
      "title": "IssuingCardShippingAddressValidation",
      "type": "object",
      "x-expandableFields": [
        "normalized_address"
      ]
    },
    "issuing_card_shipping_customs": {
      "description": "",
      "properties": {
        "eori_number": {
          "description": "A registration number used for customs in Europe. See [https://www.gov.uk/eori](https://www.gov.uk/eori) for the UK and [https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en](https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en) for the EU.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingCardShippingCustoms",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_card_spending_limit": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "interval": {
          "description": "Interval (or event) to which the amount applies.",
          "enum": [
            "all_time",
            "daily",
            "monthly",
            "per_authorization",
            "weekly",
            "yearly"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "interval"
      ],
      "title": "IssuingCardSpendingLimit",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_card_wallets": {
      "description": "",
      "properties": {
        "apple_pay": {
          "$ref": "#/definitions/issuing_card_apple_pay"
        },
        "google_pay": {
          "$ref": "#/definitions/issuing_card_google_pay"
        },
        "primary_account_identifier": {
          "description": "Unique identifier for a card used with digital wallets",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "apple_pay",
        "google_pay"
      ],
      "title": "IssuingCardWallets",
      "type": "object",
      "x-expandableFields": [
        "apple_pay",
        "google_pay"
      ]
    },
    "issuing_cardholder_address": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        }
      },
      "required": [
        "address"
      ],
      "title": "IssuingCardholderAddress",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "issuing_cardholder_authorization_controls": {
      "description": "",
      "properties": {
        "allowed_categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "allowed_merchant_countries": {
          "description": "Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "blocked_categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "blocked_merchant_countries": {
          "description": "Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "spending_limits": {
          "description": "Limit spending with amount-based rules that apply across this cardholder's cards.",
          "items": {
            "$ref": "#/definitions/issuing_cardholder_spending_limit"
          },
          "type": "array",
          "x-nullable": true
        },
        "spending_limits_currency": {
          "description": "Currency of the amounts within `spending_limits`.",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderAuthorizationControls",
      "type": "object",
      "x-expandableFields": [
        "spending_limits"
      ]
    },
    "issuing_cardholder_card_issuing": {
      "description": "",
      "properties": {
        "user_terms_acceptance": {
          "description": "Information about cardholder acceptance of Celtic [Authorized User Terms](https://stripe.com/docs/issuing/cards#accept-authorized-user-terms). Required for cards backed by a Celtic program.",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderCardIssuing",
      "type": "object",
      "x-expandableFields": [
        "user_terms_acceptance"
      ]
    },
    "issuing_cardholder_company": {
      "description": "",
      "properties": {
        "tax_id_provided": {
          "description": "Whether the company's business ID number was provided.",
          "type": "boolean"
        }
      },
      "required": [
        "tax_id_provided"
      ],
      "title": "IssuingCardholderCompany",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_cardholder_id_document": {
      "description": "",
      "properties": {
        "back": {
          "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "front": {
          "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderIdDocument",
      "type": "object",
      "x-expandableFields": [
        "back",
        "front"
      ]
    },
    "issuing_cardholder_individual": {
      "description": "",
      "properties": {
        "card_issuing": {
          "description": "Information related to the card_issuing program for this cardholder.",
          "x-nullable": true
        },
        "dob": {
          "description": "The date of birth of this cardholder.",
          "x-nullable": true
        },
        "first_name": {
          "description": "The first name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "description": "The last name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verification": {
          "description": "Government-issued ID document for this cardholder.",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderIndividual",
      "type": "object",
      "x-expandableFields": [
        "card_issuing",
        "dob",
        "verification"
      ]
    },
    "issuing_cardholder_individual_dob": {
      "description": "",
      "properties": {
        "day": {
          "description": "The day of birth, between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "The month of birth, between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year of birth.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderIndividualDOB",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_cardholder_requirements": {
      "description": "",
      "properties": {
        "disabled_reason": {
          "description": "If `disabled_reason` is present, all cards will decline authorizations with `cardholder_verification_required` reason.",
          "enum": [
            "listed",
            "rejected.listed",
            "requirements.past_due",
            "under_review"
          ],
          "type": "string",
          "x-nullable": true
        },
        "past_due": {
          "description": "Array of fields that need to be collected in order to verify and re-enable the cardholder.",
          "items": {
            "enum": [
              "company.tax_id",
              "individual.card_issuing.user_terms_acceptance.date",
              "individual.card_issuing.user_terms_acceptance.ip",
              "individual.dob.day",
              "individual.dob.month",
              "individual.dob.year",
              "individual.first_name",
              "individual.last_name",
              "individual.verification.document"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderRequirements",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_cardholder_spending_limit": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "categories": {
          "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.",
          "items": {
            "enum": [
              "ac_refrigeration_repair",
              "accounting_bookkeeping_services",
              "advertising_services",
              "agricultural_cooperative",
              "airlines_air_carriers",
              "airports_flying_fields",
              "ambulance_services",
              "amusement_parks_carnivals",
              "antique_reproductions",
              "antique_shops",
              "aquariums",
              "architectural_surveying_services",
              "art_dealers_and_galleries",
              "artists_supply_and_craft_shops",
              "auto_and_home_supply_stores",
              "auto_body_repair_shops",
              "auto_paint_shops",
              "auto_service_shops",
              "automated_cash_disburse",
              "automated_fuel_dispensers",
              "automobile_associations",
              "automotive_parts_and_accessories_stores",
              "automotive_tire_stores",
              "bail_and_bond_payments",
              "bakeries",
              "bands_orchestras",
              "barber_and_beauty_shops",
              "betting_casino_gambling",
              "bicycle_shops",
              "billiard_pool_establishments",
              "boat_dealers",
              "boat_rentals_and_leases",
              "book_stores",
              "books_periodicals_and_newspapers",
              "bowling_alleys",
              "bus_lines",
              "business_secretarial_schools",
              "buying_shopping_services",
              "cable_satellite_and_other_pay_television_and_radio",
              "camera_and_photographic_supply_stores",
              "candy_nut_and_confectionery_stores",
              "car_and_truck_dealers_new_used",
              "car_and_truck_dealers_used_only",
              "car_rental_agencies",
              "car_washes",
              "carpentry_services",
              "carpet_upholstery_cleaning",
              "caterers",
              "charitable_and_social_service_organizations_fundraising",
              "chemicals_and_allied_products",
              "child_care_services",
              "childrens_and_infants_wear_stores",
              "chiropodists_podiatrists",
              "chiropractors",
              "cigar_stores_and_stands",
              "civic_social_fraternal_associations",
              "cleaning_and_maintenance",
              "clothing_rental",
              "colleges_universities",
              "commercial_equipment",
              "commercial_footwear",
              "commercial_photography_art_and_graphics",
              "commuter_transport_and_ferries",
              "computer_network_services",
              "computer_programming",
              "computer_repair",
              "computer_software_stores",
              "computers_peripherals_and_software",
              "concrete_work_services",
              "construction_materials",
              "consulting_public_relations",
              "correspondence_schools",
              "cosmetic_stores",
              "counseling_services",
              "country_clubs",
              "courier_services",
              "court_costs",
              "credit_reporting_agencies",
              "cruise_lines",
              "dairy_products_stores",
              "dance_hall_studios_schools",
              "dating_escort_services",
              "dentists_orthodontists",
              "department_stores",
              "detective_agencies",
              "digital_goods_applications",
              "digital_goods_games",
              "digital_goods_large_volume",
              "digital_goods_media",
              "direct_marketing_catalog_merchant",
              "direct_marketing_combination_catalog_and_retail_merchant",
              "direct_marketing_inbound_telemarketing",
              "direct_marketing_insurance_services",
              "direct_marketing_other",
              "direct_marketing_outbound_telemarketing",
              "direct_marketing_subscription",
              "direct_marketing_travel",
              "discount_stores",
              "doctors",
              "door_to_door_sales",
              "drapery_window_covering_and_upholstery_stores",
              "drinking_places",
              "drug_stores_and_pharmacies",
              "drugs_drug_proprietaries_and_druggist_sundries",
              "dry_cleaners",
              "durable_goods",
              "duty_free_stores",
              "eating_places_restaurants",
              "educational_services",
              "electric_razor_stores",
              "electric_vehicle_charging",
              "electrical_parts_and_equipment",
              "electrical_services",
              "electronics_repair_shops",
              "electronics_stores",
              "elementary_secondary_schools",
              "emergency_services_gcas_visa_use_only",
              "employment_temp_agencies",
              "equipment_rental",
              "exterminating_services",
              "family_clothing_stores",
              "fast_food_restaurants",
              "financial_institutions",
              "fines_government_administrative_entities",
              "fireplace_fireplace_screens_and_accessories_stores",
              "floor_covering_stores",
              "florists",
              "florists_supplies_nursery_stock_and_flowers",
              "freezer_and_locker_meat_provisioners",
              "fuel_dealers_non_automotive",
              "funeral_services_crematories",
              "furniture_home_furnishings_and_equipment_stores_except_appliances",
              "furniture_repair_refinishing",
              "furriers_and_fur_shops",
              "general_services",
              "gift_card_novelty_and_souvenir_shops",
              "glass_paint_and_wallpaper_stores",
              "glassware_crystal_stores",
              "golf_courses_public",
              "government_licensed_horse_dog_racing_us_region_only",
              "government_licensed_online_casions_online_gambling_us_region_only",
              "government_owned_lotteries_non_us_region",
              "government_owned_lotteries_us_region_only",
              "government_services",
              "grocery_stores_supermarkets",
              "hardware_equipment_and_supplies",
              "hardware_stores",
              "health_and_beauty_spas",
              "hearing_aids_sales_and_supplies",
              "heating_plumbing_a_c",
              "hobby_toy_and_game_shops",
              "home_supply_warehouse_stores",
              "hospitals",
              "hotels_motels_and_resorts",
              "household_appliance_stores",
              "industrial_supplies",
              "information_retrieval_services",
              "insurance_default",
              "insurance_underwriting_premiums",
              "intra_company_purchases",
              "jewelry_stores_watches_clocks_and_silverware_stores",
              "landscaping_services",
              "laundries",
              "laundry_cleaning_services",
              "legal_services_attorneys",
              "luggage_and_leather_goods_stores",
              "lumber_building_materials_stores",
              "manual_cash_disburse",
              "marinas_service_and_supplies",
              "marketplaces",
              "masonry_stonework_and_plaster",
              "massage_parlors",
              "medical_and_dental_labs",
              "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
              "medical_services",
              "membership_organizations",
              "mens_and_boys_clothing_and_accessories_stores",
              "mens_womens_clothing_stores",
              "metal_service_centers",
              "miscellaneous",
              "miscellaneous_apparel_and_accessory_shops",
              "miscellaneous_auto_dealers",
              "miscellaneous_business_services",
              "miscellaneous_food_stores",
              "miscellaneous_general_merchandise",
              "miscellaneous_general_services",
              "miscellaneous_home_furnishing_specialty_stores",
              "miscellaneous_publishing_and_printing",
              "miscellaneous_recreation_services",
              "miscellaneous_repair_shops",
              "miscellaneous_specialty_retail",
              "mobile_home_dealers",
              "motion_picture_theaters",
              "motor_freight_carriers_and_trucking",
              "motor_homes_dealers",
              "motor_vehicle_supplies_and_new_parts",
              "motorcycle_shops_and_dealers",
              "motorcycle_shops_dealers",
              "music_stores_musical_instruments_pianos_and_sheet_music",
              "news_dealers_and_newsstands",
              "non_fi_money_orders",
              "non_fi_stored_value_card_purchase_load",
              "nondurable_goods",
              "nurseries_lawn_and_garden_supply_stores",
              "nursing_personal_care",
              "office_and_commercial_furniture",
              "opticians_eyeglasses",
              "optometrists_ophthalmologist",
              "orthopedic_goods_prosthetic_devices",
              "osteopaths",
              "package_stores_beer_wine_and_liquor",
              "paints_varnishes_and_supplies",
              "parking_lots_garages",
              "passenger_railways",
              "pawn_shops",
              "pet_shops_pet_food_and_supplies",
              "petroleum_and_petroleum_products",
              "photo_developing",
              "photographic_photocopy_microfilm_equipment_and_supplies",
              "photographic_studios",
              "picture_video_production",
              "piece_goods_notions_and_other_dry_goods",
              "plumbing_heating_equipment_and_supplies",
              "political_organizations",
              "postal_services_government_only",
              "precious_stones_and_metals_watches_and_jewelry",
              "professional_services",
              "public_warehousing_and_storage",
              "quick_copy_repro_and_blueprint",
              "railroads",
              "real_estate_agents_and_managers_rentals",
              "record_stores",
              "recreational_vehicle_rentals",
              "religious_goods_stores",
              "religious_organizations",
              "roofing_siding_sheet_metal",
              "secretarial_support_services",
              "security_brokers_dealers",
              "service_stations",
              "sewing_needlework_fabric_and_piece_goods_stores",
              "shoe_repair_hat_cleaning",
              "shoe_stores",
              "small_appliance_repair",
              "snowmobile_dealers",
              "special_trade_services",
              "specialty_cleaning",
              "sporting_goods_stores",
              "sporting_recreation_camps",
              "sports_and_riding_apparel_stores",
              "sports_clubs_fields",
              "stamp_and_coin_stores",
              "stationary_office_supplies_printing_and_writing_paper",
              "stationery_stores_office_and_school_supply_stores",
              "swimming_pools_sales",
              "t_ui_travel_germany",
              "tailors_alterations",
              "tax_payments_government_agencies",
              "tax_preparation_services",
              "taxicabs_limousines",
              "telecommunication_equipment_and_telephone_sales",
              "telecommunication_services",
              "telegraph_services",
              "tent_and_awning_shops",
              "testing_laboratories",
              "theatrical_ticket_agencies",
              "timeshares",
              "tire_retreading_and_repair",
              "tolls_bridge_fees",
              "tourist_attractions_and_exhibits",
              "towing_services",
              "trailer_parks_campgrounds",
              "transportation_services",
              "travel_agencies_tour_operators",
              "truck_stop_iteration",
              "truck_utility_trailer_rentals",
              "typesetting_plate_making_and_related_services",
              "typewriter_stores",
              "u_s_federal_government_agencies_or_departments",
              "uniforms_commercial_clothing",
              "used_merchandise_and_secondhand_stores",
              "utilities",
              "variety_stores",
              "veterinary_services",
              "video_amusement_game_supplies",
              "video_game_arcades",
              "video_tape_rental_stores",
              "vocational_trade_schools",
              "watch_jewelry_repair",
              "welding_repair",
              "wholesale_clubs",
              "wig_and_toupee_stores",
              "wires_money_orders",
              "womens_accessory_and_specialty_shops",
              "womens_ready_to_wear_stores",
              "wrecking_and_salvage_yards"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "interval": {
          "description": "Interval (or event) to which the amount applies.",
          "enum": [
            "all_time",
            "daily",
            "monthly",
            "per_authorization",
            "weekly",
            "yearly"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "interval"
      ],
      "title": "IssuingCardholderSpendingLimit",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_cardholder_user_terms_acceptance": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the cardholder accepted the Authorized User Terms.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the cardholder accepted the Authorized User Terms.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user agent of the browser from which the cardholder accepted the Authorized User Terms.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderUserTermsAcceptance",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_cardholder_verification": {
      "description": "",
      "properties": {
        "document": {
          "description": "An identifying document, either a passport or local ID card.",
          "x-nullable": true
        }
      },
      "title": "IssuingCardholderVerification",
      "type": "object",
      "x-expandableFields": [
        "document"
      ]
    },
    "issuing_dispute_canceled_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "canceled_at": {
          "description": "Date when order was canceled.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancellation_policy_provided": {
          "description": "Whether the cardholder was provided with a cancellation policy.",
          "type": "boolean",
          "x-nullable": true
        },
        "cancellation_reason": {
          "description": "Reason for canceling the order.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "expected_at": {
          "description": "Date when the cardholder expected to receive the product.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_description": {
          "description": "Description of the merchandise or service that was purchased.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_type": {
          "description": "Whether the product was a merchandise or service.",
          "enum": [
            "merchandise",
            "service"
          ],
          "type": "string",
          "x-nullable": true
        },
        "return_status": {
          "description": "Result of cardholder's attempt to return the product.",
          "enum": [
            "merchant_rejected",
            "successful"
          ],
          "type": "string",
          "x-nullable": true
        },
        "returned_at": {
          "description": "Date when the product was returned or attempted to be returned.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeCanceledEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_duplicate_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "card_statement": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the card statement showing that the product had already been paid for.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "cash_receipt": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the receipt showing that the product had been paid for in cash.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "check_image": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Image of the front and back of the check that was used to pay for the product.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "original_transaction": {
          "description": "Transaction (e.g., ipi_...) that the disputed transaction is a duplicate of. Of the two or more transactions that are copies of each other, this is original undisputed one.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeDuplicateEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation",
        "card_statement",
        "cash_receipt",
        "check_image"
      ]
    },
    "issuing_dispute_evidence": {
      "description": "",
      "properties": {
        "canceled": {
          "$ref": "#/definitions/issuing_dispute_canceled_evidence"
        },
        "duplicate": {
          "$ref": "#/definitions/issuing_dispute_duplicate_evidence"
        },
        "fraudulent": {
          "$ref": "#/definitions/issuing_dispute_fraudulent_evidence"
        },
        "merchandise_not_as_described": {
          "$ref": "#/definitions/issuing_dispute_merchandise_not_as_described_evidence"
        },
        "no_valid_authorization": {
          "$ref": "#/definitions/issuing_dispute_no_valid_authorization_evidence"
        },
        "not_received": {
          "$ref": "#/definitions/issuing_dispute_not_received_evidence"
        },
        "other": {
          "$ref": "#/definitions/issuing_dispute_other_evidence"
        },
        "reason": {
          "description": "The reason for filing the dispute. Its value will match the field containing the evidence.",
          "enum": [
            "canceled",
            "duplicate",
            "fraudulent",
            "merchandise_not_as_described",
            "no_valid_authorization",
            "not_received",
            "other",
            "service_not_as_described"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "service_not_as_described": {
          "$ref": "#/definitions/issuing_dispute_service_not_as_described_evidence"
        }
      },
      "required": [
        "reason"
      ],
      "title": "IssuingDisputeEvidence",
      "type": "object",
      "x-expandableFields": [
        "canceled",
        "duplicate",
        "fraudulent",
        "merchandise_not_as_described",
        "no_valid_authorization",
        "not_received",
        "other",
        "service_not_as_described"
      ]
    },
    "issuing_dispute_fraudulent_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeFraudulentEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_merchandise_not_as_described_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "received_at": {
          "description": "Date when the product was received.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "return_description": {
          "description": "Description of the cardholder's attempt to return the product.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "return_status": {
          "description": "Result of cardholder's attempt to return the product.",
          "enum": [
            "merchant_rejected",
            "successful"
          ],
          "type": "string",
          "x-nullable": true
        },
        "returned_at": {
          "description": "Date when the product was returned or attempted to be returned.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeMerchandiseNotAsDescribedEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_no_valid_authorization_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeNoValidAuthorizationEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_not_received_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "expected_at": {
          "description": "Date when the cardholder expected to receive the product.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_description": {
          "description": "Description of the merchandise or service that was purchased.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_type": {
          "description": "Whether the product was a merchandise or service.",
          "enum": [
            "merchandise",
            "service"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeNotReceivedEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_other_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_description": {
          "description": "Description of the merchandise or service that was purchased.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "product_type": {
          "description": "Whether the product was a merchandise or service.",
          "enum": [
            "merchandise",
            "service"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeOtherEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_service_not_as_described_evidence": {
      "description": "",
      "properties": {
        "additional_documentation": {
          "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "canceled_at": {
          "description": "Date when order was canceled.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancellation_reason": {
          "description": "Reason for canceling the order.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "explanation": {
          "description": "Explanation of why the cardholder is disputing this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "received_at": {
          "description": "Date when the product was received.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingDisputeServiceNotAsDescribedEvidence",
      "type": "object",
      "x-expandableFields": [
        "additional_documentation"
      ]
    },
    "issuing_dispute_treasury": {
      "description": "",
      "properties": {
        "debit_reversal": {
          "description": "The Treasury [DebitReversal](https://stripe.com/docs/api/treasury/debit_reversals) representing this Issuing dispute",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "received_debit": {
          "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) that is being disputed.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "received_debit"
      ],
      "title": "IssuingDisputeTreasury",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_network_token_address": {
      "description": "",
      "properties": {
        "line1": {
          "description": "The street address of the cardholder tokenizing the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code of the cardholder tokenizing the card.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "line1",
        "postal_code"
      ],
      "title": "IssuingNetworkTokenAddress",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_network_token_device": {
      "description": "",
      "properties": {
        "device_fingerprint": {
          "description": "An obfuscated ID derived from the device ID.",
          "maxLength": 5000,
          "type": "string"
        },
        "ip_address": {
          "description": "The IP address of the device at provisioning time.",
          "maxLength": 5000,
          "type": "string"
        },
        "location": {
          "description": "The geographic latitude/longitude coordinates of the device at provisioning time. The format is [+-]decimal/[+-]decimal.",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "The name of the device used for tokenization.",
          "maxLength": 5000,
          "type": "string"
        },
        "phone_number": {
          "description": "The phone number of the device used for tokenization.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The type of device used for tokenization.",
          "enum": [
            "other",
            "phone",
            "watch"
          ],
          "type": "string"
        }
      },
      "title": "IssuingNetworkTokenDevice",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_network_token_mastercard": {
      "description": "",
      "properties": {
        "card_reference_id": {
          "description": "A unique reference ID from MasterCard to represent the card account number.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_reference_id": {
          "description": "The network-unique identifier for the token.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_requestor_id": {
          "description": "The ID of the entity requesting tokenization, specific to MasterCard.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_requestor_name": {
          "description": "The name of the entity requesting tokenization, if known. This is directly provided from MasterCard.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "token_reference_id",
        "token_requestor_id"
      ],
      "title": "IssuingNetworkTokenMastercard",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_network_token_network_data": {
      "description": "",
      "properties": {
        "device": {
          "$ref": "#/definitions/issuing_network_token_device"
        },
        "mastercard": {
          "$ref": "#/definitions/issuing_network_token_mastercard"
        },
        "type": {
          "description": "The network that the token is associated with. An additional hash is included with a name matching this value, containing tokenization data specific to the card network.",
          "enum": [
            "mastercard",
            "visa"
          ],
          "type": "string"
        },
        "visa": {
          "$ref": "#/definitions/issuing_network_token_visa"
        },
        "wallet_provider": {
          "$ref": "#/definitions/issuing_network_token_wallet_provider"
        }
      },
      "required": [
        "type"
      ],
      "title": "IssuingNetworkTokenNetworkData",
      "type": "object",
      "x-expandableFields": [
        "device",
        "mastercard",
        "visa",
        "wallet_provider"
      ]
    },
    "issuing_network_token_visa": {
      "description": "",
      "properties": {
        "card_reference_id": {
          "description": "A unique reference ID from Visa to represent the card account number.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_reference_id": {
          "description": "The network-unique identifier for the token.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_requestor_id": {
          "description": "The ID of the entity requesting tokenization, specific to Visa.",
          "maxLength": 5000,
          "type": "string"
        },
        "token_risk_score": {
          "description": "Degree of risk associated with the token between `01` and `99`, with higher number indicating higher risk. A `00` value indicates the token was not scored by Visa.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "card_reference_id",
        "token_reference_id",
        "token_requestor_id"
      ],
      "title": "IssuingNetworkTokenVisa",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_network_token_wallet_provider": {
      "description": "",
      "properties": {
        "account_id": {
          "description": "The wallet provider-given account ID of the digital wallet the token belongs to.",
          "maxLength": 5000,
          "type": "string"
        },
        "account_trust_score": {
          "description": "An evaluation on the trustworthiness of the wallet account between 1 and 5. A higher score indicates more trustworthy.",
          "type": "integer"
        },
        "card_number_source": {
          "description": "The method used for tokenizing a card.",
          "enum": [
            "app",
            "manual",
            "on_file",
            "other"
          ],
          "type": "string"
        },
        "cardholder_address": {
          "$ref": "#/definitions/issuing_network_token_address"
        },
        "cardholder_name": {
          "description": "The name of the cardholder tokenizing the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "device_trust_score": {
          "description": "An evaluation on the trustworthiness of the device. A higher score indicates more trustworthy.",
          "type": "integer"
        },
        "hashed_account_email_address": {
          "description": "The hashed email address of the cardholder's account with the wallet provider.",
          "maxLength": 5000,
          "type": "string"
        },
        "reason_codes": {
          "description": "The reasons for suggested tokenization given by the card network.",
          "items": {
            "enum": [
              "account_card_too_new",
              "account_recently_changed",
              "account_too_new",
              "account_too_new_since_launch",
              "additional_device",
              "data_expired",
              "defer_id_v_decision",
              "device_recently_lost",
              "good_activity_history",
              "has_suspended_tokens",
              "high_risk",
              "inactive_account",
              "long_account_tenure",
              "low_account_score",
              "low_device_score",
              "low_phone_number_score",
              "network_service_error",
              "outside_home_territory",
              "provisioning_cardholder_mismatch",
              "provisioning_device_and_cardholder_mismatch",
              "provisioning_device_mismatch",
              "same_device_no_prior_authentication",
              "same_device_successful_prior_authentication",
              "software_update",
              "suspicious_activity",
              "too_many_different_cardholders",
              "too_many_recent_attempts",
              "too_many_recent_tokens"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "suggested_decision": {
          "description": "The recommendation on responding to the tokenization request.",
          "enum": [
            "approve",
            "decline",
            "require_auth"
          ],
          "type": "string"
        },
        "suggested_decision_version": {
          "description": "The version of the standard for mapping reason codes followed by the wallet provider.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "IssuingNetworkTokenWalletProvider",
      "type": "object",
      "x-expandableFields": [
        "cardholder_address"
      ]
    },
    "issuing_personalization_design_carrier_text": {
      "description": "",
      "properties": {
        "footer_body": {
          "description": "The footer body text of the carrier letter.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "footer_title": {
          "description": "The footer title text of the carrier letter.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "header_body": {
          "description": "The header body text of the carrier letter.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "header_title": {
          "description": "The header title text of the carrier letter.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingPersonalizationDesignCarrierText",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_personalization_design_preferences": {
      "description": "",
      "properties": {
        "is_default": {
          "description": "Whether we use this personalization design to create cards when one isn't specified. A connected account uses the Connect platform's default design if no personalization design is set as the default design.",
          "type": "boolean"
        },
        "is_platform_default": {
          "description": "Whether this personalization design is used to create cards when one is not specified and a default for this connected account does not exist.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "required": [
        "is_default"
      ],
      "title": "IssuingPersonalizationDesignPreferences",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_personalization_design_rejection_reasons": {
      "description": "",
      "properties": {
        "card_logo": {
          "description": "The reason(s) the card logo was rejected.",
          "items": {
            "enum": [
              "geographic_location",
              "inappropriate",
              "network_name",
              "non_binary_image",
              "non_fiat_currency",
              "other",
              "other_entity",
              "promotional_material"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "carrier_text": {
          "description": "The reason(s) the carrier text was rejected.",
          "items": {
            "enum": [
              "geographic_location",
              "inappropriate",
              "network_name",
              "non_fiat_currency",
              "other",
              "other_entity",
              "promotional_material"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "IssuingPersonalizationDesignRejectionReasons",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_physical_bundle_features": {
      "description": "",
      "properties": {
        "card_logo": {
          "description": "The policy for how to use card logo images in a card design with this physical bundle.",
          "enum": [
            "optional",
            "required",
            "unsupported"
          ],
          "type": "string"
        },
        "carrier_text": {
          "description": "The policy for how to use carrier letter text in a card design with this physical bundle.",
          "enum": [
            "optional",
            "required",
            "unsupported"
          ],
          "type": "string"
        },
        "second_line": {
          "description": "The policy for how to use a second line on a card with this physical bundle.",
          "enum": [
            "optional",
            "required",
            "unsupported"
          ],
          "type": "string"
        }
      },
      "required": [
        "card_logo",
        "carrier_text",
        "second_line"
      ],
      "title": "IssuingPhysicalBundleFeatures",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_amount_details": {
      "description": "",
      "properties": {
        "atm_fee": {
          "description": "The fee charged by the ATM for the cash withdrawal.",
          "type": "integer",
          "x-nullable": true
        },
        "cashback_amount": {
          "description": "The amount of cash requested by the cardholder.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionAmountDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_fleet_cardholder_prompt_data": {
      "description": "",
      "properties": {
        "driver_id": {
          "description": "Driver ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "odometer": {
          "description": "Odometer reading.",
          "type": "integer",
          "x-nullable": true
        },
        "unspecified_id": {
          "description": "An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_id": {
          "description": "User ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "vehicle_number": {
          "description": "Vehicle number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetCardholderPromptData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_fleet_data": {
      "description": "",
      "properties": {
        "cardholder_prompt_data": {
          "description": "Answers to prompts presented to cardholder at point of sale.",
          "x-nullable": true
        },
        "purchase_type": {
          "description": "The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or `fuel_and_non_fuel_purchase`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reported_breakdown": {
          "description": "More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.",
          "x-nullable": true
        },
        "service_type": {
          "description": "The type of fuel service. One of `non_fuel_transaction`, `full_service`, or `self_service`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetData",
      "type": "object",
      "x-expandableFields": [
        "cardholder_prompt_data",
        "reported_breakdown"
      ]
    },
    "issuing_transaction_fleet_fuel_price_data": {
      "description": "",
      "properties": {
        "gross_amount_decimal": {
          "description": "Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit Cost, inclusive of taxes.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetFuelPriceData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_fleet_non_fuel_price_data": {
      "description": "",
      "properties": {
        "gross_amount_decimal": {
          "description": "Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetNonFuelPriceData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_fleet_reported_breakdown": {
      "description": "",
      "properties": {
        "fuel": {
          "description": "Breakdown of fuel portion of the purchase.",
          "x-nullable": true
        },
        "non_fuel": {
          "description": "Breakdown of non-fuel portion of the purchase.",
          "x-nullable": true
        },
        "tax": {
          "description": "Information about tax included in this transaction.",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetReportedBreakdown",
      "type": "object",
      "x-expandableFields": [
        "fuel",
        "non_fuel",
        "tax"
      ]
    },
    "issuing_transaction_fleet_tax_data": {
      "description": "",
      "properties": {
        "local_amount_decimal": {
          "description": "Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "national_amount_decimal": {
          "description": "Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFleetTaxData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_flight_data": {
      "description": "",
      "properties": {
        "departure_at": {
          "description": "The time that the flight departed.",
          "type": "integer",
          "x-nullable": true
        },
        "passenger_name": {
          "description": "The name of the passenger.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "refundable": {
          "description": "Whether the ticket is refundable.",
          "type": "boolean",
          "x-nullable": true
        },
        "segments": {
          "description": "The legs of the trip.",
          "items": {
            "$ref": "#/definitions/issuing_transaction_flight_data_leg"
          },
          "type": "array",
          "x-nullable": true
        },
        "travel_agency": {
          "description": "The travel agency that issued the ticket.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFlightData",
      "type": "object",
      "x-expandableFields": [
        "segments"
      ]
    },
    "issuing_transaction_flight_data_leg": {
      "description": "",
      "properties": {
        "arrival_airport_code": {
          "description": "The three-letter IATA airport code of the flight's destination.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "carrier": {
          "description": "The airline carrier code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "departure_airport_code": {
          "description": "The three-letter IATA airport code that the flight departed from.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "flight_number": {
          "description": "The flight number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "service_class": {
          "description": "The flight's service class.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "stopover_allowed": {
          "description": "Whether a stopover is allowed on this flight.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionFlightDataLeg",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_fuel_data": {
      "description": "",
      "properties": {
        "industry_product_code": {
          "description": "[Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity_decimal": {
          "description": "The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The type of fuel that was purchased. One of `diesel`, `unleaded_plus`, `unleaded_regular`, `unleaded_super`, or `other`.",
          "maxLength": 5000,
          "type": "string"
        },
        "unit": {
          "description": "The units for `quantity_decimal`. One of `charging_minute`, `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`, `us_gallon`, or `other`.",
          "maxLength": 5000,
          "type": "string"
        },
        "unit_cost_decimal": {
          "description": "The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.",
          "format": "decimal",
          "type": "string"
        }
      },
      "required": [
        "type",
        "unit",
        "unit_cost_decimal"
      ],
      "title": "IssuingTransactionFuelData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_lodging_data": {
      "description": "",
      "properties": {
        "check_in_at": {
          "description": "The time of checking into the lodging.",
          "type": "integer",
          "x-nullable": true
        },
        "nights": {
          "description": "The number of nights stayed at the lodging.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionLodgingData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_network_data": {
      "description": "",
      "properties": {
        "authorization_code": {
          "description": "A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter \"S\", followed by a six-digit number. For example, \"S498162\". Please note that the code is not guaranteed to be unique across authorizations.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "processing_date": {
          "description": "The date the transaction was processed by the card network. This can be different from the date the seller recorded the transaction depending on when the acquirer submits the transaction to the network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionNetworkData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_purchase_details": {
      "description": "",
      "properties": {
        "fleet": {
          "description": "Fleet-specific information for transactions using Fleet cards.",
          "x-nullable": true
        },
        "flight": {
          "description": "Information about the flight that was purchased with this transaction.",
          "x-nullable": true
        },
        "fuel": {
          "description": "Information about fuel that was purchased with this transaction.",
          "x-nullable": true
        },
        "lodging": {
          "description": "Information about lodging that was purchased with this transaction.",
          "x-nullable": true
        },
        "receipt": {
          "description": "The line items in the purchase.",
          "items": {
            "$ref": "#/definitions/issuing_transaction_receipt_data"
          },
          "type": "array",
          "x-nullable": true
        },
        "reference": {
          "description": "A merchant-specific order number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionPurchaseDetails",
      "type": "object",
      "x-expandableFields": [
        "fleet",
        "flight",
        "fuel",
        "lodging",
        "receipt"
      ]
    },
    "issuing_transaction_receipt_data": {
      "description": "",
      "properties": {
        "description": {
          "description": "The description of the item. The maximum length of this field is 26 characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "The quantity of the item.",
          "type": "number",
          "x-nullable": true
        },
        "total": {
          "description": "The total for this line item in cents.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_cost": {
          "description": "The unit cost of the item in cents.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionReceiptData",
      "type": "object",
      "x-expandableFields": []
    },
    "issuing_transaction_treasury": {
      "description": "",
      "properties": {
        "received_credit": {
          "description": "The Treasury [ReceivedCredit](https://stripe.com/docs/api/treasury/received_credits) representing this Issuing transaction if it is a refund",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "received_debit": {
          "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) representing this Issuing transaction if it is a capture",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "IssuingTransactionTreasury",
      "type": "object",
      "x-expandableFields": []
    },
    "item": {
      "description": "A line item.",
      "properties": {
        "amount_discount": {
          "description": "Total discount amount applied. If no discounts were applied, defaults to 0.",
          "type": "integer"
        },
        "amount_subtotal": {
          "description": "Total before any discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "Total tax amount applied. If no tax was applied, defaults to 0.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total after discounts and taxes.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
          "maxLength": 5000,
          "type": "string"
        },
        "discounts": {
          "description": "The discounts applied to the line item.",
          "items": {
            "$ref": "#/definitions/line_items_discount_amount"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "item"
          ],
          "type": "string"
        },
        "price": {
          "description": "The price used to generate the line item.",
          "x-nullable": true
        },
        "quantity": {
          "description": "The quantity of products being purchased.",
          "type": "integer",
          "x-nullable": true
        },
        "taxes": {
          "description": "The taxes applied to the line item.",
          "items": {
            "$ref": "#/definitions/line_items_tax_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "amount_discount",
        "amount_subtotal",
        "amount_tax",
        "amount_total",
        "currency",
        "id",
        "object"
      ],
      "title": "LineItem",
      "type": "object",
      "x-expandableFields": [
        "discounts",
        "price",
        "taxes"
      ],
      "x-resourceId": "item"
    },
    "klarna_address": {
      "description": "",
      "properties": {
        "country": {
          "description": "The payer address country",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "klarna_address",
      "type": "object",
      "x-expandableFields": []
    },
    "klarna_payer_details": {
      "description": "",
      "properties": {
        "address": {
          "description": "The payer's address",
          "x-nullable": true
        }
      },
      "title": "klarna_payer_details",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "legal_entity_company": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "address_kana": {
          "description": "The Kana variation of the company's primary address (Japan only).",
          "x-nullable": true
        },
        "address_kanji": {
          "description": "The Kanji variation of the company's primary address (Japan only).",
          "x-nullable": true
        },
        "directors_provided": {
          "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).",
          "type": "boolean"
        },
        "executives_provided": {
          "description": "Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.",
          "type": "boolean"
        },
        "export_license_id": {
          "description": "The export license ID number of the company, also referred as Import Export Code (India only).",
          "maxLength": 5000,
          "type": "string"
        },
        "export_purpose_code": {
          "description": "The purpose code to use for export transactions (India only).",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "The company's legal name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name_kana": {
          "description": "The Kana variation of the company's legal name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name_kanji": {
          "description": "The Kanji variation of the company's legal name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "owners_provided": {
          "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
          "type": "boolean"
        },
        "ownership_declaration": {
          "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
          "x-nullable": true
        },
        "phone": {
          "description": "The company's phone number (used for verification).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "structure": {
          "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
          "enum": [
            "free_zone_establishment",
            "free_zone_llc",
            "government_instrumentality",
            "governmental_unit",
            "incorporated_non_profit",
            "incorporated_partnership",
            "limited_liability_partnership",
            "llc",
            "multi_member_llc",
            "private_company",
            "private_corporation",
            "private_partnership",
            "public_company",
            "public_corporation",
            "public_partnership",
            "registered_charity",
            "single_member_llc",
            "sole_establishment",
            "sole_proprietorship",
            "tax_exempt_government_instrumentality",
            "unincorporated_association",
            "unincorporated_non_profit",
            "unincorporated_partnership"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "tax_id_provided": {
          "description": "Whether the company's business ID number was provided.",
          "type": "boolean"
        },
        "tax_id_registrar": {
          "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
          "maxLength": 5000,
          "type": "string"
        },
        "vat_id_provided": {
          "description": "Whether the company's business VAT number was provided.",
          "type": "boolean"
        },
        "verification": {
          "description": "Information on the verification state of the company.",
          "x-nullable": true
        }
      },
      "title": "LegalEntityCompany",
      "type": "object",
      "x-expandableFields": [
        "address",
        "address_kana",
        "address_kanji",
        "ownership_declaration",
        "verification"
      ]
    },
    "legal_entity_company_verification": {
      "description": "",
      "properties": {
        "document": {
          "$ref": "#/definitions/legal_entity_company_verification_document"
        }
      },
      "required": [
        "document"
      ],
      "title": "LegalEntityCompanyVerification",
      "type": "object",
      "x-expandableFields": [
        "document"
      ]
    },
    "legal_entity_company_verification_document": {
      "description": "",
      "properties": {
        "back": {
          "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "details": {
          "description": "A user-displayable string describing the verification state of this document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "details_code": {
          "description": "One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "front": {
          "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "LegalEntityCompanyVerificationDocument",
      "type": "object",
      "x-expandableFields": [
        "back",
        "front"
      ]
    },
    "legal_entity_dob": {
      "description": "",
      "properties": {
        "day": {
          "description": "The day of birth, between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "The month of birth, between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year of birth.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "LegalEntityDOB",
      "type": "object",
      "x-expandableFields": []
    },
    "legal_entity_japan_address": {
      "description": "",
      "properties": {
        "city": {
          "description": "City/Ward.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line1": {
          "description": "Block/Building number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line2": {
          "description": "Building details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "postal_code": {
          "description": "ZIP or postal code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "state": {
          "description": "Prefecture.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "town": {
          "description": "Town/cho-me.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "LegalEntityJapanAddress",
      "type": "object",
      "x-expandableFields": []
    },
    "legal_entity_person_verification": {
      "description": "",
      "properties": {
        "additional_document": {
          "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
          "x-nullable": true
        },
        "details": {
          "description": "A user-displayable string describing the verification state for the person. For example, this may say \"Provided identity information could not be verified\".",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "details_code": {
          "description": "One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "document": {
          "$ref": "#/definitions/legal_entity_person_verification_document"
        },
        "status": {
          "description": "The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "LegalEntityPersonVerification",
      "type": "object",
      "x-expandableFields": [
        "additional_document",
        "document"
      ]
    },
    "legal_entity_person_verification_document": {
      "description": "",
      "properties": {
        "back": {
          "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        },
        "details": {
          "description": "A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say \"Identity document is too unclear to read\".",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "details_code": {
          "description": "One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "front": {
          "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "LegalEntityPersonVerificationDocument",
      "type": "object",
      "x-expandableFields": [
        "back",
        "front"
      ]
    },
    "legal_entity_ubo_declaration": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the beneficial owner attestation was made.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user-agent string from the browser where the beneficial owner attestation was made.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "LegalEntityUBODeclaration",
      "type": "object",
      "x-expandableFields": []
    },
    "line_item": {
      "description": "Invoice Line Items represent the individual lines within an [invoice](https://stripe.com/docs/api/invoices) and only exist within the context of an invoice.\n\nEach line item is backed by either an [invoice item](https://stripe.com/docs/api/invoiceitems) or a [subscription item](https://stripe.com/docs/api/subscription_items).",
      "properties": {
        "amount": {
          "description": "The amount, in cents (or local equivalent).",
          "type": "integer"
        },
        "amount_excluding_tax": {
          "description": "The integer amount in cents (or local equivalent) representing the amount for this line item, excluding all tax and discounts.",
          "type": "integer",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discount_amounts": {
          "description": "The amount of discount calculated per discount for this line item.",
          "items": {
            "$ref": "#/definitions/discounts_resource_discount_amount"
          },
          "type": "array",
          "x-nullable": true
        },
        "discountable": {
          "description": "If true, discounts will apply to this line item. Always false for prorations.",
          "type": "boolean"
        },
        "discounts": {
          "description": "The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                }
              ]
            }
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The ID of the invoice that contains this line item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_item": {
          "description": "The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoiceitem"
              }
            ]
          }
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription`, `metadata` reflects the current metadata from the subscription associated with the line item, unless the invoice line was directly updated with different metadata after creation.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "line_item"
          ],
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/invoice_line_item_period"
        },
        "pretax_credit_amounts": {
          "items": {
            "$ref": "#/definitions/invoices_resource_pretax_credit_amount"
          },
          "type": "array",
          "x-nullable": true
        },
        "price": {
          "description": "The price of the line item.",
          "x-nullable": true
        },
        "proration": {
          "description": "Whether this is a proration.",
          "type": "boolean"
        },
        "proration_details": {
          "description": "Additional details for proration line items",
          "x-nullable": true
        },
        "quantity": {
          "description": "The quantity of the subscription, if the line item is a subscription or a proration.",
          "type": "integer",
          "x-nullable": true
        },
        "subscription": {
          "description": "The subscription that the invoice item pertains to, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "subscription_item": {
          "description": "The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription_item"
              }
            ]
          }
        },
        "tax_amounts": {
          "description": "The amount of tax calculated per tax rate for this line item",
          "items": {
            "$ref": "#/definitions/invoice_tax_amount"
          },
          "type": "array"
        },
        "tax_rates": {
          "description": "The tax rates which apply to the line item.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array"
        },
        "type": {
          "description": "A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.",
          "enum": [
            "invoiceitem",
            "subscription"
          ],
          "type": "string"
        },
        "unit_amount_excluding_tax": {
          "description": "The amount in cents (or local equivalent) representing the unit amount for this line item, excluding all tax and discounts.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "currency",
        "discountable",
        "discounts",
        "id",
        "livemode",
        "metadata",
        "object",
        "period",
        "proration",
        "tax_amounts",
        "tax_rates",
        "type"
      ],
      "title": "InvoiceLineItem",
      "type": "object",
      "x-expandableFields": [
        "discount_amounts",
        "discounts",
        "invoice_item",
        "period",
        "pretax_credit_amounts",
        "price",
        "proration_details",
        "subscription",
        "subscription_item",
        "tax_amounts",
        "tax_rates"
      ],
      "x-resourceId": "line_item"
    },
    "line_items_discount_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount discounted.",
          "type": "integer"
        },
        "discount": {
          "$ref": "#/definitions/discount"
        }
      },
      "required": [
        "amount",
        "discount"
      ],
      "title": "LineItemsDiscountAmount",
      "type": "object",
      "x-expandableFields": [
        "discount"
      ]
    },
    "line_items_tax_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount of tax applied for this rate.",
          "type": "integer"
        },
        "rate": {
          "$ref": "#/definitions/tax_rate"
        },
        "taxability_reason": {
          "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
          "enum": [
            "customer_exempt",
            "not_collecting",
            "not_subject_to_tax",
            "not_supported",
            "portion_product_exempt",
            "portion_reduced_rated",
            "portion_standard_rated",
            "product_exempt",
            "product_exempt_holiday",
            "proportionally_rated",
            "reduced_rated",
            "reverse_charge",
            "standard_rated",
            "taxable_basis_reduced",
            "zero_rated"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "taxable_amount": {
          "description": "The amount on which tax is calculated, in cents (or local equivalent).",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "rate"
      ],
      "title": "LineItemsTaxAmount",
      "type": "object",
      "x-expandableFields": [
        "rate"
      ]
    },
    "linked_account_options_us_bank_account": {
      "description": "",
      "properties": {
        "filters": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters"
        },
        "permissions": {
          "description": "The list of permissions to request. The `payment_method` permission must be included.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "payment_method",
              "transactions"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "prefetch": {
          "description": "Data features requested to be retrieved upon account creation.",
          "items": {
            "enum": [
              "balances",
              "ownership",
              "transactions"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "return_url": {
          "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "linked_account_options_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "filters"
      ]
    },
    "login_link": {
      "description": "Login Links are single-use URLs for a connected account to access the Express Dashboard. The connected account's [account.controller.stripe_dashboard.type](/api/accounts/object#account_object-controller-stripe_dashboard-type) must be `express` to have access to the Express Dashboard.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "login_link"
          ],
          "type": "string"
        },
        "url": {
          "description": "The URL for the login link.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "object",
        "url"
      ],
      "title": "LoginLink",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "login_link"
    },
    "mandate": {
      "description": "A Mandate is a record of the permission that your customer gives you to debit their payment method.",
      "properties": {
        "customer_acceptance": {
          "$ref": "#/definitions/customer_acceptance"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "multi_use": {
          "$ref": "#/definitions/mandate_multi_use"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "mandate"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) that the mandate is intended for.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_method": {
          "description": "ID of the payment method associated with this mandate.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          }
        },
        "payment_method_details": {
          "$ref": "#/definitions/mandate_payment_method_details"
        },
        "single_use": {
          "$ref": "#/definitions/mandate_single_use"
        },
        "status": {
          "description": "The mandate status indicates whether or not you can use it to initiate a payment.",
          "enum": [
            "active",
            "inactive",
            "pending"
          ],
          "type": "string"
        },
        "type": {
          "description": "The type of the mandate.",
          "enum": [
            "multi_use",
            "single_use"
          ],
          "type": "string"
        }
      },
      "required": [
        "customer_acceptance",
        "id",
        "livemode",
        "object",
        "payment_method",
        "payment_method_details",
        "status",
        "type"
      ],
      "title": "Mandate",
      "type": "object",
      "x-expandableFields": [
        "customer_acceptance",
        "multi_use",
        "payment_method",
        "payment_method_details",
        "single_use"
      ],
      "x-resourceId": "mandate"
    },
    "mandate_acss_debit": {
      "description": "",
      "properties": {
        "default_for": {
          "description": "List of Stripe products where this mandate can be selected automatically.",
          "items": {
            "enum": [
              "invoice",
              "subscription"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "interval_description": {
          "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_schedule": {
          "description": "Payment schedule for the mandate.",
          "enum": [
            "combined",
            "interval",
            "sporadic"
          ],
          "type": "string"
        },
        "transaction_type": {
          "description": "Transaction type of the mandate.",
          "enum": [
            "business",
            "personal"
          ],
          "type": "string"
        }
      },
      "required": [
        "payment_schedule",
        "transaction_type"
      ],
      "title": "mandate_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_amazon_pay": {
      "description": "",
      "properties": {},
      "title": "mandate_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_au_becs_debit": {
      "description": "",
      "properties": {
        "url": {
          "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "mandate_au_becs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_bacs_debit": {
      "description": "",
      "properties": {
        "network_status": {
          "description": "The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.",
          "enum": [
            "accepted",
            "pending",
            "refused",
            "revoked"
          ],
          "type": "string"
        },
        "reference": {
          "description": "The unique reference identifying the mandate on the Bacs network.",
          "maxLength": 5000,
          "type": "string"
        },
        "revocation_reason": {
          "description": "When the mandate is revoked on the Bacs network this field displays the reason for the revocation.",
          "enum": [
            "account_closed",
            "bank_account_restricted",
            "bank_ownership_changed",
            "could_not_process",
            "debit_not_authorized"
          ],
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The URL that will contain the mandate that the customer has signed.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "network_status",
        "reference",
        "url"
      ],
      "title": "mandate_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_cashapp": {
      "description": "",
      "properties": {},
      "title": "mandate_cashapp",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_link": {
      "description": "",
      "properties": {},
      "title": "mandate_link",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_multi_use": {
      "description": "",
      "properties": {},
      "title": "mandate_multi_use",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_payment_method_details": {
      "description": "",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/mandate_acss_debit"
        },
        "amazon_pay": {
          "$ref": "#/definitions/mandate_amazon_pay"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/mandate_au_becs_debit"
        },
        "bacs_debit": {
          "$ref": "#/definitions/mandate_bacs_debit"
        },
        "card": {
          "$ref": "#/definitions/card_mandate_payment_method_details"
        },
        "cashapp": {
          "$ref": "#/definitions/mandate_cashapp"
        },
        "link": {
          "$ref": "#/definitions/mandate_link"
        },
        "paypal": {
          "$ref": "#/definitions/mandate_paypal"
        },
        "revolut_pay": {
          "$ref": "#/definitions/mandate_revolut_pay"
        },
        "sepa_debit": {
          "$ref": "#/definitions/mandate_sepa_debit"
        },
        "type": {
          "description": "This mandate corresponds with a specific payment method type. The `payment_method_details` includes an additional hash with the same name and contains mandate information that's specific to that payment method.",
          "maxLength": 5000,
          "type": "string"
        },
        "us_bank_account": {
          "$ref": "#/definitions/mandate_us_bank_account"
        }
      },
      "required": [
        "type"
      ],
      "title": "mandate_payment_method_details",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "card",
        "cashapp",
        "link",
        "paypal",
        "revolut_pay",
        "sepa_debit",
        "us_bank_account"
      ]
    },
    "mandate_paypal": {
      "description": "",
      "properties": {
        "billing_agreement_id": {
          "description": "The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payer_id": {
          "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "mandate_paypal",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_revolut_pay": {
      "description": "",
      "properties": {},
      "title": "mandate_revolut_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_sepa_debit": {
      "description": "",
      "properties": {
        "reference": {
          "description": "The unique reference of the mandate.",
          "maxLength": 5000,
          "type": "string"
        },
        "url": {
          "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "reference",
        "url"
      ],
      "title": "mandate_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_single_use": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount of the payment on a single use mandate.",
          "type": "integer"
        },
        "currency": {
          "description": "The currency of the payment on a single use mandate.",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "mandate_single_use",
      "type": "object",
      "x-expandableFields": []
    },
    "mandate_us_bank_account": {
      "description": "",
      "properties": {
        "collection_method": {
          "description": "Mandate collection method",
          "enum": [
            "paper"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "mandate_us_bank_account",
      "type": "object",
      "x-expandableFields": []
    },
    "margin": {
      "description": "A (partner) margin represents a specific discount distributed in partner reseller programs to business partners who\nresell products and services and earn a discount (margin) for doing so.",
      "properties": {
        "active": {
          "description": "Whether the margin can be applied to invoices, invoice items, or invoice line items. Defaults to `true`.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the margin that's displayed on, for example, invoices.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "margin"
          ],
          "type": "string"
        },
        "percent_off": {
          "description": "Percent that will be taken off the subtotal before tax (after all other discounts and promotions) of any invoice to which the margin is applied.",
          "type": "number"
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "active",
        "created",
        "id",
        "livemode",
        "object",
        "percent_off",
        "updated"
      ],
      "title": "Margin",
      "type": "object",
      "x-expandableFields": []
    },
    "networks": {
      "description": "",
      "properties": {
        "available": {
          "description": "All available networks for the card.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "preferred": {
          "description": "The preferred network for co-branded cards. Can be `cartes_bancaires`, `mastercard`, `visa` or `invalid_preference` if requested network is not valid for the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "available"
      ],
      "title": "networks",
      "type": "object",
      "x-expandableFields": []
    },
    "notification_event_data": {
      "description": "",
      "properties": {
        "object": {
          "description": "Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](https://stripe.com/docs/api#invoice_object) as the value of the object key.",
          "type": "object"
        },
        "previous_attributes": {
          "description": "Object containing the names of the updated attributes and their values prior to the event (only included in events of type `*.updated`). If an array attribute has any updated elements, this object contains the entire array. In Stripe API versions 2017-04-06 or earlier, an updated array attribute in this object includes only the updated array elements.",
          "type": "object"
        }
      },
      "required": [
        "object"
      ],
      "title": "NotificationEventData",
      "type": "object",
      "x-expandableFields": []
    },
    "notification_event_request": {
      "description": "",
      "properties": {
        "id": {
          "description": "ID of the API request that caused the event. If null, the event was automatic (e.g., Stripe's automatic subscription handling). Request logs are available in the [dashboard](https://dashboard.stripe.com/logs), but currently not in the API.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "idempotency_key": {
          "description": "The idempotency key transmitted during the request, if any. *Note: This property is populated only for events on or after May 23, 2017*.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "NotificationEventRequest",
      "type": "object",
      "x-expandableFields": []
    },
    "offline_acceptance": {
      "description": "",
      "properties": {},
      "title": "offline_acceptance",
      "type": "object",
      "x-expandableFields": []
    },
    "online_acceptance": {
      "description": "",
      "properties": {
        "ip_address": {
          "description": "The customer accepts the mandate from this IP address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The customer accepts the mandate using the user agent of the browser.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "online_acceptance",
      "type": "object",
      "x-expandableFields": []
    },
    "outbound_payments_payment_method_details": {
      "description": "",
      "properties": {
        "billing_details": {
          "$ref": "#/definitions/treasury_shared_resource_billing_details"
        },
        "financial_account": {
          "$ref": "#/definitions/outbound_payments_payment_method_details_financial_account"
        },
        "type": {
          "description": "The type of the payment method used in the OutboundPayment.",
          "enum": [
            "financial_account",
            "us_bank_account"
          ],
          "type": "string"
        },
        "us_bank_account": {
          "$ref": "#/definitions/outbound_payments_payment_method_details_us_bank_account"
        }
      },
      "required": [
        "billing_details",
        "type"
      ],
      "title": "OutboundPaymentsPaymentMethodDetails",
      "type": "object",
      "x-expandableFields": [
        "billing_details",
        "financial_account",
        "us_bank_account"
      ]
    },
    "outbound_payments_payment_method_details_financial_account": {
      "description": "",
      "properties": {
        "id": {
          "description": "Token of the FinancialAccount.",
          "maxLength": 5000,
          "type": "string"
        },
        "network": {
          "description": "The rails used to send funds.",
          "enum": [
            "stripe"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "network"
      ],
      "title": "outbound_payments_payment_method_details_financial_account",
      "type": "object",
      "x-expandableFields": []
    },
    "outbound_payments_payment_method_details_us_bank_account": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Account holder type: individual or company.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "Account type: checkings or savings. Defaults to checking if omitted.",
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          }
        },
        "network": {
          "description": "The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.",
          "enum": [
            "ach",
            "us_domestic_wire"
          ],
          "type": "string"
        },
        "routing_number": {
          "description": "Routing number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "network"
      ],
      "title": "outbound_payments_payment_method_details_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "mandate"
      ]
    },
    "outbound_transfers_payment_method_details": {
      "description": "",
      "properties": {
        "billing_details": {
          "$ref": "#/definitions/treasury_shared_resource_billing_details"
        },
        "type": {
          "description": "The type of the payment method used in the OutboundTransfer.",
          "enum": [
            "us_bank_account"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_account": {
          "$ref": "#/definitions/outbound_transfers_payment_method_details_us_bank_account"
        }
      },
      "required": [
        "billing_details",
        "type"
      ],
      "title": "OutboundTransfersPaymentMethodDetails",
      "type": "object",
      "x-expandableFields": [
        "billing_details",
        "us_bank_account"
      ]
    },
    "outbound_transfers_payment_method_details_us_bank_account": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Account holder type: individual or company.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "Account type: checkings or savings. Defaults to checking if omitted.",
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          }
        },
        "network": {
          "description": "The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.",
          "enum": [
            "ach",
            "us_domestic_wire"
          ],
          "type": "string"
        },
        "routing_number": {
          "description": "Routing number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "network"
      ],
      "title": "outbound_transfers_payment_method_details_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "mandate"
      ]
    },
    "package_dimensions": {
      "description": "",
      "properties": {
        "height": {
          "description": "Height, in inches.",
          "type": "number"
        },
        "length": {
          "description": "Length, in inches.",
          "type": "number"
        },
        "weight": {
          "description": "Weight, in ounces.",
          "type": "number"
        },
        "width": {
          "description": "Width, in inches.",
          "type": "number"
        }
      },
      "required": [
        "height",
        "length",
        "weight",
        "width"
      ],
      "title": "PackageDimensions",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_amount_details": {
      "description": "",
      "properties": {
        "tip": {
          "$ref": "#/definitions/payment_flows_amount_details_resource_tip"
        }
      },
      "title": "PaymentFlowsAmountDetails",
      "type": "object",
      "x-expandableFields": [
        "tip"
      ]
    },
    "payment_flows_amount_details_resource_tip": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Portion of the amount that corresponds to a tip.",
          "type": "integer"
        }
      },
      "title": "PaymentFlowsAmountDetailsResourceTip",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_automatic_payment_methods_payment_intent": {
      "description": "",
      "properties": {
        "allow_redirects": {
          "description": "Controls whether this PaymentIntent will accept redirect-based payment methods.\n\nRedirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the payment.",
          "enum": [
            "always",
            "never"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Automatically calculates compatible payment methods",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentFlowsAutomaticPaymentMethodsPaymentIntent",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_automatic_payment_methods_setup_intent": {
      "description": "",
      "properties": {
        "allow_redirects": {
          "description": "Controls whether this SetupIntent will accept redirect-based payment methods.\n\nRedirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/setup_intents/confirm) this SetupIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the setup.",
          "enum": [
            "always",
            "never"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Automatically calculates compatible payment methods",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "PaymentFlowsAutomaticPaymentMethodsSetupIntent",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_installment_options": {
      "description": "",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "plan": {
          "$ref": "#/definitions/payment_method_details_card_installments_plan"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentFlowsInstallmentOptions",
      "type": "object",
      "x-expandableFields": [
        "plan"
      ]
    },
    "payment_flows_private_payment_methods_alipay": {
      "description": "",
      "properties": {},
      "title": "PaymentFlowsPrivatePaymentMethodsAlipay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_alipay_details": {
      "description": "",
      "properties": {
        "buyer_id": {
          "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
          "maxLength": 5000,
          "type": "string"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "Transaction ID of this particular Alipay transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentFlowsPrivatePaymentMethodsAlipayDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization": {
      "description": "",
      "properties": {
        "status": {
          "description": "Indicates whether or not the capture window is extended beyond the standard authorization.",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorization",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization": {
      "description": "",
      "properties": {
        "status": {
          "description": "Indicates whether or not the incremental authorization feature is supported.",
          "enum": [
            "available",
            "unavailable"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorization",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture": {
      "description": "",
      "properties": {
        "maximum_amount_capturable": {
          "description": "The maximum amount that can be captured.",
          "type": "integer"
        },
        "status": {
          "description": "Indicates whether or not the authorized amount can be over-captured.",
          "enum": [
            "available",
            "unavailable"
          ],
          "type": "string"
        }
      },
      "required": [
        "maximum_amount_capturable",
        "status"
      ],
      "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesOvercaptureOvercapture",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_card_details_api_resource_multicapture": {
      "description": "",
      "properties": {
        "status": {
          "description": "Indicates whether or not multiple captures are supported.",
          "enum": [
            "available",
            "unavailable"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceMulticapture",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_card_present_common_wallet": {
      "description": "",
      "properties": {
        "type": {
          "description": "The type of mobile wallet, one of `apple_pay`, `google_pay`, `samsung_pay`, or `unknown`.",
          "enum": [
            "apple_pay",
            "google_pay",
            "samsung_pay",
            "unknown"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentFlowsPrivatePaymentMethodsCardPresentCommonWallet",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_klarna_dob": {
      "description": "",
      "properties": {
        "day": {
          "description": "The day of birth, between 1 and 31.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "The month of birth, between 1 and 12.",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "description": "The four-digit year of birth.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PaymentFlowsPrivatePaymentMethodsKlarnaDOB",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters": {
      "description": "",
      "properties": {
        "account_subcategories": {
          "description": "The account subcategories to use to filter for possible accounts to link. Valid subcategories are `checking` and `savings`.",
          "items": {
            "enum": [
              "checking",
              "savings"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "PaymentFlowsPrivatePaymentMethodsUsBankAccountLinkedAccountOptionsFilters",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent": {
      "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents)",
      "properties": {
        "amount": {
          "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
          "type": "integer"
        },
        "amount_capturable": {
          "description": "Amount that can be captured from this PaymentIntent.",
          "type": "integer"
        },
        "amount_details": {
          "$ref": "#/definitions/payment_flows_amount_details"
        },
        "amount_received": {
          "description": "Amount that this PaymentIntent collects.",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect application that created the PaymentIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
          "type": "integer",
          "x-nullable": true
        },
        "automatic_payment_methods": {
          "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
          "x-nullable": true
        },
        "canceled_at": {
          "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancellation_reason": {
          "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
          "enum": [
            "abandoned",
            "automatic",
            "duplicate",
            "failed_invoice",
            "fraudulent",
            "requested_by_customer",
            "void_invoice"
          ],
          "type": "string",
          "x-nullable": true
        },
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "automatic",
            "automatic_async",
            "manual"
          ],
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "confirmation_method": {
          "description": "Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.",
          "enum": [
            "automatic",
            "manual"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) is set and this PaymentIntent's payment method is not `card_present`, then the payment method attaches to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete. If the payment method is `card_present` and isn't a digital wallet, then a [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card is created and attached to the Customer instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "ID of the invoice that created this PaymentIntent, if it exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "last_payment_error": {
          "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
          "x-nullable": true
        },
        "latest_charge": {
          "description": "ID of the latest [Charge object](https://stripe.com/docs/api/charges) created by this PaymentIntent. This property is `null` until PaymentIntent confirmation is attempted.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Learn more about [storing information in metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
          "type": "object"
        },
        "next_action": {
          "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payment_intent"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method": {
          "description": "ID of the payment method used in this PaymentIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method_configuration_details": {
          "description": "Information about the payment method configuration used for this PaymentIntent.",
          "x-nullable": true
        },
        "payment_method_options": {
          "description": "Payment-method-specific configuration for this PaymentIntent.",
          "x-nullable": true
        },
        "payment_method_types": {
          "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "processing": {
          "description": "If present, this property tells you about the processing state of the payment.",
          "x-nullable": true
        },
        "receipt_email": {
          "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "review": {
          "description": "ID of the review associated with this PaymentIntent, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/review"
              }
            ]
          },
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "off_session",
            "on_session"
          ],
          "type": "string",
          "x-nullable": true
        },
        "shipping": {
          "description": "Shipping information for this PaymentIntent.",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "Text that appears on the customer's statement as the statement descriptor for a non-card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).\n\nSetting this value for a card charge returns an error. For card charges, set the [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic) instead.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_suffix": {
          "description": "Provides information about a card charge. Concatenated to the account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static) to form the complete statement descriptor that appears on the customer's statement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
          "enum": [
            "canceled",
            "processing",
            "requires_action",
            "requires_capture",
            "requires_confirmation",
            "requires_payment_method",
            "succeeded"
          ],
          "type": "string"
        },
        "transfer_data": {
          "description": "The data that automatically creates a Transfer after the payment finalizes. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
          "x-nullable": true
        },
        "transfer_group": {
          "description": "A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "capture_method",
        "confirmation_method",
        "created",
        "currency",
        "id",
        "livemode",
        "object",
        "payment_method_types",
        "status"
      ],
      "title": "PaymentIntent",
      "type": "object",
      "x-expandableFields": [
        "amount_details",
        "application",
        "automatic_payment_methods",
        "customer",
        "invoice",
        "last_payment_error",
        "latest_charge",
        "next_action",
        "on_behalf_of",
        "payment_method",
        "payment_method_configuration_details",
        "payment_method_options",
        "processing",
        "review",
        "shipping",
        "transfer_data"
      ],
      "x-resourceId": "payment_intent"
    },
    "payment_intent_card_processing": {
      "description": "",
      "properties": {
        "customer_notification": {
          "$ref": "#/definitions/payment_intent_processing_customer_notification"
        }
      },
      "title": "PaymentIntentCardProcessing",
      "type": "object",
      "x-expandableFields": [
        "customer_notification"
      ]
    },
    "payment_intent_next_action": {
      "description": "",
      "properties": {
        "alipay_handle_redirect": {
          "$ref": "#/definitions/payment_intent_next_action_alipay_handle_redirect"
        },
        "boleto_display_details": {
          "$ref": "#/definitions/payment_intent_next_action_boleto"
        },
        "card_await_notification": {
          "$ref": "#/definitions/payment_intent_next_action_card_await_notification"
        },
        "cashapp_handle_redirect_or_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code"
        },
        "display_bank_transfer_instructions": {
          "$ref": "#/definitions/payment_intent_next_action_display_bank_transfer_instructions"
        },
        "konbini_display_details": {
          "$ref": "#/definitions/payment_intent_next_action_konbini"
        },
        "multibanco_display_details": {
          "$ref": "#/definitions/payment_intent_next_action_display_multibanco_details"
        },
        "oxxo_display_details": {
          "$ref": "#/definitions/payment_intent_next_action_display_oxxo_details"
        },
        "paynow_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_paynow_display_qr_code"
        },
        "pix_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_pix_display_qr_code"
        },
        "promptpay_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_promptpay_display_qr_code"
        },
        "redirect_to_url": {
          "$ref": "#/definitions/payment_intent_next_action_redirect_to_url"
        },
        "swish_handle_redirect_or_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_swish_handle_redirect_or_display_qr_code"
        },
        "type": {
          "description": "Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.",
          "maxLength": 5000,
          "type": "string"
        },
        "use_stripe_sdk": {
          "description": "When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
          "type": "object"
        },
        "verify_with_microdeposits": {
          "$ref": "#/definitions/payment_intent_next_action_verify_with_microdeposits"
        },
        "wechat_pay_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_wechat_pay_display_qr_code"
        },
        "wechat_pay_redirect_to_android_app": {
          "$ref": "#/definitions/payment_intent_next_action_wechat_pay_redirect_to_android_app"
        },
        "wechat_pay_redirect_to_ios_app": {
          "$ref": "#/definitions/payment_intent_next_action_wechat_pay_redirect_to_ios_app"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentIntentNextAction",
      "type": "object",
      "x-expandableFields": [
        "alipay_handle_redirect",
        "boleto_display_details",
        "card_await_notification",
        "cashapp_handle_redirect_or_display_qr_code",
        "display_bank_transfer_instructions",
        "konbini_display_details",
        "multibanco_display_details",
        "oxxo_display_details",
        "paynow_display_qr_code",
        "pix_display_qr_code",
        "promptpay_display_qr_code",
        "redirect_to_url",
        "swish_handle_redirect_or_display_qr_code",
        "verify_with_microdeposits",
        "wechat_pay_display_qr_code",
        "wechat_pay_redirect_to_android_app",
        "wechat_pay_redirect_to_ios_app"
      ]
    },
    "payment_intent_next_action_alipay_handle_redirect": {
      "description": "",
      "properties": {
        "native_data": {
          "description": "The native data to be used with Alipay SDK you must redirect your customer to in order to authenticate the payment in an Android App.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "native_url": {
          "description": "The native URL you must redirect your customer to in order to authenticate the payment in an iOS App.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "return_url": {
          "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The URL you must redirect your customer to in order to authenticate the payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentNextActionAlipayHandleRedirect",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_boleto": {
      "description": "",
      "properties": {
        "expires_at": {
          "description": "The timestamp after which the boleto expires.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "hosted_voucher_url": {
          "description": "The URL to the hosted boleto voucher page, which allows customers to view the boleto voucher.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "number": {
          "description": "The boleto number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "pdf": {
          "description": "The URL to the downloadable boleto voucher PDF.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_intent_next_action_boleto",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_card_await_notification": {
      "description": "",
      "properties": {
        "charge_attempt_at": {
          "description": "The time that payment will be attempted. If customer approval is required, they need to provide approval before this time.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "customer_approval_required": {
          "description": "For payments greater than INR 15000, the customer must provide explicit approval of the payment with their bank. For payments of lower amount, no customer action is required.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentNextActionCardAwaitNotification",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code": {
      "description": "",
      "properties": {
        "hosted_instructions_url": {
          "description": "The URL to the hosted Cash App Pay instructions page, which allows customers to view the QR code, and supports QR code refreshing on expiration.",
          "maxLength": 5000,
          "type": "string"
        },
        "mobile_auth_url": {
          "description": "The url for mobile redirect based auth",
          "maxLength": 5000,
          "type": "string"
        },
        "qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_cashapp_qr_code"
        }
      },
      "required": [
        "hosted_instructions_url",
        "mobile_auth_url",
        "qr_code"
      ],
      "title": "PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode",
      "type": "object",
      "x-expandableFields": [
        "qr_code"
      ]
    },
    "payment_intent_next_action_cashapp_qr_code": {
      "description": "",
      "properties": {
        "expires_at": {
          "description": "The date (unix timestamp) when the QR code expires.",
          "format": "unix-time",
          "type": "integer"
        },
        "image_url_png": {
          "description": "The image_url_png string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The image_url_svg string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "expires_at",
        "image_url_png",
        "image_url_svg"
      ],
      "title": "PaymentIntentNextActionCashappQRCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_display_bank_transfer_instructions": {
      "description": "",
      "properties": {
        "amount_remaining": {
          "description": "The remaining amount that needs to be transferred to complete the payment.",
          "type": "integer",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string",
          "x-nullable": true
        },
        "financial_addresses": {
          "description": "A list of financial addresses that can be used to fund the customer balance",
          "items": {
            "$ref": "#/definitions/funding_instructions_bank_transfer_financial_address"
          },
          "type": "array"
        },
        "hosted_instructions_url": {
          "description": "A link to a hosted page that guides your customer through completing the transfer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "A string identifying this payment. Instruct your customer to include this code in the reference or memo field of their bank transfer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "Type of bank transfer",
          "enum": [
            "eu_bank_transfer",
            "gb_bank_transfer",
            "jp_bank_transfer",
            "mx_bank_transfer",
            "us_bank_transfer"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentIntentNextActionDisplayBankTransferInstructions",
      "type": "object",
      "x-expandableFields": [
        "financial_addresses"
      ]
    },
    "payment_intent_next_action_display_multibanco_details": {
      "description": "",
      "properties": {
        "entity": {
          "description": "Entity number associated with this Multibanco payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The timestamp at which the Multibanco voucher expires.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "hosted_voucher_url": {
          "description": "The URL for the hosted Multibanco voucher page, which allows customers to view a Multibanco voucher.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "Reference number associated with this Multibanco payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentNextActionDisplayMultibancoDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_display_oxxo_details": {
      "description": "",
      "properties": {
        "expires_after": {
          "description": "The timestamp after which the OXXO voucher expires.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "hosted_voucher_url": {
          "description": "The URL for the hosted OXXO voucher page, which allows customers to view and print an OXXO voucher.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "number": {
          "description": "OXXO reference number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentNextActionDisplayOxxoDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_konbini": {
      "description": "",
      "properties": {
        "expires_at": {
          "description": "The timestamp at which the pending Konbini payment expires.",
          "format": "unix-time",
          "type": "integer"
        },
        "hosted_voucher_url": {
          "description": "The URL for the Konbini payment instructions page, which allows customers to view and print a Konbini voucher.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "stores": {
          "$ref": "#/definitions/payment_intent_next_action_konbini_stores"
        }
      },
      "required": [
        "expires_at",
        "stores"
      ],
      "title": "payment_intent_next_action_konbini",
      "type": "object",
      "x-expandableFields": [
        "stores"
      ]
    },
    "payment_intent_next_action_konbini_familymart": {
      "description": "",
      "properties": {
        "confirmation_number": {
          "description": "The confirmation number.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_code": {
          "description": "The payment code.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "payment_code"
      ],
      "title": "payment_intent_next_action_konbini_familymart",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_konbini_lawson": {
      "description": "",
      "properties": {
        "confirmation_number": {
          "description": "The confirmation number.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_code": {
          "description": "The payment code.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "payment_code"
      ],
      "title": "payment_intent_next_action_konbini_lawson",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_konbini_ministop": {
      "description": "",
      "properties": {
        "confirmation_number": {
          "description": "The confirmation number.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_code": {
          "description": "The payment code.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "payment_code"
      ],
      "title": "payment_intent_next_action_konbini_ministop",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_konbini_seicomart": {
      "description": "",
      "properties": {
        "confirmation_number": {
          "description": "The confirmation number.",
          "maxLength": 5000,
          "type": "string"
        },
        "payment_code": {
          "description": "The payment code.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "payment_code"
      ],
      "title": "payment_intent_next_action_konbini_seicomart",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_konbini_stores": {
      "description": "",
      "properties": {
        "familymart": {
          "description": "FamilyMart instruction details.",
          "x-nullable": true
        },
        "lawson": {
          "description": "Lawson instruction details.",
          "x-nullable": true
        },
        "ministop": {
          "description": "Ministop instruction details.",
          "x-nullable": true
        },
        "seicomart": {
          "description": "Seicomart instruction details.",
          "x-nullable": true
        }
      },
      "title": "payment_intent_next_action_konbini_stores",
      "type": "object",
      "x-expandableFields": [
        "familymart",
        "lawson",
        "ministop",
        "seicomart"
      ]
    },
    "payment_intent_next_action_paynow_display_qr_code": {
      "description": "",
      "properties": {
        "data": {
          "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_instructions_url": {
          "description": "The URL to the hosted PayNow instructions page, which allows customers to view the PayNow QR code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "image_url_png": {
          "description": "The image_url_png string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The image_url_svg string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "data",
        "image_url_png",
        "image_url_svg"
      ],
      "title": "PaymentIntentNextActionPaynowDisplayQrCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_pix_display_qr_code": {
      "description": "",
      "properties": {
        "data": {
          "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
          "maxLength": 5000,
          "type": "string"
        },
        "expires_at": {
          "description": "The date (unix timestamp) when the PIX expires.",
          "type": "integer"
        },
        "hosted_instructions_url": {
          "description": "The URL to the hosted pix instructions page, which allows customers to view the pix QR code.",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_png": {
          "description": "The image_url_png string used to render png QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The image_url_svg string used to render svg QR code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "PaymentIntentNextActionPixDisplayQrCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_promptpay_display_qr_code": {
      "description": "",
      "properties": {
        "data": {
          "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_instructions_url": {
          "description": "The URL to the hosted PromptPay instructions page, which allows customers to view the PromptPay QR code.",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_png": {
          "description": "The PNG path used to render the QR code, can be used as the source in an HTML img tag",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The SVG path used to render the QR code, can be used as the source in an HTML img tag",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "data",
        "hosted_instructions_url",
        "image_url_png",
        "image_url_svg"
      ],
      "title": "PaymentIntentNextActionPromptpayDisplayQrCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_redirect_to_url": {
      "description": "",
      "properties": {
        "return_url": {
          "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The URL you must redirect your customer to in order to authenticate the payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentNextActionRedirectToUrl",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_swish_handle_redirect_or_display_qr_code": {
      "description": "",
      "properties": {
        "hosted_instructions_url": {
          "description": "The URL to the hosted Swish instructions page, which allows customers to view the QR code.",
          "maxLength": 5000,
          "type": "string"
        },
        "qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_swish_qr_code"
        }
      },
      "required": [
        "hosted_instructions_url",
        "qr_code"
      ],
      "title": "PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode",
      "type": "object",
      "x-expandableFields": [
        "qr_code"
      ]
    },
    "payment_intent_next_action_swish_qr_code": {
      "description": "",
      "properties": {
        "data": {
          "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_png": {
          "description": "The image_url_png string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The image_url_svg string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "data",
        "image_url_png",
        "image_url_svg"
      ],
      "title": "PaymentIntentNextActionSwishQRCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_verify_with_microdeposits": {
      "description": "",
      "properties": {
        "arrival_date": {
          "description": "The timestamp when the microdeposits are expected to land.",
          "format": "unix-time",
          "type": "integer"
        },
        "hosted_verification_url": {
          "description": "The URL for the hosted verification page, which allows customers to verify their bank account.",
          "maxLength": 5000,
          "type": "string"
        },
        "microdeposit_type": {
          "description": "The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.",
          "enum": [
            "amounts",
            "descriptor_code"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "arrival_date",
        "hosted_verification_url"
      ],
      "title": "PaymentIntentNextActionVerifyWithMicrodeposits",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_wechat_pay_display_qr_code": {
      "description": "",
      "properties": {
        "data": {
          "description": "The data being used to generate QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_instructions_url": {
          "description": "The URL to the hosted WeChat Pay instructions page, which allows customers to view the WeChat Pay QR code.",
          "maxLength": 5000,
          "type": "string"
        },
        "image_data_url": {
          "description": "The base64 image data for a pre-generated QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_png": {
          "description": "The image_url_png string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        },
        "image_url_svg": {
          "description": "The image_url_svg string used to render QR code",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "data",
        "hosted_instructions_url",
        "image_data_url",
        "image_url_png",
        "image_url_svg"
      ],
      "title": "PaymentIntentNextActionWechatPayDisplayQrCode",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_wechat_pay_redirect_to_android_app": {
      "description": "",
      "properties": {
        "app_id": {
          "description": "app_id is the APP ID registered on WeChat open platform",
          "maxLength": 5000,
          "type": "string"
        },
        "nonce_str": {
          "description": "nonce_str is a random string",
          "maxLength": 5000,
          "type": "string"
        },
        "package": {
          "description": "package is static value",
          "maxLength": 5000,
          "type": "string"
        },
        "partner_id": {
          "description": "an unique merchant ID assigned by WeChat Pay",
          "maxLength": 5000,
          "type": "string"
        },
        "prepay_id": {
          "description": "an unique trading ID assigned by WeChat Pay",
          "maxLength": 5000,
          "type": "string"
        },
        "sign": {
          "description": "A signature",
          "maxLength": 5000,
          "type": "string"
        },
        "timestamp": {
          "description": "Specifies the current time in epoch format",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "app_id",
        "nonce_str",
        "package",
        "partner_id",
        "prepay_id",
        "sign",
        "timestamp"
      ],
      "title": "PaymentIntentNextActionWechatPayRedirectToAndroidApp",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_next_action_wechat_pay_redirect_to_ios_app": {
      "description": "",
      "properties": {
        "native_url": {
          "description": "An universal link that redirect to WeChat Pay app",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "native_url"
      ],
      "title": "PaymentIntentNextActionWechatPayRedirectToIOSApp",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options": {
      "description": "",
      "properties": {
        "acss_debit": {},
        "affirm": {},
        "afterpay_clearpay": {},
        "alipay": {},
        "amazon_pay": {},
        "au_becs_debit": {},
        "bacs_debit": {},
        "bancontact": {},
        "blik": {},
        "boleto": {},
        "card": {},
        "card_present": {},
        "cashapp": {},
        "customer_balance": {},
        "eps": {},
        "fpx": {},
        "giropay": {},
        "grabpay": {},
        "ideal": {},
        "interac_present": {},
        "klarna": {},
        "konbini": {},
        "link": {},
        "mobilepay": {},
        "multibanco": {},
        "oxxo": {},
        "p24": {},
        "paynow": {},
        "paypal": {},
        "pix": {},
        "promptpay": {},
        "revolut_pay": {},
        "sepa_debit": {},
        "sofort": {},
        "swish": {},
        "twint": {},
        "us_bank_account": {},
        "wechat_pay": {},
        "zip": {}
      },
      "title": "PaymentIntentPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "blik",
        "boleto",
        "card",
        "card_present",
        "cashapp",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "grabpay",
        "ideal",
        "interac_present",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "promptpay",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "swish",
        "twint",
        "us_bank_account",
        "wechat_pay",
        "zip"
      ]
    },
    "payment_intent_payment_method_options_acss_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/payment_intent_payment_method_options_mandate_options_acss_debit"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_intent_payment_method_options_acss_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "payment_intent_payment_method_options_au_becs_debit": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_au_becs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_bacs_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/payment_intent_payment_method_options_mandate_options_bacs_debit"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_bacs_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "payment_intent_payment_method_options_blik": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_intent_payment_method_options_blik",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_card": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "installments": {
          "description": "Installment details for this payment (Mexico only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
          "x-nullable": true
        },
        "mandate_options": {
          "description": "Configuration options for setting up an eMandate for cards issued in India.",
          "x-nullable": true
        },
        "network": {
          "description": "Selected network to process this payment intent on. Depends on the available networks of the card attached to the payment intent. Can be only set confirm-time.",
          "enum": [
            "amex",
            "cartes_bancaires",
            "diners",
            "discover",
            "eftpos_au",
            "girocard",
            "interac",
            "jcb",
            "mastercard",
            "unionpay",
            "unknown",
            "visa"
          ],
          "type": "string",
          "x-nullable": true
        },
        "request_extended_authorization": {
          "description": "Request ability to [capture beyond the standard authorization validity window](https://stripe.com/docs/payments/extended-authorization) for this PaymentIntent.",
          "enum": [
            "if_available",
            "never"
          ],
          "type": "string"
        },
        "request_incremental_authorization": {
          "description": "Request ability to [increment the authorization](https://stripe.com/docs/payments/incremental-authorization) for this PaymentIntent.",
          "enum": [
            "if_available",
            "never"
          ],
          "type": "string"
        },
        "request_multicapture": {
          "description": "Request ability to make [multiple captures](https://stripe.com/docs/payments/multicapture) for this PaymentIntent.",
          "enum": [
            "if_available",
            "never"
          ],
          "type": "string"
        },
        "request_overcapture": {
          "description": "Request ability to [overcapture](https://stripe.com/docs/payments/overcapture) for this PaymentIntent.",
          "enum": [
            "if_available",
            "never"
          ],
          "type": "string"
        },
        "request_three_d_secure": {
          "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
          "enum": [
            "any",
            "automatic",
            "challenge"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "require_cvc_recollection": {
          "description": "When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).",
          "type": "boolean"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "statement_descriptor_suffix_kana": {
          "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "statement_descriptor_suffix_kanji": {
          "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_card",
      "type": "object",
      "x-expandableFields": [
        "installments",
        "mandate_options"
      ]
    },
    "payment_intent_payment_method_options_eps": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_eps",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_link": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_link",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_mandate_options_acss_debit": {
      "description": "",
      "properties": {
        "custom_mandate_url": {
          "description": "A URL for custom mandate text",
          "maxLength": 5000,
          "type": "string"
        },
        "interval_description": {
          "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_schedule": {
          "description": "Payment schedule for the mandate.",
          "enum": [
            "combined",
            "interval",
            "sporadic"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transaction_type": {
          "description": "Transaction type of the mandate.",
          "enum": [
            "business",
            "personal"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_intent_payment_method_options_mandate_options_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_mandate_options_bacs_debit": {
      "description": "",
      "properties": {},
      "title": "payment_intent_payment_method_options_mandate_options_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_mandate_options_sepa_debit": {
      "description": "",
      "properties": {},
      "title": "payment_intent_payment_method_options_mandate_options_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_mobilepay": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_mobilepay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_sepa_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/payment_intent_payment_method_options_mandate_options_sepa_debit"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_sepa_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "payment_intent_payment_method_options_swish": {
      "description": "",
      "properties": {
        "reference": {
          "description": "The order ID displayed in the Swish app after the payment is authorized.",
          "maxLength": 35,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_intent_payment_method_options_swish",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_payment_method_options_us_bank_account": {
      "description": "",
      "properties": {
        "financial_connections": {
          "$ref": "#/definitions/linked_account_options_us_bank_account"
        },
        "mandate_options": {
          "$ref": "#/definitions/payment_method_options_us_bank_account_mandate_options"
        },
        "preferred_settlement_speed": {
          "description": "Preferred transaction settlement speed",
          "enum": [
            "fastest",
            "standard"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_intent_payment_method_options_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "financial_connections",
        "mandate_options"
      ]
    },
    "payment_intent_processing": {
      "description": "",
      "properties": {
        "card": {
          "$ref": "#/definitions/payment_intent_card_processing"
        },
        "type": {
          "description": "Type of the payment method for which payment is in `processing` state, one of `card`.",
          "enum": [
            "card"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentIntentProcessing",
      "type": "object",
      "x-expandableFields": [
        "card"
      ]
    },
    "payment_intent_processing_customer_notification": {
      "description": "",
      "properties": {
        "approval_requested": {
          "description": "Whether customer approval has been requested for this payment. For payments greater than INR 15000 or mandate amount, the customer must provide explicit approval of the payment with their bank.",
          "type": "boolean",
          "x-nullable": true
        },
        "completes_at": {
          "description": "If customer approval is required, they need to provide approval before this time.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PaymentIntentProcessingCustomerNotification",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_intent_type_specific_payment_method_options_client": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual",
            "manual_preferred"
          ],
          "type": "string"
        },
        "installments": {
          "$ref": "#/definitions/payment_flows_installment_options"
        },
        "request_incremental_authorization_support": {
          "description": "Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.",
          "type": "boolean"
        },
        "require_cvc_recollection": {
          "description": "When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).",
          "type": "boolean"
        },
        "routing": {
          "$ref": "#/definitions/payment_method_options_card_present_routing"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "PaymentIntentTypeSpecificPaymentMethodOptionsClient",
      "type": "object",
      "x-expandableFields": [
        "installments",
        "routing"
      ]
    },
    "payment_link": {
      "description": "A payment link is a shareable URL that will take your customers to a hosted payment page. A payment link can be shared and used multiple times.\n\nWhen a customer opens a payment link it will open a new [checkout session](https://stripe.com/docs/api/checkout/sessions) to render the payment page. You can use [checkout session events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed) to track payments through payment links.\n\nRelated guide: [Payment Links API](https://stripe.com/docs/payment-links)",
      "properties": {
        "active": {
          "description": "Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.",
          "type": "boolean"
        },
        "after_completion": {
          "$ref": "#/definitions/payment_links_resource_after_completion"
        },
        "allow_promotion_codes": {
          "description": "Whether user redeemable promotion codes are enabled.",
          "type": "boolean"
        },
        "application": {
          "description": "The ID of the Connect application that created the Payment Link.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account.",
          "type": "integer",
          "x-nullable": true
        },
        "application_fee_percent": {
          "description": "This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.",
          "type": "number",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/payment_links_resource_automatic_tax"
        },
        "billing_address_collection": {
          "description": "Configuration for collecting the customer's billing address. Defaults to `auto`.",
          "enum": [
            "auto",
            "required"
          ],
          "type": "string"
        },
        "consent_collection": {
          "description": "When set, provides configuration to gather active consent from customers.",
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "custom_fields": {
          "description": "Collect additional information from your customer using custom fields. Up to 3 fields are supported.",
          "items": {
            "$ref": "#/definitions/payment_links_resource_custom_fields"
          },
          "type": "array"
        },
        "custom_text": {
          "$ref": "#/definitions/payment_links_resource_custom_text"
        },
        "customer_creation": {
          "description": "Configuration for Customer creation during checkout.",
          "enum": [
            "always",
            "if_required"
          ],
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "inactive_message": {
          "description": "The custom message to be displayed to a customer when a payment link is no longer active.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_creation": {
          "description": "Configuration for creating invoice for payment mode payment links.",
          "x-nullable": true
        },
        "line_items": {
          "description": "The line items representing what is being sold.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "PaymentLinksResourceListLineItems",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payment_link"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_intent_data": {
          "description": "Indicates the parameters to be passed to PaymentIntent creation during checkout.",
          "x-nullable": true
        },
        "payment_method_collection": {
          "description": "Configuration for collecting a payment method during checkout. Defaults to `always`.",
          "enum": [
            "always",
            "if_required"
          ],
          "type": "string"
        },
        "payment_method_types": {
          "description": "The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you've enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).",
          "items": {
            "enum": [
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "cashapp",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "klarna",
              "konbini",
              "link",
              "mobilepay",
              "multibanco",
              "oxxo",
              "p24",
              "paynow",
              "paypal",
              "pix",
              "promptpay",
              "sepa_debit",
              "sofort",
              "swish",
              "twint",
              "us_bank_account",
              "wechat_pay",
              "zip"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "phone_number_collection": {
          "$ref": "#/definitions/payment_links_resource_phone_number_collection"
        },
        "restrictions": {
          "description": "Settings that restrict the usage of a payment link.",
          "x-nullable": true
        },
        "shipping_address_collection": {
          "description": "Configuration for collecting the customer's shipping address.",
          "x-nullable": true
        },
        "shipping_options": {
          "description": "The shipping rate options applied to the session.",
          "items": {
            "$ref": "#/definitions/payment_links_resource_shipping_option"
          },
          "type": "array"
        },
        "submit_type": {
          "description": "Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.",
          "enum": [
            "auto",
            "book",
            "donate",
            "pay"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "subscription_data": {
          "description": "When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.",
          "x-nullable": true
        },
        "tax_id_collection": {
          "$ref": "#/definitions/payment_links_resource_tax_id_collection"
        },
        "transfer_data": {
          "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.",
          "x-nullable": true
        },
        "url": {
          "description": "The public URL that can be shared with customers.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "active",
        "after_completion",
        "allow_promotion_codes",
        "automatic_tax",
        "billing_address_collection",
        "currency",
        "custom_fields",
        "custom_text",
        "customer_creation",
        "id",
        "livemode",
        "metadata",
        "object",
        "payment_method_collection",
        "phone_number_collection",
        "shipping_options",
        "submit_type",
        "tax_id_collection",
        "url"
      ],
      "title": "PaymentLink",
      "type": "object",
      "x-expandableFields": [
        "after_completion",
        "application",
        "automatic_tax",
        "consent_collection",
        "custom_fields",
        "custom_text",
        "invoice_creation",
        "line_items",
        "on_behalf_of",
        "payment_intent_data",
        "phone_number_collection",
        "restrictions",
        "shipping_address_collection",
        "shipping_options",
        "subscription_data",
        "tax_id_collection",
        "transfer_data"
      ],
      "x-resourceId": "payment_link"
    },
    "payment_links_resource_after_completion": {
      "description": "",
      "properties": {
        "hosted_confirmation": {
          "$ref": "#/definitions/payment_links_resource_completion_behavior_confirmation_page"
        },
        "redirect": {
          "$ref": "#/definitions/payment_links_resource_completion_behavior_redirect"
        },
        "type": {
          "description": "The specified behavior after the purchase is complete.",
          "enum": [
            "hosted_confirmation",
            "redirect"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentLinksResourceAfterCompletion",
      "type": "object",
      "x-expandableFields": [
        "hosted_confirmation",
        "redirect"
      ]
    },
    "payment_links_resource_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "If `true`, tax will be calculated automatically using the customer's location.",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentLinksResourceAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "payment_links_resource_completed_sessions": {
      "description": "",
      "properties": {
        "count": {
          "description": "The current number of checkout sessions that have been completed on the payment link which count towards the `completed_sessions` restriction to be met.",
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of checkout sessions that can be completed for the `completed_sessions` restriction to be met.",
          "type": "integer"
        }
      },
      "required": [
        "count",
        "limit"
      ],
      "title": "PaymentLinksResourceCompletedSessions",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_completion_behavior_confirmation_page": {
      "description": "",
      "properties": {
        "custom_message": {
          "description": "The custom message that is displayed to the customer after the purchase is complete.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceCompletionBehaviorConfirmationPage",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_completion_behavior_redirect": {
      "description": "",
      "properties": {
        "url": {
          "description": "The URL the customer will be redirected to after the purchase is complete.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "PaymentLinksResourceCompletionBehaviorRedirect",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_consent_collection": {
      "description": "",
      "properties": {
        "payment_method_reuse_agreement": {
          "description": "Settings related to the payment method reuse text shown in the Checkout UI.",
          "x-nullable": true
        },
        "promotions": {
          "description": "If set to `auto`, enables the collection of customer consent for promotional communications.",
          "enum": [
            "auto",
            "none"
          ],
          "type": "string",
          "x-nullable": true
        },
        "terms_of_service": {
          "description": "If set to `required`, it requires cutomers to accept the terms of service before being able to pay. If set to `none`, customers won't be shown a checkbox to accept the terms of service.",
          "enum": [
            "none",
            "required"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceConsentCollection",
      "type": "object",
      "x-expandableFields": [
        "payment_method_reuse_agreement"
      ]
    },
    "payment_links_resource_custom_fields": {
      "description": "",
      "properties": {
        "dropdown": {
          "$ref": "#/definitions/payment_links_resource_custom_fields_dropdown"
        },
        "key": {
          "description": "String of your choice that your integration can use to reconcile this field. Must be unique to this field, alphanumeric, and up to 200 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/payment_links_resource_custom_fields_label"
        },
        "numeric": {
          "$ref": "#/definitions/payment_links_resource_custom_fields_numeric"
        },
        "optional": {
          "description": "Whether the customer is required to complete the field before completing the Checkout Session. Defaults to `false`.",
          "type": "boolean"
        },
        "text": {
          "$ref": "#/definitions/payment_links_resource_custom_fields_text"
        },
        "type": {
          "description": "The type of the field.",
          "enum": [
            "dropdown",
            "numeric",
            "text"
          ],
          "type": "string"
        }
      },
      "required": [
        "key",
        "label",
        "optional",
        "type"
      ],
      "title": "PaymentLinksResourceCustomFields",
      "type": "object",
      "x-expandableFields": [
        "dropdown",
        "label",
        "numeric",
        "text"
      ]
    },
    "payment_links_resource_custom_fields_dropdown": {
      "description": "",
      "properties": {
        "options": {
          "description": "The options available for the customer to select. Up to 200 options allowed.",
          "items": {
            "$ref": "#/definitions/payment_links_resource_custom_fields_dropdown_option"
          },
          "type": "array"
        }
      },
      "required": [
        "options"
      ],
      "title": "PaymentLinksResourceCustomFieldsDropdown",
      "type": "object",
      "x-expandableFields": [
        "options"
      ]
    },
    "payment_links_resource_custom_fields_dropdown_option": {
      "description": "",
      "properties": {
        "label": {
          "description": "The label for the option, displayed to the customer. Up to 100 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "value": {
          "description": "The value for this option, not displayed to the customer, used by your integration to reconcile the option selected by the customer. Must be unique to this option, alphanumeric, and up to 100 characters.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ],
      "title": "PaymentLinksResourceCustomFieldsDropdownOption",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_custom_fields_label": {
      "description": "",
      "properties": {
        "custom": {
          "description": "Custom text for the label, displayed to the customer. Up to 50 characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The type of the label.",
          "enum": [
            "custom"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentLinksResourceCustomFieldsLabel",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_custom_fields_numeric": {
      "description": "",
      "properties": {
        "maximum_length": {
          "description": "The maximum character length constraint for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "minimum_length": {
          "description": "The minimum character length requirement for the customer's input.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceCustomFieldsNumeric",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_custom_fields_text": {
      "description": "",
      "properties": {
        "maximum_length": {
          "description": "The maximum character length constraint for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "minimum_length": {
          "description": "The minimum character length requirement for the customer's input.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceCustomFieldsText",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_custom_text": {
      "description": "",
      "properties": {
        "after_submit": {
          "description": "Custom text that should be displayed after the payment confirmation button.",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Custom text that should be displayed alongside shipping address collection.",
          "x-nullable": true
        },
        "submit": {
          "description": "Custom text that should be displayed alongside the payment confirmation button.",
          "x-nullable": true
        },
        "terms_of_service_acceptance": {
          "description": "Custom text that should be displayed in place of the default terms of service agreement text.",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceCustomText",
      "type": "object",
      "x-expandableFields": [
        "after_submit",
        "shipping_address",
        "submit",
        "terms_of_service_acceptance"
      ]
    },
    "payment_links_resource_custom_text_position": {
      "description": "",
      "properties": {
        "message": {
          "description": "Text may be up to 1200 characters in length.",
          "maxLength": 500,
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "PaymentLinksResourceCustomTextPosition",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_invoice_creation": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Enable creating an invoice on successful payment.",
          "type": "boolean"
        },
        "invoice_data": {
          "description": "Configuration for the invoice. Default invoice values will be used if unspecified.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentLinksResourceInvoiceCreation",
      "type": "object",
      "x-expandableFields": [
        "invoice_data"
      ]
    },
    "payment_links_resource_invoice_settings": {
      "description": "",
      "properties": {
        "account_tax_ids": {
          "description": "The account tax IDs associated with the invoice.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "custom_fields": {
          "description": "A list of up to 4 custom fields to be displayed on the invoice.",
          "items": {
            "$ref": "#/definitions/invoice_setting_custom_field"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "footer": {
          "description": "Footer to be displayed on the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "rendering_options": {
          "description": "Options for invoice PDF rendering.",
          "x-nullable": true
        }
      },
      "title": "PaymentLinksResourceInvoiceSettings",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "custom_fields",
        "issuer",
        "rendering_options"
      ]
    },
    "payment_links_resource_payment_intent_data": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Indicates when the funds will be captured from the customer's account.",
          "enum": [
            "automatic",
            "automatic_async",
            "manual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Payment Intents](https://stripe.com/docs/api/payment_intents) generated from this payment link.",
          "type": "object"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with the payment method collected during checkout.",
          "enum": [
            "off_session",
            "on_session"
          ],
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "For a non-card payment, information about the charge that appears on the customer's statement when this payment succeeds in creating a charge.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor_suffix": {
          "description": "For a card payment, information about the charge that appears on the customer's statement when this payment succeeds in creating a charge. Concatenated with the account's statement descriptor prefix to form the complete statement descriptor.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transfer_group": {
          "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "metadata"
      ],
      "title": "PaymentLinksResourcePaymentIntentData",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_payment_method_reuse_agreement": {
      "description": "",
      "properties": {
        "position": {
          "description": "Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.\n\nWhen set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.",
          "enum": [
            "auto",
            "hidden"
          ],
          "type": "string"
        }
      },
      "required": [
        "position"
      ],
      "title": "PaymentLinksResourcePaymentMethodReuseAgreement",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_phone_number_collection": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "If `true`, a phone number will be collected during checkout.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentLinksResourcePhoneNumberCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_restrictions": {
      "description": "",
      "properties": {
        "completed_sessions": {
          "$ref": "#/definitions/payment_links_resource_completed_sessions"
        }
      },
      "required": [
        "completed_sessions"
      ],
      "title": "PaymentLinksResourceRestrictions",
      "type": "object",
      "x-expandableFields": [
        "completed_sessions"
      ]
    },
    "payment_links_resource_shipping_address_collection": {
      "description": "",
      "properties": {
        "allowed_countries": {
          "description": "An array of two-letter ISO country codes representing which countries Checkout should provide as options for shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.",
          "items": {
            "enum": [
              "AC",
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CV",
              "CW",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SZ",
              "TA",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VN",
              "VU",
              "WF",
              "WS",
              "XK",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW",
              "ZZ"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "allowed_countries"
      ],
      "title": "PaymentLinksResourceShippingAddressCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_shipping_option": {
      "description": "",
      "properties": {
        "shipping_amount": {
          "description": "A non-negative integer in cents representing how much to charge.",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The ID of the Shipping Rate to use for this shipping option.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/shipping_rate"
              }
            ]
          }
        }
      },
      "required": [
        "shipping_amount",
        "shipping_rate"
      ],
      "title": "PaymentLinksResourceShippingOption",
      "type": "object",
      "x-expandableFields": [
        "shipping_rate"
      ]
    },
    "payment_links_resource_subscription_data": {
      "description": "",
      "properties": {
        "description": {
          "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_settings": {
          "$ref": "#/definitions/payment_links_resource_subscription_data_invoice_settings"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Subscriptions](https://stripe.com/docs/api/subscriptions) generated from this payment link.",
          "type": "object"
        },
        "trial_period_days": {
          "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
          "type": "integer",
          "x-nullable": true
        },
        "trial_settings": {
          "description": "Settings related to subscription trials.",
          "x-nullable": true
        }
      },
      "required": [
        "invoice_settings",
        "metadata"
      ],
      "title": "PaymentLinksResourceSubscriptionData",
      "type": "object",
      "x-expandableFields": [
        "invoice_settings",
        "trial_settings"
      ]
    },
    "payment_links_resource_subscription_data_invoice_settings": {
      "description": "",
      "properties": {
        "issuer": {
          "$ref": "#/definitions/connect_account_reference"
        }
      },
      "required": [
        "issuer"
      ],
      "title": "PaymentLinksResourceSubscriptionDataInvoiceSettings",
      "type": "object",
      "x-expandableFields": [
        "issuer"
      ]
    },
    "payment_links_resource_tax_id_collection": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates whether tax ID collection is enabled for the session.",
          "type": "boolean"
        },
        "required": {
          "enum": [
            "if_supported",
            "never"
          ],
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "required"
      ],
      "title": "PaymentLinksResourceTaxIdCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_links_resource_transfer_data": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount in cents (or local equivalent) that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
          "type": "integer",
          "x-nullable": true
        },
        "destination": {
          "description": "The connected account receiving the transfer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "PaymentLinksResourceTransferData",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "payment_method": {
      "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/payment_method_acss_debit"
        },
        "affirm": {
          "$ref": "#/definitions/payment_method_affirm"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/payment_method_afterpay_clearpay"
        },
        "alipay": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_alipay"
        },
        "allow_redisplay": {
          "description": "This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.",
          "enum": [
            "always",
            "limited",
            "unspecified"
          ],
          "type": "string"
        },
        "amazon_pay": {
          "$ref": "#/definitions/payment_method_amazon_pay"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/payment_method_au_becs_debit"
        },
        "bacs_debit": {
          "$ref": "#/definitions/payment_method_bacs_debit"
        },
        "bancontact": {
          "$ref": "#/definitions/payment_method_bancontact"
        },
        "billing_details": {
          "$ref": "#/definitions/billing_details"
        },
        "blik": {
          "$ref": "#/definitions/payment_method_blik"
        },
        "boleto": {
          "$ref": "#/definitions/payment_method_boleto"
        },
        "card": {
          "$ref": "#/definitions/payment_method_card"
        },
        "card_present": {
          "$ref": "#/definitions/payment_method_card_present"
        },
        "cashapp": {
          "$ref": "#/definitions/payment_method_cashapp"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          },
          "x-nullable": true
        },
        "customer_balance": {
          "$ref": "#/definitions/payment_method_customer_balance"
        },
        "eps": {
          "$ref": "#/definitions/payment_method_eps"
        },
        "fpx": {
          "$ref": "#/definitions/payment_method_fpx"
        },
        "giropay": {
          "$ref": "#/definitions/payment_method_giropay"
        },
        "grabpay": {
          "$ref": "#/definitions/payment_method_grabpay"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "ideal": {
          "$ref": "#/definitions/payment_method_ideal"
        },
        "interac_present": {
          "$ref": "#/definitions/payment_method_interac_present"
        },
        "klarna": {
          "$ref": "#/definitions/payment_method_klarna"
        },
        "konbini": {
          "$ref": "#/definitions/payment_method_konbini"
        },
        "link": {
          "$ref": "#/definitions/payment_method_link"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "mobilepay": {
          "$ref": "#/definitions/payment_method_mobilepay"
        },
        "multibanco": {
          "$ref": "#/definitions/payment_method_multibanco"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payment_method"
          ],
          "type": "string"
        },
        "oxxo": {
          "$ref": "#/definitions/payment_method_oxxo"
        },
        "p24": {
          "$ref": "#/definitions/payment_method_p24"
        },
        "paynow": {
          "$ref": "#/definitions/payment_method_paynow"
        },
        "paypal": {
          "$ref": "#/definitions/payment_method_paypal"
        },
        "pix": {
          "$ref": "#/definitions/payment_method_pix"
        },
        "promptpay": {
          "$ref": "#/definitions/payment_method_promptpay"
        },
        "radar_options": {
          "$ref": "#/definitions/radar_radar_options"
        },
        "revolut_pay": {
          "$ref": "#/definitions/payment_method_revolut_pay"
        },
        "sepa_debit": {
          "$ref": "#/definitions/payment_method_sepa_debit"
        },
        "sofort": {
          "$ref": "#/definitions/payment_method_sofort"
        },
        "swish": {
          "$ref": "#/definitions/payment_method_swish"
        },
        "twint": {
          "$ref": "#/definitions/payment_method_twint"
        },
        "type": {
          "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
          "enum": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "amazon_pay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "blik",
            "boleto",
            "card",
            "card_present",
            "cashapp",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "mobilepay",
            "multibanco",
            "oxxo",
            "p24",
            "paynow",
            "paypal",
            "pix",
            "promptpay",
            "revolut_pay",
            "sepa_debit",
            "sofort",
            "swish",
            "twint",
            "us_bank_account",
            "wechat_pay",
            "zip"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_account": {
          "$ref": "#/definitions/payment_method_us_bank_account"
        },
        "wechat_pay": {
          "$ref": "#/definitions/payment_method_wechat_pay"
        },
        "zip": {
          "$ref": "#/definitions/payment_method_zip"
        }
      },
      "required": [
        "billing_details",
        "created",
        "id",
        "livemode",
        "object",
        "type"
      ],
      "title": "PaymentMethod",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "billing_details",
        "blik",
        "boleto",
        "card",
        "card_present",
        "cashapp",
        "customer",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "grabpay",
        "ideal",
        "interac_present",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "promptpay",
        "radar_options",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "swish",
        "twint",
        "us_bank_account",
        "wechat_pay",
        "zip"
      ],
      "x-resourceId": "payment_method"
    },
    "payment_method_acss_debit": {
      "description": "",
      "properties": {
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "institution_number": {
          "description": "Institution number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transit_number": {
          "description": "Transit number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_affirm": {
      "description": "",
      "properties": {},
      "title": "payment_method_affirm",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_afterpay_clearpay": {
      "description": "",
      "properties": {},
      "title": "payment_method_afterpay_clearpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_amazon_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_au_becs_debit": {
      "description": "",
      "properties": {
        "bsb_number": {
          "description": "Six-digit number identifying bank and branch associated with this bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_au_becs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_bacs_debit": {
      "description": "",
      "properties": {
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sort_code": {
          "description": "Sort code of the bank account. (e.g., `10-20-30`)",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_bancontact": {
      "description": "",
      "properties": {},
      "title": "payment_method_bancontact",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_blik": {
      "description": "",
      "properties": {},
      "title": "payment_method_blik",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_boleto": {
      "description": "",
      "properties": {
        "tax_id": {
          "description": "Uniquely identifies the customer tax id (CNPJ or CPF)",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "tax_id"
      ],
      "title": "payment_method_boleto",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "checks": {
          "description": "Checks on Card address and CVC if provided.",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "display_brand": {
          "description": "The brand to use when displaying the card, this accounts for customer's brand choice on dual-branded cards. Can be `american_express`, `cartes_bancaires`, `diners_club`, `discover`, `eftpos_australia`, `interac`, `jcb`, `mastercard`, `union_pay`, `visa`, or `other` and may contain more values in the future.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "generated_from": {
          "description": "Details of the original PaymentMethod that created this object.",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "networks": {
          "description": "Contains information about card networks that can be used to process the payment.",
          "x-nullable": true
        },
        "three_d_secure_usage": {
          "description": "Contains details on how this Card may be used for 3D Secure authentication.",
          "x-nullable": true
        },
        "wallet": {
          "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
          "x-nullable": true
        }
      },
      "required": [
        "brand",
        "exp_month",
        "exp_year",
        "funding",
        "last4"
      ],
      "title": "payment_method_card",
      "type": "object",
      "x-expandableFields": [
        "checks",
        "generated_from",
        "networks",
        "three_d_secure_usage",
        "wallet"
      ]
    },
    "payment_method_card_checks": {
      "description": "",
      "properties": {
        "address_line1_check": {
          "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_postal_code_check": {
          "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_card_checks",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_generated_card": {
      "description": "",
      "properties": {
        "charge": {
          "description": "The charge that created this object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_method_details": {
          "description": "Transaction-specific details of the payment method used in the payment.",
          "x-nullable": true
        },
        "setup_attempt": {
          "description": "The ID of the SetupAttempt that generated this PaymentMethod, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_attempt"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "payment_method_card_generated_card",
      "type": "object",
      "x-expandableFields": [
        "payment_method_details",
        "setup_attempt"
      ]
    },
    "payment_method_card_present": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "brand_product": {
          "description": "The [product code](https://stripe.com/docs/card-product-codes) that identifies the specific program or product associated with a card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cardholder_name": {
          "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "A high-level description of the type of cards issued in this range.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "description": "The name of the card's issuing bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "networks": {
          "description": "Contains information about card networks that can be used to process the payment.",
          "x-nullable": true
        },
        "offline": {
          "description": "Details about payment methods collected offline.",
          "x-nullable": true
        },
        "preferred_locales": {
          "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "read_method": {
          "description": "How card details were read in this transaction.",
          "enum": [
            "contact_emv",
            "contactless_emv",
            "contactless_magstripe_mode",
            "magnetic_stripe_fallback",
            "magnetic_stripe_track2"
          ],
          "type": "string",
          "x-nullable": true
        },
        "wallet": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_present_common_wallet"
        }
      },
      "required": [
        "exp_month",
        "exp_year"
      ],
      "title": "payment_method_card_present",
      "type": "object",
      "x-expandableFields": [
        "networks",
        "offline",
        "wallet"
      ]
    },
    "payment_method_card_present_networks": {
      "description": "",
      "properties": {
        "available": {
          "description": "All available networks for the card.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "preferred": {
          "description": "The preferred network for the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "available"
      ],
      "title": "payment_method_card_present_networks",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet": {
      "description": "",
      "properties": {
        "amex_express_checkout": {
          "$ref": "#/definitions/payment_method_card_wallet_amex_express_checkout"
        },
        "apple_pay": {
          "$ref": "#/definitions/payment_method_card_wallet_apple_pay"
        },
        "dynamic_last4": {
          "description": "(For tokenized numbers only.) The last four digits of the device account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "google_pay": {
          "$ref": "#/definitions/payment_method_card_wallet_google_pay"
        },
        "link": {
          "$ref": "#/definitions/payment_method_card_wallet_link"
        },
        "masterpass": {
          "$ref": "#/definitions/payment_method_card_wallet_masterpass"
        },
        "samsung_pay": {
          "$ref": "#/definitions/payment_method_card_wallet_samsung_pay"
        },
        "type": {
          "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
          "enum": [
            "amex_express_checkout",
            "apple_pay",
            "google_pay",
            "link",
            "masterpass",
            "samsung_pay",
            "visa_checkout"
          ],
          "type": "string"
        },
        "visa_checkout": {
          "$ref": "#/definitions/payment_method_card_wallet_visa_checkout"
        }
      },
      "required": [
        "type"
      ],
      "title": "payment_method_card_wallet",
      "type": "object",
      "x-expandableFields": [
        "amex_express_checkout",
        "apple_pay",
        "google_pay",
        "link",
        "masterpass",
        "samsung_pay",
        "visa_checkout"
      ]
    },
    "payment_method_card_wallet_amex_express_checkout": {
      "description": "",
      "properties": {},
      "title": "payment_method_card_wallet_amex_express_checkout",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet_apple_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_card_wallet_apple_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet_google_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_card_wallet_google_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet_link": {
      "description": "",
      "properties": {},
      "title": "payment_method_card_wallet_link",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet_masterpass": {
      "description": "",
      "properties": {
        "billing_address": {
          "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        },
        "email": {
          "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        }
      },
      "title": "payment_method_card_wallet_masterpass",
      "type": "object",
      "x-expandableFields": [
        "billing_address",
        "shipping_address"
      ]
    },
    "payment_method_card_wallet_samsung_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_card_wallet_samsung_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_card_wallet_visa_checkout": {
      "description": "",
      "properties": {
        "billing_address": {
          "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        },
        "email": {
          "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        }
      },
      "title": "payment_method_card_wallet_visa_checkout",
      "type": "object",
      "x-expandableFields": [
        "billing_address",
        "shipping_address"
      ]
    },
    "payment_method_cashapp": {
      "description": "",
      "properties": {
        "buyer_id": {
          "description": "A unique and immutable identifier assigned by Cash App to every buyer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cashtag": {
          "description": "A public identifier for buyers using Cash App.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_cashapp",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_config_biz_payment_method_configuration_details": {
      "description": "",
      "properties": {
        "id": {
          "description": "ID of the payment method configuration used.",
          "maxLength": 5000,
          "type": "string"
        },
        "parent": {
          "description": "ID of the parent payment method configuration used.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ],
      "title": "PaymentMethodConfigBizPaymentMethodConfigurationDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_config_resource_display_preference": {
      "description": "",
      "properties": {
        "overridable": {
          "description": "For child configs, whether or not the account's preference will be observed. If `false`, the parent configuration's default is used.",
          "type": "boolean",
          "x-nullable": true
        },
        "preference": {
          "description": "The account's display preference.",
          "enum": [
            "none",
            "off",
            "on"
          ],
          "type": "string"
        },
        "value": {
          "description": "The effective display preference value.",
          "enum": [
            "off",
            "on"
          ],
          "type": "string"
        }
      },
      "required": [
        "preference",
        "value"
      ],
      "title": "PaymentMethodConfigResourceDisplayPreference",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_config_resource_payment_method_properties": {
      "description": "",
      "properties": {
        "available": {
          "description": "Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active.",
          "type": "boolean"
        },
        "display_preference": {
          "$ref": "#/definitions/payment_method_config_resource_display_preference"
        }
      },
      "required": [
        "available",
        "display_preference"
      ],
      "title": "PaymentMethodConfigResourcePaymentMethodProperties",
      "type": "object",
      "x-expandableFields": [
        "display_preference"
      ]
    },
    "payment_method_configuration": {
      "description": "PaymentMethodConfigurations control which payment methods are displayed to your customers when you don't explicitly specify payment method types. You can have multiple configurations with different sets of payment methods for different scenarios.\n\nThere are two types of PaymentMethodConfigurations. Which is used depends on the [charge type](https://stripe.com/docs/connect/charges):\n\n**Direct** configurations apply to payments created on your account, including Connect destination charges, Connect separate charges and transfers, and payments not involving Connect.\n\n**Child** configurations apply to payments created on your connected accounts using direct charges, and charges with the on_behalf_of parameter.\n\nChild configurations have a `parent` that sets default values and controls which settings connected accounts may override. You can specify a parent ID at payment time, and Stripe will automatically resolve the connected account’s associated child configuration. Parent configurations are [managed in the dashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts) and are not available in this API.\n\nRelated guides:\n- [Payment Method Configurations API](https://stripe.com/docs/connect/payment-method-configurations)\n- [Multiple configurations on dynamic payment methods](https://stripe.com/docs/payments/multiple-payment-method-configs)\n- [Multiple configurations for your Connect accounts](https://stripe.com/docs/connect/multiple-payment-method-configurations)",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "active": {
          "description": "Whether the configuration can be used for new payments.",
          "type": "boolean"
        },
        "affirm": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "alipay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "amazon_pay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "apple_pay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "application": {
          "description": "For child configs, the Connect application associated with the configuration.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "au_becs_debit": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "bacs_debit": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "bancontact": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "blik": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "boleto": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "card": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "cartes_bancaires": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "cashapp": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "customer_balance": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "eps": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "fpx": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "giropay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "google_pay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "grabpay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "ideal": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "is_default": {
          "description": "The default configuration is used whenever a payment method configuration is not specified.",
          "type": "boolean"
        },
        "jcb": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "klarna": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "konbini": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "link": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "mobilepay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "multibanco": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "name": {
          "description": "The configuration's name.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payment_method_configuration"
          ],
          "type": "string"
        },
        "oxxo": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "p24": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "parent": {
          "description": "For child configs, the configuration's parent configuration.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "paynow": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "paypal": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "promptpay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "revolut_pay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "sepa_debit": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "sofort": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "swish": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "twint": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "us_bank_account": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "wechat_pay": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        },
        "zip": {
          "$ref": "#/definitions/payment_method_config_resource_payment_method_properties"
        }
      },
      "required": [
        "active",
        "id",
        "is_default",
        "livemode",
        "name",
        "object"
      ],
      "title": "PaymentMethodConfigResourcePaymentMethodConfiguration",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "apple_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "blik",
        "boleto",
        "card",
        "cartes_bancaires",
        "cashapp",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "google_pay",
        "grabpay",
        "ideal",
        "jcb",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "promptpay",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "swish",
        "twint",
        "us_bank_account",
        "wechat_pay",
        "zip"
      ],
      "x-resourceId": "payment_method_configuration"
    },
    "payment_method_customer_balance": {
      "description": "",
      "properties": {},
      "title": "payment_method_customer_balance",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details": {
      "description": "",
      "properties": {
        "ach_credit_transfer": {
          "$ref": "#/definitions/payment_method_details_ach_credit_transfer"
        },
        "ach_debit": {
          "$ref": "#/definitions/payment_method_details_ach_debit"
        },
        "acss_debit": {
          "$ref": "#/definitions/payment_method_details_acss_debit"
        },
        "affirm": {
          "$ref": "#/definitions/payment_method_details_affirm"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/payment_method_details_afterpay_clearpay"
        },
        "alipay": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_alipay_details"
        },
        "amazon_pay": {
          "$ref": "#/definitions/payment_method_details_amazon_pay"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/payment_method_details_au_becs_debit"
        },
        "bacs_debit": {
          "$ref": "#/definitions/payment_method_details_bacs_debit"
        },
        "bancontact": {
          "$ref": "#/definitions/payment_method_details_bancontact"
        },
        "blik": {
          "$ref": "#/definitions/payment_method_details_blik"
        },
        "boleto": {
          "$ref": "#/definitions/payment_method_details_boleto"
        },
        "card": {
          "$ref": "#/definitions/payment_method_details_card"
        },
        "card_present": {
          "$ref": "#/definitions/payment_method_details_card_present"
        },
        "cashapp": {
          "$ref": "#/definitions/payment_method_details_cashapp"
        },
        "customer_balance": {
          "$ref": "#/definitions/payment_method_details_customer_balance"
        },
        "eps": {
          "$ref": "#/definitions/payment_method_details_eps"
        },
        "fpx": {
          "$ref": "#/definitions/payment_method_details_fpx"
        },
        "giropay": {
          "$ref": "#/definitions/payment_method_details_giropay"
        },
        "grabpay": {
          "$ref": "#/definitions/payment_method_details_grabpay"
        },
        "ideal": {
          "$ref": "#/definitions/payment_method_details_ideal"
        },
        "interac_present": {
          "$ref": "#/definitions/payment_method_details_interac_present"
        },
        "klarna": {
          "$ref": "#/definitions/payment_method_details_klarna"
        },
        "konbini": {
          "$ref": "#/definitions/payment_method_details_konbini"
        },
        "link": {
          "$ref": "#/definitions/payment_method_details_link"
        },
        "mobilepay": {
          "$ref": "#/definitions/payment_method_details_mobilepay"
        },
        "multibanco": {
          "$ref": "#/definitions/payment_method_details_multibanco"
        },
        "oxxo": {
          "$ref": "#/definitions/payment_method_details_oxxo"
        },
        "p24": {
          "$ref": "#/definitions/payment_method_details_p24"
        },
        "paynow": {
          "$ref": "#/definitions/payment_method_details_paynow"
        },
        "paypal": {
          "$ref": "#/definitions/payment_method_details_paypal"
        },
        "pix": {
          "$ref": "#/definitions/payment_method_details_pix"
        },
        "promptpay": {
          "$ref": "#/definitions/payment_method_details_promptpay"
        },
        "revolut_pay": {
          "$ref": "#/definitions/payment_method_details_revolut_pay"
        },
        "sepa_debit": {
          "$ref": "#/definitions/payment_method_details_sepa_debit"
        },
        "sofort": {
          "$ref": "#/definitions/payment_method_details_sofort"
        },
        "stripe_account": {
          "$ref": "#/definitions/payment_method_details_stripe_account"
        },
        "swish": {
          "$ref": "#/definitions/payment_method_details_swish"
        },
        "twint": {
          "$ref": "#/definitions/payment_method_details_twint"
        },
        "type": {
          "description": "The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.\nAn additional hash is included on `payment_method_details` with a name matching this value.\nIt contains information specific to the payment method.",
          "maxLength": 5000,
          "type": "string"
        },
        "us_bank_account": {
          "$ref": "#/definitions/payment_method_details_us_bank_account"
        },
        "wechat": {
          "$ref": "#/definitions/payment_method_details_wechat"
        },
        "wechat_pay": {
          "$ref": "#/definitions/payment_method_details_wechat_pay"
        },
        "zip": {
          "$ref": "#/definitions/payment_method_details_zip"
        }
      },
      "required": [
        "type"
      ],
      "title": "payment_method_details",
      "type": "object",
      "x-expandableFields": [
        "ach_credit_transfer",
        "ach_debit",
        "acss_debit",
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "blik",
        "boleto",
        "card",
        "card_present",
        "cashapp",
        "customer_balance",
        "eps",
        "fpx",
        "giropay",
        "grabpay",
        "ideal",
        "interac_present",
        "klarna",
        "konbini",
        "link",
        "mobilepay",
        "multibanco",
        "oxxo",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "promptpay",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "stripe_account",
        "swish",
        "twint",
        "us_bank_account",
        "wechat",
        "wechat_pay",
        "zip"
      ]
    },
    "payment_method_details_ach_credit_transfer": {
      "description": "",
      "properties": {
        "account_number": {
          "description": "Account number to transfer funds to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the routing number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "description": "Routing transit number for the bank account to transfer funds to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "swift_code": {
          "description": "SWIFT code of the bank associated with the routing number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_ach_credit_transfer",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_ach_debit": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Type of entity that holds the account. This can be either `individual` or `company`.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "description": "Routing transit number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_ach_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_acss_debit": {
      "description": "",
      "properties": {
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "institution_number": {
          "description": "Institution number of the bank account",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "maxLength": 5000,
          "type": "string"
        },
        "transit_number": {
          "description": "Transit number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_affirm": {
      "description": "",
      "properties": {
        "transaction_id": {
          "description": "The Affirm transaction ID associated with this payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_affirm",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_afterpay_clearpay": {
      "description": "",
      "properties": {
        "order_id": {
          "description": "The Afterpay order ID associated with this payment intent.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "Order identifier shown to the merchant in Afterpay’s online portal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_afterpay_clearpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_amazon_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_au_becs_debit": {
      "description": "",
      "properties": {
        "bsb_number": {
          "description": "Bank-State-Branch number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "payment_method_details_au_becs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_bacs_debit": {
      "description": "",
      "properties": {
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "sort_code": {
          "description": "Sort code of the bank account. (e.g., `10-20-30`)",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_bancontact": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "Bank Identifier Code of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
          "enum": [
            "de",
            "en",
            "fr",
            "nl"
          ],
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_bancontact",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "payment_method_details_blik": {
      "description": "",
      "properties": {
        "buyer_id": {
          "description": "A unique and immutable identifier assigned by BLIK to every buyer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_blik",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_boleto": {
      "description": "",
      "properties": {
        "tax_id": {
          "description": "The tax ID of the customer (CPF for individuals consumers or CNPJ for businesses consumers)",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "tax_id"
      ],
      "title": "payment_method_details_boleto",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card": {
      "description": "",
      "properties": {
        "amount_authorized": {
          "description": "The authorized amount.",
          "type": "integer",
          "x-nullable": true
        },
        "authorization_code": {
          "description": "Authorization code on the charge.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "capture_before": {
          "description": "When using manual capture, a future timestamp at which the charge will be automatically refunded if uncaptured.",
          "format": "unix-time",
          "type": "integer"
        },
        "checks": {
          "description": "Check results by Card networks on Card address and CVC at time of payment.",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "extended_authorization": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "incremental_authorization": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization"
        },
        "installments": {
          "description": "Installment details for this payment (Mexico only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment or created by it.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "multicapture": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_details_api_resource_multicapture"
        },
        "network": {
          "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network_token": {
          "description": "If this card has network token credentials, this contains the details of the network token credentials.",
          "x-nullable": true
        },
        "overcapture": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture"
        },
        "three_d_secure": {
          "description": "Populated if this transaction used 3D Secure authentication.",
          "x-nullable": true
        },
        "wallet": {
          "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
          "x-nullable": true
        }
      },
      "required": [
        "exp_month",
        "exp_year"
      ],
      "title": "payment_method_details_card",
      "type": "object",
      "x-expandableFields": [
        "checks",
        "extended_authorization",
        "incremental_authorization",
        "installments",
        "multicapture",
        "network_token",
        "overcapture",
        "three_d_secure",
        "wallet"
      ]
    },
    "payment_method_details_card_checks": {
      "description": "",
      "properties": {
        "address_line1_check": {
          "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_postal_code_check": {
          "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_checks",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_installments": {
      "description": "",
      "properties": {
        "plan": {
          "description": "Installment plan selected for the payment.",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_installments",
      "type": "object",
      "x-expandableFields": [
        "plan"
      ]
    },
    "payment_method_details_card_installments_plan": {
      "description": "",
      "properties": {
        "count": {
          "description": "For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.",
          "type": "integer",
          "x-nullable": true
        },
        "interval": {
          "description": "For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.\nOne of `month`.",
          "enum": [
            "month"
          ],
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "Type of installment plan, one of `fixed_count`.",
          "enum": [
            "fixed_count"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "type"
      ],
      "title": "payment_method_details_card_installments_plan",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_network_token": {
      "description": "",
      "properties": {
        "used": {
          "description": "Indicates if Stripe used a network token, either user provided or Stripe managed when processing the transaction.",
          "type": "boolean"
        }
      },
      "required": [
        "used"
      ],
      "title": "payment_method_details_card_network_token",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_present": {
      "description": "",
      "properties": {
        "amount_authorized": {
          "description": "The authorized amount",
          "type": "integer",
          "x-nullable": true
        },
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "brand_product": {
          "description": "The [product code](https://stripe.com/docs/card-product-codes) that identifies the specific program or product associated with a card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "capture_before": {
          "description": "When using manual capture, a future timestamp after which the charge will be automatically refunded if uncaptured.",
          "format": "unix-time",
          "type": "integer"
        },
        "cardholder_name": {
          "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "A high-level description of the type of cards issued in this range.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "emv_auth_data": {
          "description": "Authorization response cryptogram.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_card": {
          "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "incremental_authorization_supported": {
          "description": "Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents) is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).",
          "type": "boolean"
        },
        "issuer": {
          "description": "The name of the card's issuing bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network": {
          "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network_transaction_id": {
          "description": "This is used by the financial networks to identify a transaction. Visa calls this the Transaction ID, Mastercard calls this the Trace ID, and American Express calls this the Acquirer Reference Data. The first three digits of the Trace ID is the Financial Network Code, the next 6 digits is the Banknet Reference Number, and the last 4 digits represent the date (MM/DD). This field will be available for successful Visa, Mastercard, or American Express transactions and always null for other card brands.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "offline": {
          "description": "Details about payments collected offline.",
          "x-nullable": true
        },
        "overcapture_supported": {
          "description": "Defines whether the authorized amount can be over-captured or not",
          "type": "boolean"
        },
        "preferred_locales": {
          "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "read_method": {
          "description": "How card details were read in this transaction.",
          "enum": [
            "contact_emv",
            "contactless_emv",
            "contactless_magstripe_mode",
            "magnetic_stripe_fallback",
            "magnetic_stripe_track2"
          ],
          "type": "string",
          "x-nullable": true
        },
        "receipt": {
          "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
          "x-nullable": true
        },
        "wallet": {
          "$ref": "#/definitions/payment_flows_private_payment_methods_card_present_common_wallet"
        }
      },
      "required": [
        "exp_month",
        "exp_year",
        "incremental_authorization_supported",
        "overcapture_supported"
      ],
      "title": "payment_method_details_card_present",
      "type": "object",
      "x-expandableFields": [
        "offline",
        "receipt",
        "wallet"
      ]
    },
    "payment_method_details_card_present_offline": {
      "description": "",
      "properties": {
        "stored_at": {
          "description": "Time at which the payment was collected while offline",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "type": {
          "description": "The method used to process this payment method offline. Only deferred is allowed.",
          "enum": [
            "deferred"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_present_offline",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_present_receipt": {
      "description": "",
      "properties": {
        "account_type": {
          "description": "The type of account being debited or credited",
          "enum": [
            "checking",
            "credit",
            "prepaid",
            "unknown"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "application_cryptogram": {
          "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "application_preferred_name": {
          "description": "Mnenomic of the Application Identifier.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "authorization_code": {
          "description": "Identifier for this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "authorization_response_code": {
          "description": "EMV tag 8A. A code returned by the card issuer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cardholder_verification_method": {
          "description": "Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "dedicated_file_name": {
          "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "terminal_verification_results": {
          "description": "The outcome of a series of EMV functions performed by the card reader.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_status_information": {
          "description": "An indication of various EMV functions performed during the transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_present_receipt",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet": {
      "description": "",
      "properties": {
        "amex_express_checkout": {
          "$ref": "#/definitions/payment_method_details_card_wallet_amex_express_checkout"
        },
        "apple_pay": {
          "$ref": "#/definitions/payment_method_details_card_wallet_apple_pay"
        },
        "dynamic_last4": {
          "description": "(For tokenized numbers only.) The last four digits of the device account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "google_pay": {
          "$ref": "#/definitions/payment_method_details_card_wallet_google_pay"
        },
        "link": {
          "$ref": "#/definitions/payment_method_details_card_wallet_link"
        },
        "masterpass": {
          "$ref": "#/definitions/payment_method_details_card_wallet_masterpass"
        },
        "samsung_pay": {
          "$ref": "#/definitions/payment_method_details_card_wallet_samsung_pay"
        },
        "type": {
          "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
          "enum": [
            "amex_express_checkout",
            "apple_pay",
            "google_pay",
            "link",
            "masterpass",
            "samsung_pay",
            "visa_checkout"
          ],
          "type": "string"
        },
        "visa_checkout": {
          "$ref": "#/definitions/payment_method_details_card_wallet_visa_checkout"
        }
      },
      "required": [
        "type"
      ],
      "title": "payment_method_details_card_wallet",
      "type": "object",
      "x-expandableFields": [
        "amex_express_checkout",
        "apple_pay",
        "google_pay",
        "link",
        "masterpass",
        "samsung_pay",
        "visa_checkout"
      ]
    },
    "payment_method_details_card_wallet_amex_express_checkout": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_card_wallet_amex_express_checkout",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet_apple_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_card_wallet_apple_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet_google_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_card_wallet_google_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet_link": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_card_wallet_link",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet_masterpass": {
      "description": "",
      "properties": {
        "billing_address": {
          "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        },
        "email": {
          "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_wallet_masterpass",
      "type": "object",
      "x-expandableFields": [
        "billing_address",
        "shipping_address"
      ]
    },
    "payment_method_details_card_wallet_samsung_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_card_wallet_samsung_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_card_wallet_visa_checkout": {
      "description": "",
      "properties": {
        "billing_address": {
          "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        },
        "email": {
          "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_card_wallet_visa_checkout",
      "type": "object",
      "x-expandableFields": [
        "billing_address",
        "shipping_address"
      ]
    },
    "payment_method_details_cashapp": {
      "description": "",
      "properties": {
        "buyer_id": {
          "description": "A unique and immutable identifier assigned by Cash App to every buyer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cashtag": {
          "description": "A public identifier for buyers using Cash App.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_cashapp",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_customer_balance": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_customer_balance",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_eps": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
          "enum": [
            "arzte_und_apotheker_bank",
            "austrian_anadi_bank_ag",
            "bank_austria",
            "bankhaus_carl_spangler",
            "bankhaus_schelhammer_und_schattera_ag",
            "bawag_psk_ag",
            "bks_bank_ag",
            "brull_kallmus_bank_ag",
            "btv_vier_lander_bank",
            "capital_bank_grawe_gruppe_ag",
            "deutsche_bank_ag",
            "dolomitenbank",
            "easybank_ag",
            "erste_bank_und_sparkassen",
            "hypo_alpeadriabank_international_ag",
            "hypo_bank_burgenland_aktiengesellschaft",
            "hypo_noe_lb_fur_niederosterreich_u_wien",
            "hypo_oberosterreich_salzburg_steiermark",
            "hypo_tirol_bank_ag",
            "hypo_vorarlberg_bank_ag",
            "marchfelder_bank",
            "oberbank_ag",
            "raiffeisen_bankengruppe_osterreich",
            "schoellerbank_ag",
            "sparda_bank_wien",
            "volksbank_gruppe",
            "volkskreditbank_ag",
            "vr_bank_braunau"
          ],
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by EPS directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nEPS rarely provides this information so the attribute is usually empty.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_eps",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_fpx": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
          "enum": [
            "affin_bank",
            "agrobank",
            "alliance_bank",
            "ambank",
            "bank_islam",
            "bank_muamalat",
            "bank_of_china",
            "bank_rakyat",
            "bsn",
            "cimb",
            "deutsche_bank",
            "hong_leong_bank",
            "hsbc",
            "kfh",
            "maybank2e",
            "maybank2u",
            "ocbc",
            "pb_enterprise",
            "public_bank",
            "rhb",
            "standard_chartered",
            "uob"
          ],
          "type": "string"
        },
        "transaction_id": {
          "description": "Unique transaction id generated by FPX for every request from the merchant",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "bank"
      ],
      "title": "payment_method_details_fpx",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_giropay": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "Bank Identifier Code of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by Giropay directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nGiropay rarely provides this information so the attribute is usually empty.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_giropay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_grabpay": {
      "description": "",
      "properties": {
        "transaction_id": {
          "description": "Unique transaction id generated by GrabPay",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_grabpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_ideal": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.",
          "enum": [
            "abn_amro",
            "asn_bank",
            "bunq",
            "handelsbanken",
            "ing",
            "knab",
            "moneyou",
            "n26",
            "nn",
            "rabobank",
            "regiobank",
            "revolut",
            "sns_bank",
            "triodos_bank",
            "van_lanschot",
            "yoursafe"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "The Bank Identifier Code of the customer's bank.",
          "enum": [
            "ABNANL2A",
            "ASNBNL21",
            "BITSNL2A",
            "BUNQNL2A",
            "FVLBNL22",
            "HANDNL2A",
            "INGBNL2A",
            "KNABNL2H",
            "MOYONL21",
            "NNBANL2G",
            "NTSBDEB1",
            "RABONL2U",
            "RBRBNL21",
            "REVOIE23",
            "REVOLT21",
            "SNSBNL2A",
            "TRIONL2U"
          ],
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by iDEAL directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_ideal",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "payment_method_details_interac_present": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `interac`, `mastercard` or `visa`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cardholder_name": {
          "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "A high-level description of the type of cards issued in this range.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "emv_auth_data": {
          "description": "Authorization response cryptogram.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_card": {
          "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "description": "The name of the card's issuing bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network": {
          "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network_transaction_id": {
          "description": "This is used by the financial networks to identify a transaction. Visa calls this the Transaction ID, Mastercard calls this the Trace ID, and American Express calls this the Acquirer Reference Data. The first three digits of the Trace ID is the Financial Network Code, the next 6 digits is the Banknet Reference Number, and the last 4 digits represent the date (MM/DD). This field will be available for successful Visa, Mastercard, or American Express transactions and always null for other card brands.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_locales": {
          "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "read_method": {
          "description": "How card details were read in this transaction.",
          "enum": [
            "contact_emv",
            "contactless_emv",
            "contactless_magstripe_mode",
            "magnetic_stripe_fallback",
            "magnetic_stripe_track2"
          ],
          "type": "string",
          "x-nullable": true
        },
        "receipt": {
          "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
          "x-nullable": true
        }
      },
      "required": [
        "exp_month",
        "exp_year"
      ],
      "title": "payment_method_details_interac_present",
      "type": "object",
      "x-expandableFields": [
        "receipt"
      ]
    },
    "payment_method_details_interac_present_receipt": {
      "description": "",
      "properties": {
        "account_type": {
          "description": "The type of account being debited or credited",
          "enum": [
            "checking",
            "savings",
            "unknown"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "application_cryptogram": {
          "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "application_preferred_name": {
          "description": "Mnenomic of the Application Identifier.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "authorization_code": {
          "description": "Identifier for this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "authorization_response_code": {
          "description": "EMV tag 8A. A code returned by the card issuer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cardholder_verification_method": {
          "description": "Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "dedicated_file_name": {
          "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "terminal_verification_results": {
          "description": "The outcome of a series of EMV functions performed by the card reader.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_status_information": {
          "description": "An indication of various EMV functions performed during the transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_interac_present_receipt",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_klarna": {
      "description": "",
      "properties": {
        "payer_details": {
          "description": "The payer details for this transaction.",
          "x-nullable": true
        },
        "payment_method_category": {
          "description": "The Klarna payment method used for this transaction.\nCan be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_locale": {
          "description": "Preferred language of the Klarna authorization page that the customer is redirected to.\nCan be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `cs-CZ`, `en-CZ`, `ro-RO`, `en-RO`, `el-GR`, `en-GR`, `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_klarna",
      "type": "object",
      "x-expandableFields": [
        "payer_details"
      ]
    },
    "payment_method_details_konbini": {
      "description": "",
      "properties": {
        "store": {
          "description": "If the payment succeeded, this contains the details of the convenience store where the payment was completed.",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_konbini",
      "type": "object",
      "x-expandableFields": [
        "store"
      ]
    },
    "payment_method_details_konbini_store": {
      "description": "",
      "properties": {
        "chain": {
          "description": "The name of the convenience store chain where the payment was completed.",
          "enum": [
            "familymart",
            "lawson",
            "ministop",
            "seicomart"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_konbini_store",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_link": {
      "description": "",
      "properties": {
        "country": {
          "description": "Two-letter ISO code representing the funding source country beneath the Link payment.\nYou could use this attribute to get a sense of international fees.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_link",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_mobilepay": {
      "description": "",
      "properties": {
        "card": {
          "description": "Internal card details",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_mobilepay",
      "type": "object",
      "x-expandableFields": [
        "card"
      ]
    },
    "payment_method_details_multibanco": {
      "description": "",
      "properties": {
        "entity": {
          "description": "Entity number associated with this Multibanco payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "Reference number associated with this Multibanco payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_multibanco",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_oxxo": {
      "description": "",
      "properties": {
        "number": {
          "description": "OXXO reference number",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_oxxo",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_p24": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `velobank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.",
          "enum": [
            "alior_bank",
            "bank_millennium",
            "bank_nowy_bfg_sa",
            "bank_pekao_sa",
            "banki_spbdzielcze",
            "blik",
            "bnp_paribas",
            "boz",
            "citi_handlowy",
            "credit_agricole",
            "envelobank",
            "etransfer_pocztowy24",
            "getin_bank",
            "ideabank",
            "ing",
            "inteligo",
            "mbank_mtransfer",
            "nest_przelew",
            "noble_pay",
            "pbac_z_ipko",
            "plus_bank",
            "santander_przelew24",
            "tmobile_usbugi_bankowe",
            "toyota_bank",
            "velobank",
            "volkswagen_bank"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "Unique reference for this Przelewy24 payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by Przelewy24 directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nPrzelewy24 rarely provides this information so the attribute is usually empty.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_p24",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_paynow": {
      "description": "",
      "properties": {
        "reference": {
          "description": "Reference number associated with this PayNow payment",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_paynow",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_paypal": {
      "description": "",
      "properties": {
        "payer_email": {
          "description": "Owner's email. Values are provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payer_id": {
          "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payer_name": {
          "description": "Owner's full name. Values provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "seller_protection": {
          "description": "The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "A unique ID generated by PayPal for this transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_paypal",
      "type": "object",
      "x-expandableFields": [
        "seller_protection"
      ]
    },
    "payment_method_details_pix": {
      "description": "",
      "properties": {
        "bank_transaction_id": {
          "description": "Unique transaction id generated by BCB",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_pix",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_promptpay": {
      "description": "",
      "properties": {
        "reference": {
          "description": "Bill reference generated by PromptPay",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_promptpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_revolut_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_revolut_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_sepa_debit": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "branch_code": {
          "description": "Branch code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "Find the ID of the mandate used for this payment under the [payment_method_details.sepa_debit.mandate](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-sepa_debit-mandate) property on the Charge. Use this mandate ID to [retrieve the Mandate](https://stripe.com/docs/api/mandates/retrieve).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_sofort": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "Bank Identifier Code of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.\nCan be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`",
          "enum": [
            "de",
            "en",
            "es",
            "fr",
            "it",
            "nl",
            "pl"
          ],
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by SOFORT directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_sofort",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "payment_method_details_stripe_account": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_stripe_account",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_swish": {
      "description": "",
      "properties": {
        "fingerprint": {
          "description": "Uniquely identifies the payer's Swish account. You can use this attribute to check whether two Swish transactions were paid for by the same payer",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_reference": {
          "description": "Payer bank reference number for the payment",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_phone_last4": {
          "description": "The last four digits of the Swish account phone number",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_swish",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_twint": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_twint",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_us_bank_account": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Account holder type: individual or company.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "Account type: checkings or savings. Defaults to checking if omitted.",
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "mandate": {
          "description": "ID of the mandate used to make this payment.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          }
        },
        "payment_reference": {
          "description": "Reference number to locate ACH payments with customer's bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "description": "Routing number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "mandate"
      ]
    },
    "payment_method_details_wechat": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_wechat",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_wechat_pay": {
      "description": "",
      "properties": {
        "fingerprint": {
          "description": "Uniquely identifies this particular WeChat Pay account. You can use this attribute to check whether two WeChat accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "Transaction ID of this particular WeChat Pay transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_details_wechat_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_details_zip": {
      "description": "",
      "properties": {},
      "title": "payment_method_details_zip",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_domain": {
      "description": "A payment method domain represents a web domain that you have registered with Stripe.\nStripe Elements use registered payment method domains to control where certain payment methods are shown.\n\nRelated guide: [Payment method domains](https://stripe.com/docs/payments/payment-methods/pmd-registration).",
      "properties": {
        "apple_pay": {
          "$ref": "#/definitions/payment_method_domain_resource_payment_method_status"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "domain_name": {
          "description": "The domain name that this payment method domain object represents.",
          "maxLength": 5000,
          "type": "string"
        },
        "enabled": {
          "description": "Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.",
          "type": "boolean"
        },
        "google_pay": {
          "$ref": "#/definitions/payment_method_domain_resource_payment_method_status"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/payment_method_domain_resource_payment_method_status"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payment_method_domain"
          ],
          "type": "string"
        },
        "paypal": {
          "$ref": "#/definitions/payment_method_domain_resource_payment_method_status"
        }
      },
      "required": [
        "apple_pay",
        "created",
        "domain_name",
        "enabled",
        "google_pay",
        "id",
        "link",
        "livemode",
        "object",
        "paypal"
      ],
      "title": "PaymentMethodDomainResourcePaymentMethodDomain",
      "type": "object",
      "x-expandableFields": [
        "apple_pay",
        "google_pay",
        "link",
        "paypal"
      ],
      "x-resourceId": "payment_method_domain"
    },
    "payment_method_domain_resource_payment_method_status": {
      "description": "Indicates the status of a specific payment method on a payment method domain.",
      "properties": {
        "status": {
          "description": "The status of the payment method on the domain.",
          "enum": [
            "active",
            "inactive"
          ],
          "type": "string"
        },
        "status_details": {
          "$ref": "#/definitions/payment_method_domain_resource_payment_method_status_details"
        }
      },
      "required": [
        "status"
      ],
      "title": "PaymentMethodDomainResourcePaymentMethodStatus",
      "type": "object",
      "x-expandableFields": [
        "status_details"
      ]
    },
    "payment_method_domain_resource_payment_method_status_details": {
      "description": "Contains additional details about the status of a payment method for a specific payment method domain.",
      "properties": {
        "error_message": {
          "description": "The error message associated with the status of the payment method on the domain.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "error_message"
      ],
      "title": "PaymentMethodDomainResourcePaymentMethodStatusDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_eps": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
          "enum": [
            "arzte_und_apotheker_bank",
            "austrian_anadi_bank_ag",
            "bank_austria",
            "bankhaus_carl_spangler",
            "bankhaus_schelhammer_und_schattera_ag",
            "bawag_psk_ag",
            "bks_bank_ag",
            "brull_kallmus_bank_ag",
            "btv_vier_lander_bank",
            "capital_bank_grawe_gruppe_ag",
            "deutsche_bank_ag",
            "dolomitenbank",
            "easybank_ag",
            "erste_bank_und_sparkassen",
            "hypo_alpeadriabank_international_ag",
            "hypo_bank_burgenland_aktiengesellschaft",
            "hypo_noe_lb_fur_niederosterreich_u_wien",
            "hypo_oberosterreich_salzburg_steiermark",
            "hypo_tirol_bank_ag",
            "hypo_vorarlberg_bank_ag",
            "marchfelder_bank",
            "oberbank_ag",
            "raiffeisen_bankengruppe_osterreich",
            "schoellerbank_ag",
            "sparda_bank_wien",
            "volksbank_gruppe",
            "volkskreditbank_ag",
            "vr_bank_braunau"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_eps",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_fpx": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
          "enum": [
            "affin_bank",
            "agrobank",
            "alliance_bank",
            "ambank",
            "bank_islam",
            "bank_muamalat",
            "bank_of_china",
            "bank_rakyat",
            "bsn",
            "cimb",
            "deutsche_bank",
            "hong_leong_bank",
            "hsbc",
            "kfh",
            "maybank2e",
            "maybank2u",
            "ocbc",
            "pb_enterprise",
            "public_bank",
            "rhb",
            "standard_chartered",
            "uob"
          ],
          "type": "string"
        }
      },
      "required": [
        "bank"
      ],
      "title": "payment_method_fpx",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_giropay": {
      "description": "",
      "properties": {},
      "title": "payment_method_giropay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_grabpay": {
      "description": "",
      "properties": {},
      "title": "payment_method_grabpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_ideal": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.",
          "enum": [
            "abn_amro",
            "asn_bank",
            "bunq",
            "handelsbanken",
            "ing",
            "knab",
            "moneyou",
            "n26",
            "nn",
            "rabobank",
            "regiobank",
            "revolut",
            "sns_bank",
            "triodos_bank",
            "van_lanschot",
            "yoursafe"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "The Bank Identifier Code of the customer's bank, if the bank was provided.",
          "enum": [
            "ABNANL2A",
            "ASNBNL21",
            "BITSNL2A",
            "BUNQNL2A",
            "FVLBNL22",
            "HANDNL2A",
            "INGBNL2A",
            "KNABNL2H",
            "MOYONL21",
            "NNBANL2G",
            "NTSBDEB1",
            "RABONL2U",
            "RBRBNL21",
            "REVOIE23",
            "REVOLT21",
            "SNSBNL2A",
            "TRIONL2U"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_ideal",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_interac_present": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `interac`, `mastercard` or `visa`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cardholder_name": {
          "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "A high-level description of the type of cards issued in this range.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "description": "The name of the card's issuing bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "networks": {
          "description": "Contains information about card networks that can be used to process the payment.",
          "x-nullable": true
        },
        "preferred_locales": {
          "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "read_method": {
          "description": "How card details were read in this transaction.",
          "enum": [
            "contact_emv",
            "contactless_emv",
            "contactless_magstripe_mode",
            "magnetic_stripe_fallback",
            "magnetic_stripe_track2"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "exp_month",
        "exp_year"
      ],
      "title": "payment_method_interac_present",
      "type": "object",
      "x-expandableFields": [
        "networks"
      ]
    },
    "payment_method_klarna": {
      "description": "",
      "properties": {
        "dob": {
          "description": "The customer's date of birth, if provided.",
          "x-nullable": true
        }
      },
      "title": "payment_method_klarna",
      "type": "object",
      "x-expandableFields": [
        "dob"
      ]
    },
    "payment_method_konbini": {
      "description": "",
      "properties": {},
      "title": "payment_method_konbini",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_link": {
      "description": "",
      "properties": {
        "email": {
          "description": "Account owner's email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_link",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_mobilepay": {
      "description": "",
      "properties": {},
      "title": "payment_method_mobilepay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_multibanco": {
      "description": "",
      "properties": {},
      "title": "payment_method_multibanco",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_affirm": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "preferred_locale": {
          "description": "Preferred language of the Affirm authorization page that the customer is redirected to.",
          "maxLength": 30,
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_affirm",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_afterpay_clearpay": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "reference": {
          "description": "An internal identifier or reference that this payment corresponds to. You must limit the identifier to 128 characters, and it can only contain letters, numbers, underscores, backslashes, and dashes.\nThis field differs from the statement descriptor and item name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_method_options_afterpay_clearpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_alipay": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_alipay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_amazon_pay": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_bancontact": {
      "description": "",
      "properties": {
        "preferred_language": {
          "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
          "enum": [
            "de",
            "en",
            "fr",
            "nl"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "required": [
        "preferred_language"
      ],
      "title": "payment_method_options_bancontact",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_boleto": {
      "description": "",
      "properties": {
        "expires_after_days": {
          "description": "The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.",
          "type": "integer"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "required": [
        "expires_after_days"
      ],
      "title": "payment_method_options_boleto",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_card_installments": {
      "description": "",
      "properties": {
        "available_plans": {
          "description": "Installment plans that may be selected for this PaymentIntent.",
          "items": {
            "$ref": "#/definitions/payment_method_details_card_installments_plan"
          },
          "type": "array",
          "x-nullable": true
        },
        "enabled": {
          "description": "Whether Installments are enabled for this PaymentIntent.",
          "type": "boolean"
        },
        "plan": {
          "description": "Installment plan selected for this PaymentIntent.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "payment_method_options_card_installments",
      "type": "object",
      "x-expandableFields": [
        "available_plans",
        "plan"
      ]
    },
    "payment_method_options_card_mandate_options": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount to be charged for future payments.",
          "type": "integer"
        },
        "amount_type": {
          "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
          "enum": [
            "fixed",
            "maximum"
          ],
          "type": "string"
        },
        "description": {
          "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
          "maxLength": 200,
          "type": "string",
          "x-nullable": true
        },
        "end_date": {
          "description": "End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "interval": {
          "description": "Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.",
          "enum": [
            "day",
            "month",
            "sporadic",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.",
          "type": "integer",
          "x-nullable": true
        },
        "reference": {
          "description": "Unique identifier for the mandate or subscription.",
          "maxLength": 80,
          "type": "string"
        },
        "start_date": {
          "description": "Start date of the mandate or subscription. Start date should not be lesser than yesterday.",
          "format": "unix-time",
          "type": "integer"
        },
        "supported_types": {
          "description": "Specifies the type of mandates supported. Possible values are `india`.",
          "items": {
            "enum": [
              "india"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "amount_type",
        "interval",
        "reference",
        "start_date"
      ],
      "title": "payment_method_options_card_mandate_options",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_card_present": {
      "description": "",
      "properties": {
        "request_extended_authorization": {
          "description": "Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)",
          "type": "boolean",
          "x-nullable": true
        },
        "request_incremental_authorization_support": {
          "description": "Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.",
          "type": "boolean",
          "x-nullable": true
        },
        "routing": {
          "$ref": "#/definitions/payment_method_options_card_present_routing"
        }
      },
      "title": "payment_method_options_card_present",
      "type": "object",
      "x-expandableFields": [
        "routing"
      ]
    },
    "payment_method_options_card_present_routing": {
      "description": "",
      "properties": {
        "requested_priority": {
          "description": "Requested routing priority",
          "enum": [
            "domestic",
            "international"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_options_card_present_routing",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_cashapp": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session",
            "on_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_cashapp",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_customer_balance": {
      "description": "",
      "properties": {
        "bank_transfer": {
          "$ref": "#/definitions/payment_method_options_customer_balance_bank_transfer"
        },
        "funding_type": {
          "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
          "enum": [
            "bank_transfer"
          ],
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_customer_balance",
      "type": "object",
      "x-expandableFields": [
        "bank_transfer"
      ]
    },
    "payment_method_options_customer_balance_bank_transfer": {
      "description": "",
      "properties": {
        "eu_bank_transfer": {
          "$ref": "#/definitions/payment_method_options_customer_balance_eu_bank_account"
        },
        "requested_address_types": {
          "description": "List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.\n\nPermitted values include: `sort_code`, `zengin`, `iban`, or `spei`.",
          "items": {
            "enum": [
              "aba",
              "iban",
              "sepa",
              "sort_code",
              "spei",
              "swift",
              "zengin"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "type": {
          "description": "The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
          "enum": [
            "eu_bank_transfer",
            "gb_bank_transfer",
            "jp_bank_transfer",
            "mx_bank_transfer",
            "us_bank_transfer"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_method_options_customer_balance_bank_transfer",
      "type": "object",
      "x-expandableFields": [
        "eu_bank_transfer"
      ]
    },
    "payment_method_options_customer_balance_eu_bank_account": {
      "description": "",
      "properties": {
        "country": {
          "description": "The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.",
          "enum": [
            "BE",
            "DE",
            "ES",
            "FR",
            "IE",
            "NL"
          ],
          "type": "string"
        }
      },
      "required": [
        "country"
      ],
      "title": "payment_method_options_customer_balance_eu_bank_account",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_fpx": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_fpx",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_giropay": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_giropay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_grabpay": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_grabpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_ideal": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_ideal",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_interac_present": {
      "description": "",
      "properties": {},
      "title": "payment_method_options_interac_present",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_klarna": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "preferred_locale": {
          "description": "Preferred locale of the Klarna checkout page that the customer is redirected to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_method_options_klarna",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_konbini": {
      "description": "",
      "properties": {
        "confirmation_number": {
          "description": "An optional 10 to 11 digit numeric-only string determining the confirmation code at applicable convenience stores.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "expires_after_days": {
          "description": "The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.",
          "type": "integer",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The timestamp at which the Konbini payment instructions will expire. Only one of `expires_after_days` or `expires_at` may be set.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "product_description": {
          "description": "A product descriptor of up to 22 characters, which will appear to customers at the convenience store.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_konbini",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_multibanco": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_multibanco",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_oxxo": {
      "description": "",
      "properties": {
        "expires_after_days": {
          "description": "The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.",
          "type": "integer"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "expires_after_days"
      ],
      "title": "payment_method_options_oxxo",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_p24": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_p24",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_paynow": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_paynow",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_paypal": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "preferred_locale": {
          "description": "Preferred locale of the PayPal checkout page that the customer is redirected to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "description": "A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_paypal",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_pix": {
      "description": "",
      "properties": {
        "expires_after_seconds": {
          "description": "The number of seconds (between 10 and 1209600) after which Pix payment will expire.",
          "type": "integer",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The timestamp at which the Pix expires.",
          "type": "integer",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_pix",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_promptpay": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_promptpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_revolut_pay": {
      "description": "",
      "properties": {
        "capture_method": {
          "description": "Controls when the funds will be captured from the customer's account.",
          "enum": [
            "manual"
          ],
          "type": "string"
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_revolut_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_sofort": {
      "description": "",
      "properties": {
        "preferred_language": {
          "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.",
          "enum": [
            "de",
            "en",
            "es",
            "fr",
            "it",
            "nl",
            "pl"
          ],
          "type": "string",
          "x-nullable": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none",
            "off_session"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_sofort",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_twint": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_twint",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_us_bank_account_mandate_options": {
      "description": "",
      "properties": {
        "collection_method": {
          "description": "Mandate collection method",
          "enum": [
            "paper"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_method_options_us_bank_account_mandate_options",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_wechat_pay": {
      "description": "",
      "properties": {
        "app_id": {
          "description": "The app ID registered with WeChat Pay. Only required when client is ios or android.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "client": {
          "description": "The client type that the end customer will pay from",
          "enum": [
            "android",
            "ios",
            "web"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_wechat_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_options_zip": {
      "description": "",
      "properties": {
        "setup_future_usage": {
          "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nIf you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](/api/payment_methods/attach) the payment method to a Customer after the transaction completes.\n\nIf the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.\n\nWhen processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](/strong-customer-authentication).",
          "enum": [
            "none"
          ],
          "type": "string"
        }
      },
      "title": "payment_method_options_zip",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_oxxo": {
      "description": "",
      "properties": {},
      "title": "payment_method_oxxo",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_p24": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank, if provided.",
          "enum": [
            "alior_bank",
            "bank_millennium",
            "bank_nowy_bfg_sa",
            "bank_pekao_sa",
            "banki_spbdzielcze",
            "blik",
            "bnp_paribas",
            "boz",
            "citi_handlowy",
            "credit_agricole",
            "envelobank",
            "etransfer_pocztowy24",
            "getin_bank",
            "ideabank",
            "ing",
            "inteligo",
            "mbank_mtransfer",
            "nest_przelew",
            "noble_pay",
            "pbac_z_ipko",
            "plus_bank",
            "santander_przelew24",
            "tmobile_usbugi_bankowe",
            "toyota_bank",
            "velobank",
            "volkswagen_bank"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "payment_method_p24",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_paynow": {
      "description": "",
      "properties": {},
      "title": "payment_method_paynow",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_paypal": {
      "description": "",
      "properties": {
        "payer_email": {
          "description": "Owner's email. Values are provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payer_id": {
          "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_paypal",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_pix": {
      "description": "",
      "properties": {},
      "title": "payment_method_pix",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_promptpay": {
      "description": "",
      "properties": {},
      "title": "payment_method_promptpay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_revolut_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_revolut_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_sepa_debit": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "branch_code": {
          "description": "Branch code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_from": {
          "description": "Information about the object that generated this PaymentMethod.",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_sepa_debit",
      "type": "object",
      "x-expandableFields": [
        "generated_from"
      ]
    },
    "payment_method_sofort": {
      "description": "",
      "properties": {
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_sofort",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_swish": {
      "description": "",
      "properties": {},
      "title": "payment_method_swish",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_twint": {
      "description": "",
      "properties": {},
      "title": "payment_method_twint",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_us_bank_account": {
      "description": "",
      "properties": {
        "account_holder_type": {
          "description": "Account holder type: individual or company.",
          "enum": [
            "company",
            "individual"
          ],
          "type": "string",
          "x-nullable": true
        },
        "account_type": {
          "description": "Account type: checkings or savings. Defaults to checking if omitted.",
          "enum": [
            "checking",
            "savings"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "The name of the bank.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "financial_connections_account": {
          "description": "The ID of the Financial Connections Account used to create the payment method.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "Last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "networks": {
          "description": "Contains information about US bank account networks that can be used.",
          "x-nullable": true
        },
        "routing_number": {
          "description": "Routing number of the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status_details": {
          "description": "Contains information about the future reusability of this PaymentMethod.",
          "x-nullable": true
        }
      },
      "title": "payment_method_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "networks",
        "status_details"
      ]
    },
    "payment_method_us_bank_account_blocked": {
      "description": "",
      "properties": {
        "network_code": {
          "description": "The ACH network code that resulted in this block.",
          "enum": [
            "R02",
            "R03",
            "R04",
            "R05",
            "R07",
            "R08",
            "R10",
            "R11",
            "R16",
            "R20",
            "R29",
            "R31"
          ],
          "type": "string",
          "x-nullable": true
        },
        "reason": {
          "description": "The reason why this PaymentMethod's fingerprint has been blocked",
          "enum": [
            "bank_account_closed",
            "bank_account_frozen",
            "bank_account_invalid_details",
            "bank_account_restricted",
            "bank_account_unusable",
            "debit_not_authorized"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "payment_method_us_bank_account_blocked",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_us_bank_account_status_details": {
      "description": "",
      "properties": {
        "blocked": {
          "$ref": "#/definitions/payment_method_us_bank_account_blocked"
        }
      },
      "title": "payment_method_us_bank_account_status_details",
      "type": "object",
      "x-expandableFields": [
        "blocked"
      ]
    },
    "payment_method_wechat_pay": {
      "description": "",
      "properties": {},
      "title": "payment_method_wechat_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_method_zip": {
      "description": "",
      "properties": {},
      "title": "payment_method_zip",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_after_expiration": {
      "description": "",
      "properties": {
        "recovery": {
          "description": "When set, configuration used to recover the Checkout Session on expiry.",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionAfterExpiration",
      "type": "object",
      "x-expandableFields": [
        "recovery"
      ]
    },
    "payment_pages_checkout_session_after_expiration_recovery": {
      "description": "",
      "properties": {
        "allow_promotion_codes": {
          "description": "Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to `false`",
          "type": "boolean"
        },
        "enabled": {
          "description": "If `true`, a recovery url will be generated to recover this Checkout Session if it\nexpires before a transaction is completed. It will be attached to the\nCheckout Session object upon expiration.",
          "type": "boolean"
        },
        "expires_at": {
          "description": "The timestamp at which the recovery URL will expire.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "url": {
          "description": "URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "allow_promotion_codes",
        "enabled"
      ],
      "title": "PaymentPagesCheckoutSessionAfterExpirationRecovery",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates whether automatic tax is enabled for the session",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the most recent automated tax calculation for this session.",
          "enum": [
            "complete",
            "failed",
            "requires_location_inputs"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentPagesCheckoutSessionAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "payment_pages_checkout_session_consent": {
      "description": "",
      "properties": {
        "promotions": {
          "description": "If `opt_in`, the customer consents to receiving promotional communications\nfrom the merchant about this Checkout Session.",
          "enum": [
            "opt_in",
            "opt_out"
          ],
          "type": "string",
          "x-nullable": true
        },
        "terms_of_service": {
          "description": "If `accepted`, the customer in this Checkout Session has agreed to the merchant's terms of service.",
          "enum": [
            "accepted"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "PaymentPagesCheckoutSessionConsent",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_consent_collection": {
      "description": "",
      "properties": {
        "payment_method_reuse_agreement": {
          "description": "If set to `hidden`, it will hide legal text related to the reuse of a payment method.",
          "x-nullable": true
        },
        "promotions": {
          "description": "If set to `auto`, enables the collection of customer consent for promotional communications. The Checkout\nSession will determine whether to display an option to opt into promotional communication\nfrom the merchant depending on the customer's locale. Only available to US merchants.",
          "enum": [
            "auto",
            "none"
          ],
          "type": "string",
          "x-nullable": true
        },
        "terms_of_service": {
          "description": "If set to `required`, it requires customers to accept the terms of service before being able to pay.",
          "enum": [
            "none",
            "required"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionConsentCollection",
      "type": "object",
      "x-expandableFields": [
        "payment_method_reuse_agreement"
      ]
    },
    "payment_pages_checkout_session_currency_conversion": {
      "description": "",
      "properties": {
        "amount_subtotal": {
          "description": "Total of all items in source currency before discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total of all items in source currency after discounts and taxes are applied.",
          "type": "integer"
        },
        "fx_rate": {
          "description": "Exchange rate used to convert source currency amounts to customer currency amounts",
          "format": "decimal",
          "type": "string"
        },
        "source_currency": {
          "description": "Creation currency of the CheckoutSession before localization",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount_subtotal",
        "amount_total",
        "fx_rate",
        "source_currency"
      ],
      "title": "PaymentPagesCheckoutSessionCurrencyConversion",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_custom_fields": {
      "description": "",
      "properties": {
        "dropdown": {
          "$ref": "#/definitions/payment_pages_checkout_session_custom_fields_dropdown"
        },
        "key": {
          "description": "String of your choice that your integration can use to reconcile this field. Must be unique to this field, alphanumeric, and up to 200 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/payment_pages_checkout_session_custom_fields_label"
        },
        "numeric": {
          "$ref": "#/definitions/payment_pages_checkout_session_custom_fields_numeric"
        },
        "optional": {
          "description": "Whether the customer is required to complete the field before completing the Checkout Session. Defaults to `false`.",
          "type": "boolean"
        },
        "text": {
          "$ref": "#/definitions/payment_pages_checkout_session_custom_fields_text"
        },
        "type": {
          "description": "The type of the field.",
          "enum": [
            "dropdown",
            "numeric",
            "text"
          ],
          "type": "string"
        }
      },
      "required": [
        "key",
        "label",
        "optional",
        "type"
      ],
      "title": "PaymentPagesCheckoutSessionCustomFields",
      "type": "object",
      "x-expandableFields": [
        "dropdown",
        "label",
        "numeric",
        "text"
      ]
    },
    "payment_pages_checkout_session_custom_fields_dropdown": {
      "description": "",
      "properties": {
        "default_value": {
          "description": "The value that will pre-fill on the payment page.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "options": {
          "description": "The options available for the customer to select. Up to 200 options allowed.",
          "items": {
            "$ref": "#/definitions/payment_pages_checkout_session_custom_fields_option"
          },
          "type": "array"
        },
        "value": {
          "description": "The option selected by the customer. This will be the `value` for the option.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "options"
      ],
      "title": "PaymentPagesCheckoutSessionCustomFieldsDropdown",
      "type": "object",
      "x-expandableFields": [
        "options"
      ]
    },
    "payment_pages_checkout_session_custom_fields_label": {
      "description": "",
      "properties": {
        "custom": {
          "description": "Custom text for the label, displayed to the customer. Up to 50 characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "description": "The type of the label.",
          "enum": [
            "custom"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentPagesCheckoutSessionCustomFieldsLabel",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_custom_fields_numeric": {
      "description": "",
      "properties": {
        "default_value": {
          "description": "The value that will pre-fill the field on the payment page.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "maximum_length": {
          "description": "The maximum character length constraint for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "minimum_length": {
          "description": "The minimum character length requirement for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "value": {
          "description": "The value entered by the customer, containing only digits.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionCustomFieldsNumeric",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_custom_fields_option": {
      "description": "",
      "properties": {
        "label": {
          "description": "The label for the option, displayed to the customer. Up to 100 characters.",
          "maxLength": 5000,
          "type": "string"
        },
        "value": {
          "description": "The value for this option, not displayed to the customer, used by your integration to reconcile the option selected by the customer. Must be unique to this option, alphanumeric, and up to 100 characters.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ],
      "title": "PaymentPagesCheckoutSessionCustomFieldsOption",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_custom_fields_text": {
      "description": "",
      "properties": {
        "default_value": {
          "description": "The value that will pre-fill the field on the payment page.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "maximum_length": {
          "description": "The maximum character length constraint for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "minimum_length": {
          "description": "The minimum character length requirement for the customer's input.",
          "type": "integer",
          "x-nullable": true
        },
        "value": {
          "description": "The value entered by the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionCustomFieldsText",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_custom_text": {
      "description": "",
      "properties": {
        "after_submit": {
          "description": "Custom text that should be displayed after the payment confirmation button.",
          "x-nullable": true
        },
        "shipping_address": {
          "description": "Custom text that should be displayed alongside shipping address collection.",
          "x-nullable": true
        },
        "submit": {
          "description": "Custom text that should be displayed alongside the payment confirmation button.",
          "x-nullable": true
        },
        "terms_of_service_acceptance": {
          "description": "Custom text that should be displayed in place of the default terms of service agreement text.",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionCustomText",
      "type": "object",
      "x-expandableFields": [
        "after_submit",
        "shipping_address",
        "submit",
        "terms_of_service_acceptance"
      ]
    },
    "payment_pages_checkout_session_custom_text_position": {
      "description": "",
      "properties": {
        "message": {
          "description": "Text may be up to 1200 characters in length.",
          "maxLength": 500,
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "PaymentPagesCheckoutSessionCustomTextPosition",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_customer_details": {
      "description": "",
      "properties": {
        "address": {
          "description": "The customer's address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.",
          "x-nullable": true
        },
        "email": {
          "description": "The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.\nOtherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "The customer's name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "description": "The customer's phone number after a completed Checkout Session.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_exempt": {
          "description": "The customer’s tax exempt status after a completed Checkout Session.",
          "enum": [
            "exempt",
            "none",
            "reverse"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tax_ids": {
          "description": "The customer’s tax IDs after a completed Checkout Session.",
          "items": {
            "$ref": "#/definitions/payment_pages_checkout_session_tax_id"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionCustomerDetails",
      "type": "object",
      "x-expandableFields": [
        "address",
        "tax_ids"
      ]
    },
    "payment_pages_checkout_session_invoice_creation": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates whether invoice creation is enabled for the Checkout Session.",
          "type": "boolean"
        },
        "invoice_data": {
          "$ref": "#/definitions/payment_pages_checkout_session_invoice_settings"
        }
      },
      "required": [
        "enabled",
        "invoice_data"
      ],
      "title": "PaymentPagesCheckoutSessionInvoiceCreation",
      "type": "object",
      "x-expandableFields": [
        "invoice_data"
      ]
    },
    "payment_pages_checkout_session_invoice_settings": {
      "description": "",
      "properties": {
        "account_tax_ids": {
          "description": "The account tax IDs associated with the invoice.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "custom_fields": {
          "description": "Custom fields displayed on the invoice.",
          "items": {
            "$ref": "#/definitions/invoice_setting_custom_field"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "footer": {
          "description": "Footer displayed on the invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuer": {
          "description": "The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "rendering_options": {
          "description": "Options for invoice PDF rendering.",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionInvoiceSettings",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "custom_fields",
        "issuer",
        "rendering_options"
      ]
    },
    "payment_pages_checkout_session_payment_method_reuse_agreement": {
      "description": "",
      "properties": {
        "position": {
          "description": "Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.\n\nWhen set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.",
          "enum": [
            "auto",
            "hidden"
          ],
          "type": "string"
        }
      },
      "required": [
        "position"
      ],
      "title": "PaymentPagesCheckoutSessionPaymentMethodReuseAgreement",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_phone_number_collection": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates whether phone number collection is enabled for the session",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PaymentPagesCheckoutSessionPhoneNumberCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_saved_payment_method_options": {
      "description": "",
      "properties": {
        "allow_redisplay_filters": {
          "description": "Uses the `allow_redisplay` value of each saved payment method to filter the set presented to a returning customer. By default, only saved payment methods with ’allow_redisplay: ‘always’ are shown in Checkout.",
          "items": {
            "enum": [
              "always",
              "limited",
              "unspecified"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "payment_method_remove": {
          "description": "Enable customers to choose if they wish to remove their saved payment methods. Disabled by default.",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string",
          "x-nullable": true
        },
        "payment_method_save": {
          "description": "Enable customers to choose if they wish to save their payment method for future use. Disabled by default.",
          "enum": [
            "disabled",
            "enabled"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PaymentPagesCheckoutSessionSavedPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_shipping_address_collection": {
      "description": "",
      "properties": {
        "allowed_countries": {
          "description": "An array of two-letter ISO country codes representing which countries Checkout should provide as options for\nshipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.",
          "items": {
            "enum": [
              "AC",
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CV",
              "CW",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SZ",
              "TA",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VN",
              "VU",
              "WF",
              "WS",
              "XK",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW",
              "ZZ"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "allowed_countries"
      ],
      "title": "PaymentPagesCheckoutSessionShippingAddressCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_shipping_cost": {
      "description": "",
      "properties": {
        "amount_subtotal": {
          "description": "Total shipping cost before any discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total shipping cost after discounts and taxes are applied.",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The ID of the ShippingRate for this order.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/shipping_rate"
              }
            ]
          },
          "x-nullable": true
        },
        "taxes": {
          "description": "The taxes applied to the shipping rate.",
          "items": {
            "$ref": "#/definitions/line_items_tax_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "amount_subtotal",
        "amount_tax",
        "amount_total"
      ],
      "title": "PaymentPagesCheckoutSessionShippingCost",
      "type": "object",
      "x-expandableFields": [
        "shipping_rate",
        "taxes"
      ]
    },
    "payment_pages_checkout_session_shipping_option": {
      "description": "",
      "properties": {
        "shipping_amount": {
          "description": "A non-negative integer in cents representing how much to charge.",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The shipping rate.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/shipping_rate"
              }
            ]
          }
        }
      },
      "required": [
        "shipping_amount",
        "shipping_rate"
      ],
      "title": "PaymentPagesCheckoutSessionShippingOption",
      "type": "object",
      "x-expandableFields": [
        "shipping_rate"
      ]
    },
    "payment_pages_checkout_session_tax_id": {
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`",
          "enum": [
            "ad_nrt",
            "ae_trn",
            "ar_cuit",
            "au_abn",
            "au_arn",
            "bg_uic",
            "bh_vat",
            "bo_tin",
            "br_cnpj",
            "br_cpf",
            "ca_bn",
            "ca_gst_hst",
            "ca_pst_bc",
            "ca_pst_mb",
            "ca_pst_sk",
            "ca_qst",
            "ch_uid",
            "ch_vat",
            "cl_tin",
            "cn_tin",
            "co_nit",
            "cr_tin",
            "de_stn",
            "do_rcn",
            "ec_ruc",
            "eg_tin",
            "es_cif",
            "eu_oss_vat",
            "eu_vat",
            "gb_vat",
            "ge_vat",
            "hk_br",
            "hr_oib",
            "hu_tin",
            "id_npwp",
            "il_vat",
            "in_gst",
            "is_vat",
            "jp_cn",
            "jp_rn",
            "jp_trn",
            "ke_pin",
            "kr_brn",
            "kz_bin",
            "li_uid",
            "mx_rfc",
            "my_frp",
            "my_itn",
            "my_sst",
            "ng_tin",
            "no_vat",
            "no_voec",
            "nz_gst",
            "om_vat",
            "pe_ruc",
            "ph_tin",
            "ro_tin",
            "rs_pib",
            "ru_inn",
            "ru_kpp",
            "sa_vat",
            "sg_gst",
            "sg_uen",
            "si_tin",
            "sv_nit",
            "th_vat",
            "tr_tin",
            "tw_vat",
            "ua_vat",
            "unknown",
            "us_ein",
            "uy_ruc",
            "ve_rif",
            "vn_tin",
            "za_vat"
          ],
          "type": "string"
        },
        "value": {
          "description": "The value of the tax ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "type"
      ],
      "title": "PaymentPagesCheckoutSessionTaxID",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_tax_id_collection": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Indicates whether tax ID collection is enabled for the session",
          "type": "boolean"
        },
        "required": {
          "description": "Indicates whether a tax ID is required on the payment page",
          "enum": [
            "if_supported",
            "never"
          ],
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "required"
      ],
      "title": "PaymentPagesCheckoutSessionTaxIDCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "payment_pages_checkout_session_total_details": {
      "description": "",
      "properties": {
        "amount_discount": {
          "description": "This is the sum of all the discounts.",
          "type": "integer"
        },
        "amount_shipping": {
          "description": "This is the sum of all the shipping amounts.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_tax": {
          "description": "This is the sum of all the tax amounts.",
          "type": "integer"
        },
        "breakdown": {
          "$ref": "#/definitions/payment_pages_checkout_session_total_details_resource_breakdown"
        }
      },
      "required": [
        "amount_discount",
        "amount_tax"
      ],
      "title": "PaymentPagesCheckoutSessionTotalDetails",
      "type": "object",
      "x-expandableFields": [
        "breakdown"
      ]
    },
    "payment_pages_checkout_session_total_details_resource_breakdown": {
      "description": "",
      "properties": {
        "discounts": {
          "description": "The aggregated discounts.",
          "items": {
            "$ref": "#/definitions/line_items_discount_amount"
          },
          "type": "array"
        },
        "taxes": {
          "description": "The aggregated tax amounts by rate.",
          "items": {
            "$ref": "#/definitions/line_items_tax_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "discounts",
        "taxes"
      ],
      "title": "PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown",
      "type": "object",
      "x-expandableFields": [
        "discounts",
        "taxes"
      ]
    },
    "payment_source": {
      "title": "Polymorphic",
      "x-resourceId": "payment_source",
      "x-stripeBypassValidation": true
    },
    "payout": {
      "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nand list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving payouts](https://stripe.com/docs/payouts)",
      "properties": {
        "amount": {
          "description": "The amount (in cents (or local equivalent)) that transfers to your bank account or debit card.",
          "type": "integer"
        },
        "application_fee": {
          "description": "The application fee (if any) for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application_fee"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The amount of the application fee (if any) requested for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.",
          "type": "integer",
          "x-nullable": true
        },
        "arrival_date": {
          "description": "Date that you can expect the payout to arrive in the bank. This factors in delays to account for weekends or bank holidays.",
          "format": "unix-time",
          "type": "integer"
        },
        "automatic": {
          "description": "Returns `true` if the payout is created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule) and `false` if it's [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
          "type": "boolean"
        },
        "balance_transaction": {
          "description": "ID of the balance transaction that describes the impact of this payout on your account balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination": {
          "description": "ID of the bank account or card the payout is sent to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/bank_account"
              },
              {
                "$ref": "#/definitions/card"
              },
              {
                "$ref": "#/definitions/deleted_bank_account"
              },
              {
                "$ref": "#/definitions/deleted_card"
              }
            ]
          },
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "failure_balance_transaction": {
          "description": "If the payout fails or cancels, this is the ID of the balance transaction that reverses the initial balance transaction and returns the funds from the failed payout back in your balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "failure_code": {
          "description": "Error code that provides a reason for a payout failure, if available. View our [list of failure codes](https://stripe.com/docs/api#payout_failures).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "failure_message": {
          "description": "Message that provides the reason for a payout failure, if available.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "method": {
          "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is supported for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "payout"
          ],
          "type": "string"
        },
        "original_payout": {
          "description": "If the payout reverses another, this is the ID of the original payout.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payout"
              }
            ]
          },
          "x-nullable": true
        },
        "reconciliation_status": {
          "description": "If `completed`, you can use the [Balance Transactions API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout) to list all balance transactions that are paid out in this payout.",
          "enum": [
            "completed",
            "in_progress",
            "not_applicable"
          ],
          "type": "string"
        },
        "reversed_by": {
          "description": "If the payout reverses, this is the ID of the payout that reverses this payout.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payout"
              }
            ]
          },
          "x-nullable": true
        },
        "source_type": {
          "description": "The source balance this payout came from, which can be one of the following: `card`, `fpx`, or `bank_account`.",
          "maxLength": 5000,
          "type": "string"
        },
        "statement_descriptor": {
          "description": "Extra information about a payout that displays on the user's bank statement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it's submitted to the bank, when it becomes `in_transit`. The status changes to `paid` if the transaction succeeds, or to `failed` or `canceled` (within 5 business days). Some payouts that fail might initially show as `paid`, then change to `failed`.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "Can be `bank_account` or `card`.",
          "enum": [
            "bank_account",
            "card"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "amount",
        "arrival_date",
        "automatic",
        "created",
        "currency",
        "id",
        "livemode",
        "method",
        "object",
        "reconciliation_status",
        "source_type",
        "status",
        "type"
      ],
      "title": "Payout",
      "type": "object",
      "x-expandableFields": [
        "application_fee",
        "balance_transaction",
        "destination",
        "failure_balance_transaction",
        "original_payout",
        "reversed_by"
      ],
      "x-resourceId": "payout"
    },
    "paypal_seller_protection": {
      "description": "",
      "properties": {
        "dispute_categories": {
          "description": "An array of conditions that are covered for the transaction, if applicable.",
          "items": {
            "enum": [
              "fraudulent",
              "product_not_received"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "status": {
          "description": "Indicates whether the transaction is eligible for PayPal's seller protection.",
          "enum": [
            "eligible",
            "not_eligible",
            "partially_eligible"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "paypal_seller_protection",
      "type": "object",
      "x-expandableFields": []
    },
    "period": {
      "description": "",
      "properties": {
        "end": {
          "description": "The end date of this usage period. All usage up to and including this point in time is included.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "start": {
          "description": "The start date of this usage period. All usage after this point in time is included.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "Period",
      "type": "object",
      "x-expandableFields": []
    },
    "person": {
      "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a person for an account where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `stripe`, which includes Standard and Express accounts, after creating an Account Link or Account Session to start Connect onboarding.\n\nSee the [Standard onboarding](/connect/standard-accounts) or [Express onboarding](/connect/express-accounts) documentation for information about prefilling information and account onboarding steps. Learn more about [handling identity verification with the API](/connect/handling-api-verification#person-information).",
      "properties": {
        "account": {
          "description": "The account the person is associated with.",
          "maxLength": 5000,
          "type": "string"
        },
        "additional_tos_acceptances": {
          "$ref": "#/definitions/person_additional_tos_acceptances"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "address_kana": {
          "x-nullable": true
        },
        "address_kanji": {
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "dob": {
          "$ref": "#/definitions/legal_entity_dob"
        },
        "email": {
          "description": "The person's email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "first_name": {
          "description": "The person's first name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "first_name_kana": {
          "description": "The Kana variation of the person's first name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "first_name_kanji": {
          "description": "The Kanji variation of the person's first name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "full_name_aliases": {
          "description": "A list of alternate names or aliases that the person is known by.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "future_requirements": {
          "x-nullable": true
        },
        "gender": {
          "description": "The person's gender (International regulations require either \"male\" or \"female\").",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "id_number_provided": {
          "description": "Whether the person's `id_number` was provided. True if either the full ID number was provided or if only the required part of the ID number was provided (ex. last four of an individual's SSN for the US indicated by `ssn_last_4_provided`).",
          "type": "boolean"
        },
        "id_number_secondary_provided": {
          "description": "Whether the person's `id_number_secondary` was provided.",
          "type": "boolean"
        },
        "last_name": {
          "description": "The person's last name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last_name_kana": {
          "description": "The Kana variation of the person's last name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last_name_kanji": {
          "description": "The Kanji variation of the person's last name (Japan only).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "maiden_name": {
          "description": "The person's maiden name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "nationality": {
          "description": "The country where the person is a national.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "person"
          ],
          "type": "string"
        },
        "phone": {
          "description": "The person's phone number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "political_exposure": {
          "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
          "enum": [
            "existing",
            "none"
          ],
          "type": "string"
        },
        "registered_address": {
          "$ref": "#/definitions/address"
        },
        "relationship": {
          "$ref": "#/definitions/person_relationship"
        },
        "requirements": {
          "x-nullable": true
        },
        "ssn_last_4_provided": {
          "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
          "type": "boolean"
        },
        "verification": {
          "$ref": "#/definitions/legal_entity_person_verification"
        }
      },
      "required": [
        "account",
        "created",
        "id",
        "object"
      ],
      "title": "Person",
      "type": "object",
      "x-expandableFields": [
        "additional_tos_acceptances",
        "address",
        "address_kana",
        "address_kanji",
        "dob",
        "future_requirements",
        "registered_address",
        "relationship",
        "requirements",
        "verification"
      ],
      "x-resourceId": "person"
    },
    "person_additional_tos_acceptance": {
      "description": "",
      "properties": {
        "date": {
          "description": "The Unix timestamp marking when the legal guardian accepted the service agreement.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "ip": {
          "description": "The IP address from which the legal guardian accepted the service agreement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "user_agent": {
          "description": "The user agent of the browser from which the legal guardian accepted the service agreement.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PersonAdditionalTOSAcceptance",
      "type": "object",
      "x-expandableFields": []
    },
    "person_additional_tos_acceptances": {
      "description": "",
      "properties": {
        "account": {
          "description": "Details on the legal guardian's acceptance of the main Stripe service agreement.",
          "x-nullable": true
        }
      },
      "title": "PersonAdditionalTOSAcceptances",
      "type": "object",
      "x-expandableFields": [
        "account"
      ]
    },
    "person_future_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array"
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "past_due": {
          "description": "Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "currently_due",
        "errors",
        "eventually_due",
        "past_due",
        "pending_verification"
      ],
      "title": "PersonFutureRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "person_relationship": {
      "description": "",
      "properties": {
        "director": {
          "description": "Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
          "type": "boolean",
          "x-nullable": true
        },
        "executive": {
          "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
          "type": "boolean",
          "x-nullable": true
        },
        "legal_guardian": {
          "description": "Whether the person is the legal guardian of the account's representative.",
          "type": "boolean",
          "x-nullable": true
        },
        "owner": {
          "description": "Whether the person is an owner of the account’s legal entity.",
          "type": "boolean",
          "x-nullable": true
        },
        "percent_ownership": {
          "description": "The percent owned by the person of the account's legal entity.",
          "type": "number",
          "x-nullable": true
        },
        "representative": {
          "description": "Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.",
          "type": "boolean",
          "x-nullable": true
        },
        "title": {
          "description": "The person's title (e.g., CEO, Support Engineer).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PersonRelationship",
      "type": "object",
      "x-expandableFields": []
    },
    "person_requirements": {
      "description": "",
      "properties": {
        "alternatives": {
          "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
          "items": {
            "$ref": "#/definitions/account_requirements_alternative"
          },
          "type": "array",
          "x-nullable": true
        },
        "currently_due": {
          "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
          "items": {
            "$ref": "#/definitions/account_requirements_error"
          },
          "type": "array"
        },
        "eventually_due": {
          "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "past_due": {
          "description": "Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "pending_verification": {
          "description": "Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "currently_due",
        "errors",
        "eventually_due",
        "past_due",
        "pending_verification"
      ],
      "title": "PersonRequirements",
      "type": "object",
      "x-expandableFields": [
        "alternatives",
        "errors"
      ]
    },
    "plan": {
      "description": "You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.\n\nPlans define the base price, currency, and billing cycle for recurring purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has plans for $10/month, $100/year, €9/month, and €90/year.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
      "properties": {
        "active": {
          "description": "Whether the plan can be used for new purchases.",
          "type": "boolean"
        },
        "aggregate_usage": {
          "description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
          "enum": [
            "last_during_period",
            "last_ever",
            "max",
            "sum"
          ],
          "type": "string",
          "x-nullable": true
        },
        "amount": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_decimal": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "billing_scheme": {
          "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
          "enum": [
            "per_unit",
            "tiered"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "interval": {
          "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
          "enum": [
            "day",
            "month",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
          "type": "integer"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "meter": {
          "description": "The meter tracking the usage of a metered price",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "nickname": {
          "description": "A brief description of the plan, hidden from customers.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "plan"
          ],
          "type": "string"
        },
        "product": {
          "description": "The product whose pricing this plan determines.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/product"
              },
              {
                "$ref": "#/definitions/deleted_product"
              }
            ]
          },
          "x-nullable": true
        },
        "tiers": {
          "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
          "items": {
            "$ref": "#/definitions/plan_tier"
          },
          "type": "array"
        },
        "tiers_mode": {
          "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
          "enum": [
            "graduated",
            "volume"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transform_usage": {
          "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
          "x-nullable": true
        },
        "trial_period_days": {
          "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
          "type": "integer",
          "x-nullable": true
        },
        "usage_type": {
          "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
          "enum": [
            "licensed",
            "metered"
          ],
          "type": "string"
        }
      },
      "required": [
        "active",
        "billing_scheme",
        "created",
        "currency",
        "id",
        "interval",
        "interval_count",
        "livemode",
        "object",
        "usage_type"
      ],
      "title": "Plan",
      "type": "object",
      "x-expandableFields": [
        "product",
        "tiers",
        "transform_usage"
      ],
      "x-resourceId": "plan"
    },
    "plan_tier": {
      "description": "",
      "properties": {
        "flat_amount": {
          "description": "Price for the entire tier.",
          "type": "integer",
          "x-nullable": true
        },
        "flat_amount_decimal": {
          "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "unit_amount": {
          "description": "Per unit price for units relevant to the tier.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "up_to": {
          "description": "Up to and including to this quantity will be contained in the tier.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PlanTier",
      "type": "object",
      "x-expandableFields": []
    },
    "platform_earning_fee_source": {
      "description": "",
      "properties": {
        "charge": {
          "description": "Charge ID that created this application fee.",
          "maxLength": 5000,
          "type": "string"
        },
        "payout": {
          "description": "Payout ID that created this application fee.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "Type of object that created the application fee, either `charge` or `payout`.",
          "enum": [
            "charge",
            "payout"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PlatformEarningFeeSource",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_business_profile": {
      "description": "",
      "properties": {
        "headline": {
          "description": "The messaging shown to customers in the portal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "privacy_policy_url": {
          "description": "A link to the business’s publicly available privacy policy.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "terms_of_service_url": {
          "description": "A link to the business’s publicly available terms of service.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PortalBusinessProfile",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_customer_update": {
      "description": "",
      "properties": {
        "allowed_updates": {
          "description": "The types of customer updates that are supported. When empty, customers are not updateable.",
          "items": {
            "enum": [
              "address",
              "email",
              "name",
              "phone",
              "shipping",
              "tax_id"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "allowed_updates",
        "enabled"
      ],
      "title": "PortalCustomerUpdate",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_features": {
      "description": "",
      "properties": {
        "customer_update": {
          "$ref": "#/definitions/portal_customer_update"
        },
        "invoice_history": {
          "$ref": "#/definitions/portal_invoice_list"
        },
        "payment_method_update": {
          "$ref": "#/definitions/portal_payment_method_update"
        },
        "subscription_cancel": {
          "$ref": "#/definitions/portal_subscription_cancel"
        },
        "subscription_update": {
          "$ref": "#/definitions/portal_subscription_update"
        }
      },
      "required": [
        "customer_update",
        "invoice_history",
        "payment_method_update",
        "subscription_cancel",
        "subscription_update"
      ],
      "title": "PortalFeatures",
      "type": "object",
      "x-expandableFields": [
        "customer_update",
        "invoice_history",
        "payment_method_update",
        "subscription_cancel",
        "subscription_update"
      ]
    },
    "portal_flows_after_completion_hosted_confirmation": {
      "description": "",
      "properties": {
        "custom_message": {
          "description": "A custom message to display to the customer after the flow is completed.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PortalFlowsAfterCompletionHostedConfirmation",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_flows_after_completion_redirect": {
      "description": "",
      "properties": {
        "return_url": {
          "description": "The URL the customer will be redirected to after the flow is completed.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "return_url"
      ],
      "title": "PortalFlowsAfterCompletionRedirect",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_flows_coupon_offer": {
      "description": "",
      "properties": {
        "coupon": {
          "description": "The ID of the coupon to be offered.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "coupon"
      ],
      "title": "PortalFlowsCouponOffer",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_flows_flow": {
      "description": "",
      "properties": {
        "after_completion": {
          "$ref": "#/definitions/portal_flows_flow_after_completion"
        },
        "subscription_cancel": {
          "description": "Configuration when `flow.type=subscription_cancel`.",
          "x-nullable": true
        },
        "subscription_update": {
          "description": "Configuration when `flow.type=subscription_update`.",
          "x-nullable": true
        },
        "subscription_update_confirm": {
          "description": "Configuration when `flow.type=subscription_update_confirm`.",
          "x-nullable": true
        },
        "type": {
          "description": "Type of flow that the customer will go through.",
          "enum": [
            "payment_method_update",
            "subscription_cancel",
            "subscription_update",
            "subscription_update_confirm"
          ],
          "type": "string"
        }
      },
      "required": [
        "after_completion",
        "type"
      ],
      "title": "PortalFlowsFlow",
      "type": "object",
      "x-expandableFields": [
        "after_completion",
        "subscription_cancel",
        "subscription_update",
        "subscription_update_confirm"
      ]
    },
    "portal_flows_flow_after_completion": {
      "description": "",
      "properties": {
        "hosted_confirmation": {
          "description": "Configuration when `after_completion.type=hosted_confirmation`.",
          "x-nullable": true
        },
        "redirect": {
          "description": "Configuration when `after_completion.type=redirect`.",
          "x-nullable": true
        },
        "type": {
          "description": "The specified type of behavior after the flow is completed.",
          "enum": [
            "hosted_confirmation",
            "portal_homepage",
            "redirect"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PortalFlowsFlowAfterCompletion",
      "type": "object",
      "x-expandableFields": [
        "hosted_confirmation",
        "redirect"
      ]
    },
    "portal_flows_flow_subscription_cancel": {
      "description": "",
      "properties": {
        "retention": {
          "description": "Specify a retention strategy to be used in the cancellation flow.",
          "x-nullable": true
        },
        "subscription": {
          "description": "The ID of the subscription to be canceled.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "subscription"
      ],
      "title": "PortalFlowsFlowSubscriptionCancel",
      "type": "object",
      "x-expandableFields": [
        "retention"
      ]
    },
    "portal_flows_flow_subscription_update": {
      "description": "",
      "properties": {
        "subscription": {
          "description": "The ID of the subscription to be updated.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "subscription"
      ],
      "title": "PortalFlowsFlowSubscriptionUpdate",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_flows_flow_subscription_update_confirm": {
      "description": "",
      "properties": {
        "discounts": {
          "description": "The coupon or promotion code to apply to this subscription update. Currently, only up to one may be specified.",
          "items": {
            "$ref": "#/definitions/portal_flows_subscription_update_confirm_discount"
          },
          "type": "array",
          "x-nullable": true
        },
        "items": {
          "description": "The [subscription item](https://stripe.com/docs/api/subscription_items) to be updated through this flow. Currently, only up to one may be specified and subscriptions with multiple items are not updatable.",
          "items": {
            "$ref": "#/definitions/portal_flows_subscription_update_confirm_item"
          },
          "type": "array"
        },
        "subscription": {
          "description": "The ID of the subscription to be updated.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "items",
        "subscription"
      ],
      "title": "PortalFlowsFlowSubscriptionUpdateConfirm",
      "type": "object",
      "x-expandableFields": [
        "discounts",
        "items"
      ]
    },
    "portal_flows_retention": {
      "description": "",
      "properties": {
        "coupon_offer": {
          "description": "Configuration when `retention.type=coupon_offer`.",
          "x-nullable": true
        },
        "type": {
          "description": "Type of retention strategy that will be used.",
          "enum": [
            "coupon_offer"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "PortalFlowsRetention",
      "type": "object",
      "x-expandableFields": [
        "coupon_offer"
      ]
    },
    "portal_flows_subscription_update_confirm_discount": {
      "description": "",
      "properties": {
        "coupon": {
          "description": "The ID of the coupon to apply to this subscription update.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "promotion_code": {
          "description": "The ID of a promotion code to apply to this subscription update.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "PortalFlowsSubscriptionUpdateConfirmDiscount",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_flows_subscription_update_confirm_item": {
      "description": "",
      "properties": {
        "id": {
          "description": "The ID of the [subscription item](https://stripe.com/docs/api/subscriptions/object#subscription_object-items-data-id) to be updated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "price": {
          "description": "The price the customer should subscribe to through this flow. The price must also be included in the configuration's [`features.subscription_update.products`](https://stripe.com/docs/api/customer_portal/configuration#portal_configuration_object-features-subscription_update-products).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "[Quantity](https://stripe.com/docs/subscriptions/quantities) for this item that the customer should subscribe to through this flow.",
          "type": "integer"
        }
      },
      "title": "PortalFlowsSubscriptionUpdateConfirmItem",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_invoice_list": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PortalInvoiceList",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_login_page": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "If `true`, a shareable `url` will be generated that will take your customers to a hosted login page for the customer portal.\n\nIf `false`, the previously generated `url`, if any, will be deactivated.",
          "type": "boolean"
        },
        "url": {
          "description": "A shareable URL to the hosted portal login page. Your customers will be able to log in with their [email](https://stripe.com/docs/api/customers/object#customer_object-email) and receive a link to their customer portal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PortalLoginPage",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_payment_method_update": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "PortalPaymentMethodUpdate",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_subscription_cancel": {
      "description": "",
      "properties": {
        "cancellation_reason": {
          "$ref": "#/definitions/portal_subscription_cancellation_reason"
        },
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        },
        "mode": {
          "description": "Whether to cancel subscriptions immediately or at the end of the billing period.",
          "enum": [
            "at_period_end",
            "immediately"
          ],
          "type": "string"
        },
        "proration_behavior": {
          "description": "Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.",
          "enum": [
            "always_invoice",
            "create_prorations",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "cancellation_reason",
        "enabled",
        "mode",
        "proration_behavior"
      ],
      "title": "PortalSubscriptionCancel",
      "type": "object",
      "x-expandableFields": [
        "cancellation_reason"
      ]
    },
    "portal_subscription_cancellation_reason": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        },
        "options": {
          "description": "Which cancellation reasons will be given as options to the customer.",
          "items": {
            "enum": [
              "customer_service",
              "low_quality",
              "missing_features",
              "other",
              "switched_service",
              "too_complex",
              "too_expensive",
              "unused"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "options"
      ],
      "title": "PortalSubscriptionCancellationReason",
      "type": "object",
      "x-expandableFields": []
    },
    "portal_subscription_update": {
      "description": "",
      "properties": {
        "default_allowed_updates": {
          "description": "The types of subscription updates that are supported for items listed in the `products` attribute. When empty, subscriptions are not updateable.",
          "items": {
            "enum": [
              "price",
              "promotion_code",
              "quantity"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Whether the feature is enabled.",
          "type": "boolean"
        },
        "products": {
          "description": "The list of up to 10 products that support subscription updates.",
          "items": {
            "$ref": "#/definitions/portal_subscription_update_product"
          },
          "type": "array",
          "x-nullable": true
        },
        "proration_behavior": {
          "description": "Determines how to handle prorations resulting from subscription updates. Valid values are `none`, `create_prorations`, and `always_invoice`. Defaults to a value of `none` if you don't set it during creation.",
          "enum": [
            "always_invoice",
            "create_prorations",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "default_allowed_updates",
        "enabled",
        "proration_behavior"
      ],
      "title": "PortalSubscriptionUpdate",
      "type": "object",
      "x-expandableFields": [
        "products"
      ]
    },
    "portal_subscription_update_product": {
      "description": "",
      "properties": {
        "prices": {
          "description": "The list of price IDs which, when subscribed to, a subscription can be updated.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "product": {
          "description": "The product ID.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "prices",
        "product"
      ],
      "title": "PortalSubscriptionUpdateProduct",
      "type": "object",
      "x-expandableFields": []
    },
    "price": {
      "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and €9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
      "properties": {
        "active": {
          "description": "Whether the price can be used for new purchases.",
          "type": "boolean"
        },
        "billing_scheme": {
          "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
          "enum": [
            "per_unit",
            "tiered"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "currency_options": {
          "additionalProperties": {
            "$ref": "#/definitions/currency_option"
          },
          "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
          "type": "object"
        },
        "custom_unit_amount": {
          "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "lookup_key": {
          "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "nickname": {
          "description": "A brief description of the price, hidden from customers.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "price"
          ],
          "type": "string"
        },
        "product": {
          "description": "The ID of the product this price is associated with.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/product"
              },
              {
                "$ref": "#/definitions/deleted_product"
              }
            ]
          }
        },
        "recurring": {
          "description": "The recurring components of a price such as `interval` and `usage_type`.",
          "x-nullable": true
        },
        "tax_behavior": {
          "description": "Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
          "enum": [
            "exclusive",
            "inclusive",
            "unspecified"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tiers": {
          "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
          "items": {
            "$ref": "#/definitions/price_tier"
          },
          "type": "array"
        },
        "tiers_mode": {
          "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
          "enum": [
            "graduated",
            "volume"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transform_quantity": {
          "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
          "x-nullable": true
        },
        "type": {
          "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
          "enum": [
            "one_time",
            "recurring"
          ],
          "type": "string"
        },
        "unit_amount": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "active",
        "billing_scheme",
        "created",
        "currency",
        "id",
        "livemode",
        "metadata",
        "object",
        "product",
        "type"
      ],
      "title": "Price",
      "type": "object",
      "x-expandableFields": [
        "currency_options",
        "custom_unit_amount",
        "product",
        "recurring",
        "tiers",
        "transform_quantity"
      ],
      "x-resourceId": "price"
    },
    "price_tier": {
      "description": "",
      "properties": {
        "flat_amount": {
          "description": "Price for the entire tier.",
          "type": "integer",
          "x-nullable": true
        },
        "flat_amount_decimal": {
          "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "unit_amount": {
          "description": "Per unit price for units relevant to the tier.",
          "type": "integer",
          "x-nullable": true
        },
        "unit_amount_decimal": {
          "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
          "format": "decimal",
          "type": "string",
          "x-nullable": true
        },
        "up_to": {
          "description": "Up to and including to this quantity will be contained in the tier.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "PriceTier",
      "type": "object",
      "x-expandableFields": []
    },
    "product": {
      "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payment-links),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
      "properties": {
        "active": {
          "description": "Whether the product is currently available for purchase.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "default_price": {
          "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/price"
              }
            ]
          },
          "x-nullable": true
        },
        "description": {
          "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "images": {
          "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "marketing_features": {
          "description": "A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).",
          "items": {
            "$ref": "#/definitions/product_marketing_feature"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "The product's name, meant to be displayable to the customer.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "product"
          ],
          "type": "string"
        },
        "package_dimensions": {
          "description": "The dimensions of this product for shipping purposes.",
          "x-nullable": true
        },
        "shippable": {
          "description": "Whether this product is shipped (i.e., physical goods).",
          "type": "boolean",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only used for subscription payments.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_code": {
          "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/tax_code"
              }
            ]
          },
          "x-nullable": true
        },
        "unit_label": {
          "description": "A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "updated": {
          "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "url": {
          "description": "A URL of a publicly-accessible webpage for this product.",
          "maxLength": 2048,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "active",
        "created",
        "id",
        "images",
        "livemode",
        "marketing_features",
        "metadata",
        "name",
        "object",
        "updated"
      ],
      "title": "Product",
      "type": "object",
      "x-expandableFields": [
        "default_price",
        "marketing_features",
        "package_dimensions",
        "tax_code"
      ],
      "x-resourceId": "product"
    },
    "product_feature": {
      "description": "A product_feature represents an attachment between a feature and a product.\nWhen a product is purchased that has a feature attached, Stripe will create an entitlement to the feature for the purchasing customer.",
      "properties": {
        "entitlement_feature": {
          "$ref": "#/definitions/entitlements.feature"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "product_feature"
          ],
          "type": "string"
        }
      },
      "required": [
        "entitlement_feature",
        "id",
        "livemode",
        "object"
      ],
      "title": "ProductFeature",
      "type": "object",
      "x-expandableFields": [
        "entitlement_feature"
      ],
      "x-resourceId": "product_feature"
    },
    "product_marketing_feature": {
      "description": "",
      "properties": {
        "name": {
          "description": "The marketing feature name. Up to 80 characters long.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "ProductMarketingFeature",
      "type": "object",
      "x-expandableFields": []
    },
    "promotion_code": {
      "description": "A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to\ncreate multiple codes for a single coupon.",
      "properties": {
        "active": {
          "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.",
          "type": "boolean"
        },
        "code": {
          "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer. Valid characters are lower case letters (a-z), upper case letters (A-Z), and digits (0-9).",
          "maxLength": 5000,
          "type": "string"
        },
        "coupon": {
          "$ref": "#/definitions/coupon"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "The customer that this promotion code can be used by.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "expires_at": {
          "description": "Date at which the promotion code can no longer be redeemed.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "max_redemptions": {
          "description": "Maximum number of times this promotion code can be redeemed.",
          "type": "integer",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "promotion_code"
          ],
          "type": "string"
        },
        "restrictions": {
          "$ref": "#/definitions/promotion_codes_resource_restrictions"
        },
        "times_redeemed": {
          "description": "Number of times this promotion code has been used.",
          "type": "integer"
        }
      },
      "required": [
        "active",
        "code",
        "coupon",
        "created",
        "id",
        "livemode",
        "object",
        "restrictions",
        "times_redeemed"
      ],
      "title": "PromotionCode",
      "type": "object",
      "x-expandableFields": [
        "coupon",
        "customer",
        "restrictions"
      ],
      "x-resourceId": "promotion_code"
    },
    "promotion_code_currency_option": {
      "description": "",
      "properties": {
        "minimum_amount": {
          "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
          "type": "integer"
        }
      },
      "required": [
        "minimum_amount"
      ],
      "title": "PromotionCodeCurrencyOption",
      "type": "object",
      "x-expandableFields": []
    },
    "promotion_codes_resource_restrictions": {
      "description": "",
      "properties": {
        "currency_options": {
          "additionalProperties": {
            "$ref": "#/definitions/promotion_code_currency_option"
          },
          "description": "Promotion code restrictions defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
          "type": "object"
        },
        "first_time_transaction": {
          "description": "A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices",
          "type": "boolean"
        },
        "minimum_amount": {
          "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
          "type": "integer",
          "x-nullable": true
        },
        "minimum_amount_currency": {
          "description": "Three-letter [ISO code](https://stripe.com/docs/currencies) for minimum_amount",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "first_time_transaction"
      ],
      "title": "PromotionCodesResourceRestrictions",
      "type": "object",
      "x-expandableFields": [
        "currency_options"
      ]
    },
    "quote": {
      "description": "A Quote is a way to model prices that you'd like to provide to a customer.\nOnce accepted, it will automatically create an invoice, subscription or subscription schedule.",
      "properties": {
        "amount_subtotal": {
          "description": "Total before any discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total after discounts and taxes are applied.",
          "type": "integer"
        },
        "application": {
          "description": "ID of the Connect Application that created the quote.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_amount": {
          "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.",
          "type": "integer",
          "x-nullable": true
        },
        "application_fee_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.",
          "type": "number",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/quotes_resource_automatic_tax"
        },
        "collection_method": {
          "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
          "enum": [
            "charge_automatically",
            "send_invoice"
          ],
          "type": "string"
        },
        "computed": {
          "$ref": "#/definitions/quotes_resource_computed"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer": {
          "description": "The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "default_tax_rates": {
          "description": "The tax rates applied to this quote.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_rate"
                }
              ]
            }
          },
          "type": "array"
        },
        "description": {
          "description": "A description that will be displayed on the quote PDF.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discounts": {
          "description": "The discounts applied to this quote.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                }
              ]
            }
          },
          "type": "array"
        },
        "expires_at": {
          "description": "The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "footer": {
          "description": "A footer that will be displayed on the quote PDF.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "from_quote": {
          "description": "Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.",
          "x-nullable": true
        },
        "header": {
          "description": "A header that will be displayed on the quote PDF.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The invoice that was created from this quote.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              },
              {
                "$ref": "#/definitions/deleted_invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "invoice_settings": {
          "$ref": "#/definitions/invoice_setting_quote_setting"
        },
        "line_items": {
          "description": "A list of items the customer is being quoted for.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "QuotesResourceListLineItems",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "number": {
          "description": "A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "quote"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "status": {
          "description": "The status of the quote.",
          "enum": [
            "accepted",
            "canceled",
            "draft",
            "open"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "status_transitions": {
          "$ref": "#/definitions/quotes_resource_status_transitions"
        },
        "subscription": {
          "description": "The subscription that was created or updated from this quote.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "subscription_data": {
          "$ref": "#/definitions/quotes_resource_subscription_data_subscription_data"
        },
        "subscription_schedule": {
          "description": "The subscription schedule that was created or updated from this quote.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription_schedule"
              }
            ]
          },
          "x-nullable": true
        },
        "test_clock": {
          "description": "ID of the test clock this quote belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "total_details": {
          "$ref": "#/definitions/quotes_resource_total_details"
        },
        "transfer_data": {
          "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.",
          "x-nullable": true
        }
      },
      "required": [
        "amount_subtotal",
        "amount_total",
        "automatic_tax",
        "collection_method",
        "computed",
        "created",
        "discounts",
        "expires_at",
        "id",
        "invoice_settings",
        "livemode",
        "metadata",
        "object",
        "status",
        "status_transitions",
        "subscription_data",
        "total_details"
      ],
      "title": "Quote",
      "type": "object",
      "x-expandableFields": [
        "application",
        "automatic_tax",
        "computed",
        "customer",
        "default_tax_rates",
        "discounts",
        "from_quote",
        "invoice",
        "invoice_settings",
        "line_items",
        "on_behalf_of",
        "status_transitions",
        "subscription",
        "subscription_data",
        "subscription_schedule",
        "test_clock",
        "total_details",
        "transfer_data"
      ],
      "x-resourceId": "quote"
    },
    "quotes_resource_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Automatically calculate taxes",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the most recent automated tax calculation for this quote.",
          "enum": [
            "complete",
            "failed",
            "requires_location_inputs"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "QuotesResourceAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "quotes_resource_computed": {
      "description": "",
      "properties": {
        "recurring": {
          "description": "The definitive totals and line items the customer will be charged on a recurring basis. Takes into account the line items with recurring prices and discounts with `duration=forever` coupons only. Defaults to `null` if no inputted line items with recurring prices.",
          "x-nullable": true
        },
        "upfront": {
          "$ref": "#/definitions/quotes_resource_upfront"
        }
      },
      "required": [
        "upfront"
      ],
      "title": "QuotesResourceComputed",
      "type": "object",
      "x-expandableFields": [
        "recurring",
        "upfront"
      ]
    },
    "quotes_resource_from_quote": {
      "description": "",
      "properties": {
        "is_revision": {
          "description": "Whether this quote is a revision of a different quote.",
          "type": "boolean"
        },
        "quote": {
          "description": "The quote that was cloned.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/quote"
              }
            ]
          }
        }
      },
      "required": [
        "is_revision",
        "quote"
      ],
      "title": "QuotesResourceFromQuote",
      "type": "object",
      "x-expandableFields": [
        "quote"
      ]
    },
    "quotes_resource_recurring": {
      "description": "",
      "properties": {
        "amount_subtotal": {
          "description": "Total before any discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total after discounts and taxes are applied.",
          "type": "integer"
        },
        "interval": {
          "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
          "enum": [
            "day",
            "month",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
          "type": "integer"
        },
        "total_details": {
          "$ref": "#/definitions/quotes_resource_total_details"
        }
      },
      "required": [
        "amount_subtotal",
        "amount_total",
        "interval",
        "interval_count",
        "total_details"
      ],
      "title": "QuotesResourceRecurring",
      "type": "object",
      "x-expandableFields": [
        "total_details"
      ]
    },
    "quotes_resource_status_transitions": {
      "description": "",
      "properties": {
        "accepted_at": {
          "description": "The time that the quote was accepted. Measured in seconds since Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "canceled_at": {
          "description": "The time that the quote was canceled. Measured in seconds since Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "finalized_at": {
          "description": "The time that the quote was finalized. Measured in seconds since Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "QuotesResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "quotes_resource_subscription_data_subscription_data": {
      "description": "",
      "properties": {
        "description": {
          "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "effective_date": {
          "description": "When creating a new subscription, the date of which the subscription schedule will start after the quote is accepted. This date is ignored if it is in the past when the quote is accepted. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on the subscription or subscription schedule when the quote is accepted. If a recurring price is included in `line_items`, this field will be passed to the resulting subscription's `metadata` field. If `subscription_data.effective_date` is used, this field will be passed to the resulting subscription schedule's `phases.metadata` field. Unlike object-level metadata, this field is declarative. Updates will clear prior values.",
          "type": "object",
          "x-nullable": true
        },
        "trial_period_days": {
          "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "QuotesResourceSubscriptionDataSubscriptionData",
      "type": "object",
      "x-expandableFields": []
    },
    "quotes_resource_total_details": {
      "description": "",
      "properties": {
        "amount_discount": {
          "description": "This is the sum of all the discounts.",
          "type": "integer"
        },
        "amount_shipping": {
          "description": "This is the sum of all the shipping amounts.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_tax": {
          "description": "This is the sum of all the tax amounts.",
          "type": "integer"
        },
        "breakdown": {
          "$ref": "#/definitions/quotes_resource_total_details_resource_breakdown"
        }
      },
      "required": [
        "amount_discount",
        "amount_tax"
      ],
      "title": "QuotesResourceTotalDetails",
      "type": "object",
      "x-expandableFields": [
        "breakdown"
      ]
    },
    "quotes_resource_total_details_resource_breakdown": {
      "description": "",
      "properties": {
        "discounts": {
          "description": "The aggregated discounts.",
          "items": {
            "$ref": "#/definitions/line_items_discount_amount"
          },
          "type": "array"
        },
        "taxes": {
          "description": "The aggregated tax amounts by rate.",
          "items": {
            "$ref": "#/definitions/line_items_tax_amount"
          },
          "type": "array"
        }
      },
      "required": [
        "discounts",
        "taxes"
      ],
      "title": "QuotesResourceTotalDetailsResourceBreakdown",
      "type": "object",
      "x-expandableFields": [
        "discounts",
        "taxes"
      ]
    },
    "quotes_resource_transfer_data": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
          "type": "integer",
          "x-nullable": true
        },
        "amount_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the destination account. By default, the entire amount will be transferred to the destination.",
          "type": "number",
          "x-nullable": true
        },
        "destination": {
          "description": "The account where funds from the payment will be transferred to upon payment success.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "QuotesResourceTransferData",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "quotes_resource_upfront": {
      "description": "",
      "properties": {
        "amount_subtotal": {
          "description": "Total before any discounts or taxes are applied.",
          "type": "integer"
        },
        "amount_total": {
          "description": "Total after discounts and taxes are applied.",
          "type": "integer"
        },
        "line_items": {
          "description": "The line items that will appear on the next invoice after this quote is accepted. This does not include pending invoice items that exist on the customer but may still be included in the next invoice.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "QuotesResourceListLineItems",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "total_details": {
          "$ref": "#/definitions/quotes_resource_total_details"
        }
      },
      "required": [
        "amount_subtotal",
        "amount_total",
        "total_details"
      ],
      "title": "QuotesResourceUpfront",
      "type": "object",
      "x-expandableFields": [
        "line_items",
        "total_details"
      ]
    },
    "radar.early_fraud_warning": {
      "description": "An early fraud warning indicates that the card issuer has notified us that a\ncharge may be fraudulent.\n\nRelated guide: [Early fraud warnings](https://stripe.com/docs/disputes/measuring#early-fraud-warnings)",
      "properties": {
        "actionable": {
          "description": "An EFW is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an EFW, in order to avoid receiving a dispute later.",
          "type": "boolean"
        },
        "charge": {
          "description": "ID of the charge this early fraud warning is for, optionally expanded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          }
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "fraud_type": {
          "description": "The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "radar.early_fraud_warning"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "ID of the Payment Intent this early fraud warning is for, optionally expanded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        }
      },
      "required": [
        "actionable",
        "charge",
        "created",
        "fraud_type",
        "id",
        "livemode",
        "object"
      ],
      "title": "RadarEarlyFraudWarning",
      "type": "object",
      "x-expandableFields": [
        "charge",
        "payment_intent"
      ],
      "x-resourceId": "radar.early_fraud_warning"
    },
    "radar.value_list": {
      "description": "Value lists allow you to group values together which can then be referenced in rules.\n\nRelated guide: [Default Stripe lists](https://stripe.com/docs/radar/lists#managing-list-items)",
      "properties": {
        "alias": {
          "description": "The name of the value list for use in rules.",
          "maxLength": 5000,
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "created_by": {
          "description": "The name or email address of the user who created this value list.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "item_type": {
          "description": "The type of items in the value list. One of `card_fingerprint`, `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`.",
          "enum": [
            "card_bin",
            "card_fingerprint",
            "case_sensitive_string",
            "country",
            "customer_id",
            "email",
            "ip_address",
            "sepa_debit_fingerprint",
            "string",
            "us_bank_account_fingerprint"
          ],
          "type": "string"
        },
        "list_items": {
          "description": "List of items contained within this value list.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/radar.value_list_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "RadarListListItemList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "name": {
          "description": "The name of the value list.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "radar.value_list"
          ],
          "type": "string"
        }
      },
      "required": [
        "alias",
        "created",
        "created_by",
        "id",
        "item_type",
        "list_items",
        "livemode",
        "metadata",
        "name",
        "object"
      ],
      "title": "RadarListList",
      "type": "object",
      "x-expandableFields": [
        "list_items"
      ],
      "x-resourceId": "radar.value_list"
    },
    "radar.value_list_item": {
      "description": "Value list items allow you to add specific values to a given Radar value list, which can then be used in rules.\n\nRelated guide: [Managing list items](https://stripe.com/docs/radar/lists#managing-list-items)",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "created_by": {
          "description": "The name or email address of the user who added this item to the value list.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "radar.value_list_item"
          ],
          "type": "string"
        },
        "value": {
          "description": "The value of the item.",
          "maxLength": 5000,
          "type": "string"
        },
        "value_list": {
          "description": "The identifier of the value list this item belongs to.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "created_by",
        "id",
        "livemode",
        "object",
        "value",
        "value_list"
      ],
      "title": "RadarListListItem",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "radar.value_list_item"
    },
    "radar_radar_options": {
      "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
      "properties": {
        "session": {
          "description": "A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "RadarRadarOptions",
      "type": "object",
      "x-expandableFields": []
    },
    "radar_review_resource_location": {
      "description": "",
      "properties": {
        "city": {
          "description": "The city where the payment originated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country where the payment originated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "latitude": {
          "description": "The geographic latitude where the payment originated.",
          "type": "number",
          "x-nullable": true
        },
        "longitude": {
          "description": "The geographic longitude where the payment originated.",
          "type": "number",
          "x-nullable": true
        },
        "region": {
          "description": "The state/county/province/region where the payment originated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "RadarReviewResourceLocation",
      "type": "object",
      "x-expandableFields": []
    },
    "radar_review_resource_session": {
      "description": "",
      "properties": {
        "browser": {
          "description": "The browser used in this browser session (e.g., `Chrome`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "device": {
          "description": "Information about the device used for the browser session (e.g., `Samsung SM-G930T`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "platform": {
          "description": "The platform for the browser session (e.g., `Macintosh`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "description": "The version for the browser session (e.g., `61.0.3163.100`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "RadarReviewResourceSession",
      "type": "object",
      "x-expandableFields": []
    },
    "received_payment_method_details_financial_account": {
      "description": "",
      "properties": {
        "id": {
          "description": "The FinancialAccount ID.",
          "maxLength": 5000,
          "type": "string"
        },
        "network": {
          "description": "The rails the ReceivedCredit was sent over. A FinancialAccount can only send funds over `stripe`.",
          "enum": [
            "stripe"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "network"
      ],
      "title": "received_payment_method_details_financial_account",
      "type": "object",
      "x-expandableFields": []
    },
    "recurring": {
      "description": "",
      "properties": {
        "aggregate_usage": {
          "description": "Specifies a usage aggregation strategy for prices of `usage_type=metered`. Defaults to `sum`.",
          "enum": [
            "last_during_period",
            "last_ever",
            "max",
            "sum"
          ],
          "type": "string",
          "x-nullable": true
        },
        "interval": {
          "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
          "enum": [
            "day",
            "month",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
          "type": "integer"
        },
        "meter": {
          "description": "The meter tracking the usage of a metered price",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "usage_type": {
          "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
          "enum": [
            "licensed",
            "metered"
          ],
          "type": "string"
        }
      },
      "required": [
        "interval",
        "interval_count",
        "usage_type"
      ],
      "title": "Recurring",
      "type": "object",
      "x-expandableFields": []
    },
    "refund": {
      "description": "Refund objects allow you to refund a previously created charge that isn't\nrefunded yet. Funds are refunded to the credit or debit card that's\ninitially charged.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds)",
      "properties": {
        "amount": {
          "description": "Amount, in cents (or local equivalent).",
          "type": "integer"
        },
        "balance_transaction": {
          "description": "Balance transaction that describes the impact on your account balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "charge": {
          "description": "ID of the charge that's refunded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).",
          "maxLength": 5000,
          "type": "string"
        },
        "destination_details": {
          "$ref": "#/definitions/refund_destination_details"
        },
        "failure_balance_transaction": {
          "description": "After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          }
        },
        "failure_reason": {
          "description": "Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "instructions_email": {
          "description": "For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "next_action": {
          "$ref": "#/definitions/refund_next_action"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "refund"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "ID of the PaymentIntent that's refunded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "reason": {
          "description": "Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
          "enum": [
            "duplicate",
            "expired_uncaptured_charge",
            "fraudulent",
            "requested_by_customer"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "receipt_number": {
          "description": "This is the transaction number that appears on email receipts sent for this refund.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "source_transfer_reversal": {
          "description": "The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/transfer_reversal"
              }
            ]
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "transfer_reversal": {
          "description": "This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/transfer_reversal"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "id",
        "object"
      ],
      "title": "Refund",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "charge",
        "destination_details",
        "failure_balance_transaction",
        "next_action",
        "payment_intent",
        "source_transfer_reversal",
        "transfer_reversal"
      ],
      "x-resourceId": "refund"
    },
    "refund_destination_details": {
      "description": "",
      "properties": {
        "affirm": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "afterpay_clearpay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "alipay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "amazon_pay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "au_bank_transfer": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "blik": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "br_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "card": {
          "$ref": "#/definitions/refund_destination_details_card"
        },
        "cashapp": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "customer_cash_balance": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "eps": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "eu_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "gb_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "giropay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "grabpay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "jp_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "klarna": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "multibanco": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "mx_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "p24": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "paynow": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "paypal": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "pix": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "revolut": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "sofort": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "swish": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "th_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "type": {
          "description": "The type of transaction-specific details of the payment method used in the refund (e.g., `card`). An additional hash is included on `destination_details` with a name matching this value. It contains information specific to the refund transaction.",
          "maxLength": 5000,
          "type": "string"
        },
        "us_bank_transfer": {
          "$ref": "#/definitions/refund_destination_details_generic"
        },
        "wechat_pay": {
          "$ref": "#/definitions/destination_details_unimplemented"
        },
        "zip": {
          "$ref": "#/definitions/destination_details_unimplemented"
        }
      },
      "required": [
        "type"
      ],
      "title": "refund_destination_details",
      "type": "object",
      "x-expandableFields": [
        "affirm",
        "afterpay_clearpay",
        "alipay",
        "amazon_pay",
        "au_bank_transfer",
        "blik",
        "br_bank_transfer",
        "card",
        "cashapp",
        "customer_cash_balance",
        "eps",
        "eu_bank_transfer",
        "gb_bank_transfer",
        "giropay",
        "grabpay",
        "jp_bank_transfer",
        "klarna",
        "multibanco",
        "mx_bank_transfer",
        "p24",
        "paynow",
        "paypal",
        "pix",
        "revolut",
        "sofort",
        "swish",
        "th_bank_transfer",
        "us_bank_transfer",
        "wechat_pay",
        "zip"
      ]
    },
    "refund_destination_details_card": {
      "description": "",
      "properties": {
        "reference": {
          "description": "Value of the reference number assigned to the refund.",
          "maxLength": 5000,
          "type": "string"
        },
        "reference_status": {
          "description": "Status of the reference number on the refund. This can be `pending`, `available` or `unavailable`.",
          "maxLength": 5000,
          "type": "string"
        },
        "reference_type": {
          "description": "Type of the reference number assigned to the refund.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The type of refund. This can be `refund`, `reversal`, or `pending`.",
          "enum": [
            "pending",
            "refund",
            "reversal"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "refund_destination_details_card",
      "type": "object",
      "x-expandableFields": []
    },
    "refund_destination_details_generic": {
      "description": "",
      "properties": {
        "reference": {
          "description": "The reference assigned to the refund.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "reference_status": {
          "description": "Status of the reference on the refund. This can be `pending`, `available` or `unavailable`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "refund_destination_details_generic",
      "type": "object",
      "x-expandableFields": []
    },
    "refund_next_action": {
      "description": "",
      "properties": {
        "display_details": {
          "description": "Contains the refund details.",
          "x-nullable": true
        },
        "type": {
          "description": "Type of the next action to perform.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "RefundNextAction",
      "type": "object",
      "x-expandableFields": [
        "display_details"
      ]
    },
    "refund_next_action_display_details": {
      "description": "",
      "properties": {
        "email_sent": {
          "$ref": "#/definitions/email_sent"
        },
        "expires_at": {
          "description": "The expiry timestamp.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "email_sent",
        "expires_at"
      ],
      "title": "RefundNextActionDisplayDetails",
      "type": "object",
      "x-expandableFields": [
        "email_sent"
      ]
    },
    "reporting.report_run": {
      "description": "The Report Run object represents an instance of a report type generated with\nspecific run parameters. Once the object is created, Stripe begins processing the report.\nWhen the report has finished running, it will give you a reference to a file\nwhere you can retrieve your results. For an overview, see\n[API Access to Reports](https://stripe.com/docs/reporting/statements/api).\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/financial_reporting_finance_report_run_run_parameters"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "error": {
          "description": "If something should go wrong during the run, a message about the failure (populated when\n `status=failed`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "`true` if the report is run on live mode data and `false` if it is run on test mode data.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "reporting.report_run"
          ],
          "type": "string"
        },
        "report_type": {
          "description": "The ID of the [report type](https://stripe.com/docs/reports/report-types) to run, such as `\"balance.summary.1\"`.",
          "maxLength": 5000,
          "type": "string"
        },
        "result": {
          "description": "The file object representing the result of the report run (populated when\n `status=succeeded`).",
          "x-nullable": true
        },
        "status": {
          "description": "Status of this report run. This will be `pending` when the run is initially created.\n When the run finishes, this will be set to `succeeded` and the `result` field will be populated.\n Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.",
          "maxLength": 5000,
          "type": "string"
        },
        "succeeded_at": {
          "description": "Timestamp at which this run successfully finished (populated when\n `status=succeeded`). Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "parameters",
        "report_type",
        "status"
      ],
      "title": "reporting_report_run",
      "type": "object",
      "x-expandableFields": [
        "parameters",
        "result"
      ],
      "x-resourceId": "reporting.report_run"
    },
    "reporting.report_type": {
      "description": "The Report Type resource corresponds to a particular type of report, such as\nthe \"Activity summary\" or \"Itemized payouts\" reports. These objects are\nidentified by an ID belonging to a set of enumerated values. See\n[API Access to Reports documentation](https://stripe.com/docs/reporting/statements/api)\nfor those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
      "properties": {
        "data_available_end": {
          "description": "Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "data_available_start": {
          "description": "Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "default_columns": {
          "description": "List of column names that are included by default when this Report Type gets run. (If the Report Type doesn't support the `columns` parameter, this will be null.)",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "description": "The [ID of the Report Type](https://stripe.com/docs/reporting/statements/api#available-report-types), such as `balance.summary.1`.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "name": {
          "description": "Human-readable name of the Report Type",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "reporting.report_type"
          ],
          "type": "string"
        },
        "updated": {
          "description": "When this Report Type was latest updated. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "version": {
          "description": "Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.",
          "type": "integer"
        }
      },
      "required": [
        "data_available_end",
        "data_available_start",
        "id",
        "livemode",
        "name",
        "object",
        "updated",
        "version"
      ],
      "title": "reporting_report_type",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "reporting.report_type"
    },
    "reserve_transaction": {
      "description": "",
      "properties": {
        "amount": {
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "reserve_transaction"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency",
        "id",
        "object"
      ],
      "title": "ReserveTransaction",
      "type": "object",
      "x-expandableFields": []
    },
    "review": {
      "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
      "properties": {
        "billing_zip": {
          "description": "The ZIP or postal code of the card used, if applicable.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "charge": {
          "description": "The charge associated with this review.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "closed_reason": {
          "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
          "enum": [
            "approved",
            "disputed",
            "redacted",
            "refunded",
            "refunded_as_fraud"
          ],
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "ip_address": {
          "description": "The IP address where the payment originated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "ip_address_location": {
          "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "review"
          ],
          "type": "string"
        },
        "open": {
          "description": "If `true`, the review needs action.",
          "type": "boolean"
        },
        "opened_reason": {
          "description": "The reason the review was opened. One of `rule` or `manual`.",
          "enum": [
            "manual",
            "rule"
          ],
          "type": "string"
        },
        "payment_intent": {
          "description": "The PaymentIntent ID associated with this review, if one exists.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        },
        "reason": {
          "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
          "maxLength": 5000,
          "type": "string"
        },
        "session": {
          "description": "Information related to the browsing session of the user who initiated the payment.",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "open",
        "opened_reason",
        "reason"
      ],
      "title": "RadarReview",
      "type": "object",
      "x-expandableFields": [
        "charge",
        "ip_address_location",
        "payment_intent",
        "session"
      ],
      "x-resourceId": "review"
    },
    "rule": {
      "description": "",
      "properties": {
        "action": {
          "description": "The action taken on the payment.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "predicate": {
          "description": "The predicate to evaluate the payment against.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "action",
        "id",
        "predicate"
      ],
      "title": "RadarRule",
      "type": "object",
      "x-expandableFields": []
    },
    "scheduled_query_run": {
      "description": "If you have [scheduled a Sigma query](https://stripe.com/docs/sigma/scheduled-queries), you'll\nreceive a `sigma.scheduled_query_run.created` webhook each time the query\nruns. The webhook contains a `ScheduledQueryRun` object, which you can use to\nretrieve the query results.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "data_load_time": {
          "description": "When the query was run, Sigma contained a snapshot of your Stripe data at this time.",
          "format": "unix-time",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/sigma_scheduled_query_run_error"
        },
        "file": {
          "description": "The file object representing the results of the query.",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "scheduled_query_run"
          ],
          "type": "string"
        },
        "result_available_until": {
          "description": "Time at which the result expires and is no longer available for download.",
          "format": "unix-time",
          "type": "integer"
        },
        "sql": {
          "description": "SQL for the query.",
          "maxLength": 100000,
          "type": "string"
        },
        "status": {
          "description": "The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise.",
          "maxLength": 5000,
          "type": "string"
        },
        "title": {
          "description": "Title of the query.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "data_load_time",
        "id",
        "livemode",
        "object",
        "result_available_until",
        "sql",
        "status",
        "title"
      ],
      "title": "ScheduledQueryRun",
      "type": "object",
      "x-expandableFields": [
        "error",
        "file"
      ],
      "x-resourceId": "scheduled_query_run"
    },
    "schedules_phase_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether Stripe automatically computes tax on invoices created during this phase.",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "SchedulesPhaseAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "secret_service_resource_scope": {
      "description": "",
      "properties": {
        "type": {
          "description": "The secret scope type.",
          "enum": [
            "account",
            "user"
          ],
          "type": "string"
        },
        "user": {
          "description": "The user ID, if type is set to \"user\"",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "SecretServiceResourceScope",
      "type": "object",
      "x-expandableFields": []
    },
    "sepa_debit_generated_from": {
      "description": "",
      "properties": {
        "charge": {
          "description": "The ID of the Charge that generated this PaymentMethod, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "setup_attempt": {
          "description": "The ID of the SetupAttempt that generated this PaymentMethod, if any.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_attempt"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "title": "sepa_debit_generated_from",
      "type": "object",
      "x-expandableFields": [
        "charge",
        "setup_attempt"
      ]
    },
    "setup_attempt": {
      "description": "A SetupAttempt describes one attempted confirmation of a SetupIntent,\nwhether that confirmation is successful or unsuccessful. You can use\nSetupAttempts to inspect details of a specific attempt at setting up a\npayment method using a SetupIntent.",
      "properties": {
        "application": {
          "description": "The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          },
          "x-nullable": true
        },
        "attach_to_self": {
          "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "flow_directions": {
          "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
          "items": {
            "enum": [
              "inbound",
              "outbound"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "setup_attempt"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method": {
          "description": "ID of the payment method used with this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          }
        },
        "payment_method_details": {
          "$ref": "#/definitions/setup_attempt_payment_method_details"
        },
        "setup_error": {
          "description": "The error encountered during this attempt to confirm the SetupIntent, if any.",
          "x-nullable": true
        },
        "setup_intent": {
          "description": "ID of the SetupIntent that this attempt belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_intent"
              }
            ]
          }
        },
        "status": {
          "description": "Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.",
          "maxLength": 5000,
          "type": "string"
        },
        "usage": {
          "description": "The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "payment_method",
        "payment_method_details",
        "setup_intent",
        "status",
        "usage"
      ],
      "title": "PaymentFlowsSetupIntentSetupAttempt",
      "type": "object",
      "x-expandableFields": [
        "application",
        "customer",
        "on_behalf_of",
        "payment_method",
        "payment_method_details",
        "setup_error",
        "setup_intent"
      ],
      "x-resourceId": "setup_attempt"
    },
    "setup_attempt_payment_method_details": {
      "description": "",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_acss_debit"
        },
        "amazon_pay": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_amazon_pay"
        },
        "au_becs_debit": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_au_becs_debit"
        },
        "bacs_debit": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_bacs_debit"
        },
        "bancontact": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_bancontact"
        },
        "boleto": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_boleto"
        },
        "card": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_card"
        },
        "card_present": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_card_present"
        },
        "cashapp": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_cashapp"
        },
        "ideal": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_ideal"
        },
        "klarna": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_klarna"
        },
        "link": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_link"
        },
        "paypal": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_paypal"
        },
        "revolut_pay": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_revolut_pay"
        },
        "sepa_debit": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_sepa_debit"
        },
        "sofort": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_sofort"
        },
        "type": {
          "description": "The type of the payment method used in the SetupIntent (e.g., `card`). An additional hash is included on `payment_method_details` with a name matching this value. It contains confirmation-specific information for the payment method.",
          "maxLength": 5000,
          "type": "string"
        },
        "us_bank_account": {
          "$ref": "#/definitions/setup_attempt_payment_method_details_us_bank_account"
        }
      },
      "required": [
        "type"
      ],
      "title": "SetupAttemptPaymentMethodDetails",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "amazon_pay",
        "au_becs_debit",
        "bacs_debit",
        "bancontact",
        "boleto",
        "card",
        "card_present",
        "cashapp",
        "ideal",
        "klarna",
        "link",
        "paypal",
        "revolut_pay",
        "sepa_debit",
        "sofort",
        "us_bank_account"
      ]
    },
    "setup_attempt_payment_method_details_acss_debit": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_amazon_pay": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_au_becs_debit": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_au_becs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_bacs_debit": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_bancontact": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "Bank Identifier Code of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
          "enum": [
            "de",
            "en",
            "fr",
            "nl"
          ],
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_bancontact",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "setup_attempt_payment_method_details_boleto": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_boleto",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_card": {
      "description": "",
      "properties": {
        "brand": {
          "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "checks": {
          "description": "Check results by Card networks on Card address and CVC at the time of authorization",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer",
          "x-nullable": true
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "network": {
          "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "three_d_secure": {
          "description": "Populated if this authorization used 3D Secure authentication.",
          "x-nullable": true
        },
        "wallet": {
          "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_card",
      "type": "object",
      "x-expandableFields": [
        "checks",
        "three_d_secure",
        "wallet"
      ]
    },
    "setup_attempt_payment_method_details_card_checks": {
      "description": "",
      "properties": {
        "address_line1_check": {
          "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "address_postal_code_check": {
          "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_card_checks",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_card_present": {
      "description": "",
      "properties": {
        "generated_card": {
          "description": "The ID of the Card PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "offline": {
          "description": "Details about payments collected offline.",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_card_present",
      "type": "object",
      "x-expandableFields": [
        "generated_card",
        "offline"
      ]
    },
    "setup_attempt_payment_method_details_card_wallet": {
      "description": "",
      "properties": {
        "apple_pay": {
          "$ref": "#/definitions/payment_method_details_card_wallet_apple_pay"
        },
        "google_pay": {
          "$ref": "#/definitions/payment_method_details_card_wallet_google_pay"
        },
        "type": {
          "description": "The type of the card wallet, one of `apple_pay`, `google_pay`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
          "enum": [
            "apple_pay",
            "google_pay",
            "link"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "setup_attempt_payment_method_details_card_wallet",
      "type": "object",
      "x-expandableFields": [
        "apple_pay",
        "google_pay"
      ]
    },
    "setup_attempt_payment_method_details_cashapp": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_cashapp",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_ideal": {
      "description": "",
      "properties": {
        "bank": {
          "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.",
          "enum": [
            "abn_amro",
            "asn_bank",
            "bunq",
            "handelsbanken",
            "ing",
            "knab",
            "moneyou",
            "n26",
            "nn",
            "rabobank",
            "regiobank",
            "revolut",
            "sns_bank",
            "triodos_bank",
            "van_lanschot",
            "yoursafe"
          ],
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "The Bank Identifier Code of the customer's bank.",
          "enum": [
            "ABNANL2A",
            "ASNBNL21",
            "BITSNL2A",
            "BUNQNL2A",
            "FVLBNL22",
            "HANDNL2A",
            "INGBNL2A",
            "KNABNL2H",
            "MOYONL21",
            "NNBANL2G",
            "NTSBDEB1",
            "RABONL2U",
            "RBRBNL21",
            "REVOIE23",
            "REVOLT21",
            "SNSBNL2A",
            "TRIONL2U"
          ],
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by iDEAL directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_ideal",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "setup_attempt_payment_method_details_klarna": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_klarna",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_link": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_link",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_paypal": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_paypal",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_revolut_pay": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_revolut_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_sepa_debit": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_attempt_payment_method_details_sofort": {
      "description": "",
      "properties": {
        "bank_code": {
          "description": "Bank code of bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "description": "Name of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "description": "Bank Identifier Code of the bank associated with the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "generated_sepa_debit": {
          "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "generated_sepa_debit_mandate": {
          "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "iban_last4": {
          "description": "Last four characters of the IBAN.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "description": "Preferred language of the Sofort authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
          "enum": [
            "de",
            "en",
            "fr",
            "nl"
          ],
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Owner's verified full name. Values are verified or provided by Sofort directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_attempt_payment_method_details_sofort",
      "type": "object",
      "x-expandableFields": [
        "generated_sepa_debit",
        "generated_sepa_debit_mandate"
      ]
    },
    "setup_attempt_payment_method_details_us_bank_account": {
      "description": "",
      "properties": {},
      "title": "setup_attempt_payment_method_details_us_bank_account",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent": {
      "description": "A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.\nFor example, you can use a SetupIntent to set up and save your customer's card without immediately collecting a payment.\nLater, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.\n\nCreate a SetupIntent when you're ready to collect your customer's payment credentials.\nDon't maintain long-lived, unconfirmed SetupIntents because they might not be valid.\nThe SetupIntent transitions through multiple [statuses](https://docs.stripe.com/payments/intents#intent-statuses) as it guides\nyou through the setup process.\n\nSuccessful SetupIntents result in payment credentials that are optimized for future payments.\nFor example, cardholders in [certain regions](https://stripe.com/guides/strong-customer-authentication) might need to be run through\n[Strong Customer Authentication](https://docs.stripe.com/strong-customer-authentication) during payment method collection\nto streamline later [off-session payments](https://docs.stripe.com/payments/setup-intents).\nIf you use the SetupIntent with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer),\nit automatically attaches the resulting payment method to that Customer after successful setup.\nWe recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on\nPaymentIntents to save payment methods to prevent saving invalid or unoptimized payment methods.\n\nBy using SetupIntents, you can reduce friction for your customers, even as regulations change over time.\n\nRelated guide: [Setup Intents API](https://docs.stripe.com/payments/setup-intents)",
      "properties": {
        "application": {
          "description": "ID of the Connect application that created the SetupIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          },
          "x-nullable": true
        },
        "attach_to_self": {
          "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
          "type": "boolean"
        },
        "automatic_payment_methods": {
          "description": "Settings for dynamic payment methods compatible with this Setup Intent",
          "x-nullable": true
        },
        "cancellation_reason": {
          "description": "Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.",
          "enum": [
            "abandoned",
            "duplicate",
            "requested_by_customer"
          ],
          "type": "string",
          "x-nullable": true
        },
        "client_secret": {
          "description": "The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.\n\nThe client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          },
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "flow_directions": {
          "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
          "items": {
            "enum": [
              "inbound",
              "outbound"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last_setup_error": {
          "description": "The error encountered in the previous SetupIntent confirmation.",
          "x-nullable": true
        },
        "latest_attempt": {
          "description": "The most recent SetupAttempt for this SetupIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_attempt"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "mandate": {
          "description": "ID of the multi use Mandate generated by the SetupIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "next_action": {
          "description": "If present, this property tells you what actions you need to take in order for your customer to continue payment setup.",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "setup_intent"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) for which the setup is intended.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method": {
          "description": "ID of the payment method used with this SetupIntent. If the payment method is `card_present` and isn't a digital wallet, then the [generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card) associated with the `latest_attempt` is attached to the Customer instead.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "payment_method_configuration_details": {
          "description": "Information about the payment method configuration used for this Setup Intent.",
          "x-nullable": true
        },
        "payment_method_options": {
          "description": "Payment method-specific configuration for this SetupIntent.",
          "x-nullable": true
        },
        "payment_method_types": {
          "description": "The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "single_use_mandate": {
          "description": "ID of the single_use Mandate generated by the SetupIntent.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/mandate"
              }
            ]
          },
          "x-nullable": true
        },
        "status": {
          "description": "[Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.",
          "enum": [
            "canceled",
            "processing",
            "requires_action",
            "requires_confirmation",
            "requires_payment_method",
            "succeeded"
          ],
          "type": "string"
        },
        "usage": {
          "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "payment_method_types",
        "status",
        "usage"
      ],
      "title": "SetupIntent",
      "type": "object",
      "x-expandableFields": [
        "application",
        "automatic_payment_methods",
        "customer",
        "last_setup_error",
        "latest_attempt",
        "mandate",
        "next_action",
        "on_behalf_of",
        "payment_method",
        "payment_method_configuration_details",
        "payment_method_options",
        "single_use_mandate"
      ],
      "x-resourceId": "setup_intent"
    },
    "setup_intent_next_action": {
      "description": "",
      "properties": {
        "cashapp_handle_redirect_or_display_qr_code": {
          "$ref": "#/definitions/payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code"
        },
        "redirect_to_url": {
          "$ref": "#/definitions/setup_intent_next_action_redirect_to_url"
        },
        "type": {
          "description": "Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.",
          "maxLength": 5000,
          "type": "string"
        },
        "use_stripe_sdk": {
          "description": "When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
          "type": "object"
        },
        "verify_with_microdeposits": {
          "$ref": "#/definitions/setup_intent_next_action_verify_with_microdeposits"
        }
      },
      "required": [
        "type"
      ],
      "title": "SetupIntentNextAction",
      "type": "object",
      "x-expandableFields": [
        "cashapp_handle_redirect_or_display_qr_code",
        "redirect_to_url",
        "verify_with_microdeposits"
      ]
    },
    "setup_intent_next_action_redirect_to_url": {
      "description": "",
      "properties": {
        "return_url": {
          "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "description": "The URL you must redirect your customer to in order to authenticate.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "SetupIntentNextActionRedirectToUrl",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_next_action_verify_with_microdeposits": {
      "description": "",
      "properties": {
        "arrival_date": {
          "description": "The timestamp when the microdeposits are expected to land.",
          "format": "unix-time",
          "type": "integer"
        },
        "hosted_verification_url": {
          "description": "The URL for the hosted verification page, which allows customers to verify their bank account.",
          "maxLength": 5000,
          "type": "string"
        },
        "microdeposit_type": {
          "description": "The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.",
          "enum": [
            "amounts",
            "descriptor_code"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "arrival_date",
        "hosted_verification_url"
      ],
      "title": "SetupIntentNextActionVerifyWithMicrodeposits",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options": {
      "description": "",
      "properties": {
        "acss_debit": {},
        "amazon_pay": {},
        "bacs_debit": {},
        "card": {},
        "card_present": {},
        "link": {},
        "paypal": {},
        "sepa_debit": {},
        "us_bank_account": {}
      },
      "title": "SetupIntentPaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "amazon_pay",
        "bacs_debit",
        "card",
        "card_present",
        "link",
        "paypal",
        "sepa_debit",
        "us_bank_account"
      ]
    },
    "setup_intent_payment_method_options_acss_debit": {
      "description": "",
      "properties": {
        "currency": {
          "description": "Currency supported by the bank account",
          "enum": [
            "cad",
            "usd"
          ],
          "type": "string",
          "x-nullable": true
        },
        "mandate_options": {
          "$ref": "#/definitions/setup_intent_payment_method_options_mandate_options_acss_debit"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "setup_intent_payment_method_options_acss_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "setup_intent_payment_method_options_amazon_pay": {
      "description": "",
      "properties": {},
      "title": "setup_intent_payment_method_options_amazon_pay",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_bacs_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/setup_intent_payment_method_options_mandate_options_bacs_debit"
        }
      },
      "title": "setup_intent_payment_method_options_bacs_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "setup_intent_payment_method_options_card": {
      "description": "",
      "properties": {
        "mandate_options": {
          "description": "Configuration options for setting up an eMandate for cards issued in India.",
          "x-nullable": true
        },
        "network": {
          "description": "Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.",
          "enum": [
            "amex",
            "cartes_bancaires",
            "diners",
            "discover",
            "eftpos_au",
            "girocard",
            "interac",
            "jcb",
            "mastercard",
            "unionpay",
            "unknown",
            "visa"
          ],
          "type": "string",
          "x-nullable": true
        },
        "request_three_d_secure": {
          "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
          "enum": [
            "any",
            "automatic",
            "challenge"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "setup_intent_payment_method_options_card",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "setup_intent_payment_method_options_card_mandate_options": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount to be charged for future payments.",
          "type": "integer"
        },
        "amount_type": {
          "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
          "enum": [
            "fixed",
            "maximum"
          ],
          "type": "string"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
          "maxLength": 200,
          "type": "string",
          "x-nullable": true
        },
        "end_date": {
          "description": "End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "interval": {
          "description": "Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.",
          "enum": [
            "day",
            "month",
            "sporadic",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.",
          "type": "integer",
          "x-nullable": true
        },
        "reference": {
          "description": "Unique identifier for the mandate or subscription.",
          "maxLength": 80,
          "type": "string"
        },
        "start_date": {
          "description": "Start date of the mandate or subscription. Start date should not be lesser than yesterday.",
          "format": "unix-time",
          "type": "integer"
        },
        "supported_types": {
          "description": "Specifies the type of mandates supported. Possible values are `india`.",
          "items": {
            "enum": [
              "india"
            ],
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "amount_type",
        "currency",
        "interval",
        "reference",
        "start_date"
      ],
      "title": "setup_intent_payment_method_options_card_mandate_options",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_card_present": {
      "description": "",
      "properties": {},
      "title": "setup_intent_payment_method_options_card_present",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_link": {
      "description": "",
      "properties": {},
      "title": "setup_intent_payment_method_options_link",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_mandate_options_acss_debit": {
      "description": "",
      "properties": {
        "custom_mandate_url": {
          "description": "A URL for custom mandate text",
          "maxLength": 5000,
          "type": "string"
        },
        "default_for": {
          "description": "List of Stripe products where this mandate can be selected automatically.",
          "items": {
            "enum": [
              "invoice",
              "subscription"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "interval_description": {
          "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payment_schedule": {
          "description": "Payment schedule for the mandate.",
          "enum": [
            "combined",
            "interval",
            "sporadic"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transaction_type": {
          "description": "Transaction type of the mandate.",
          "enum": [
            "business",
            "personal"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_intent_payment_method_options_mandate_options_acss_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_mandate_options_bacs_debit": {
      "description": "",
      "properties": {},
      "title": "setup_intent_payment_method_options_mandate_options_bacs_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_mandate_options_sepa_debit": {
      "description": "",
      "properties": {},
      "title": "setup_intent_payment_method_options_mandate_options_sepa_debit",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_paypal": {
      "description": "",
      "properties": {
        "billing_agreement_id": {
          "description": "The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "setup_intent_payment_method_options_paypal",
      "type": "object",
      "x-expandableFields": []
    },
    "setup_intent_payment_method_options_sepa_debit": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/setup_intent_payment_method_options_mandate_options_sepa_debit"
        }
      },
      "title": "setup_intent_payment_method_options_sepa_debit",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "setup_intent_payment_method_options_us_bank_account": {
      "description": "",
      "properties": {
        "financial_connections": {
          "$ref": "#/definitions/linked_account_options_us_bank_account"
        },
        "mandate_options": {
          "$ref": "#/definitions/payment_method_options_us_bank_account_mandate_options"
        },
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "setup_intent_payment_method_options_us_bank_account",
      "type": "object",
      "x-expandableFields": [
        "financial_connections",
        "mandate_options"
      ]
    },
    "setup_intent_type_specific_payment_method_options_client": {
      "description": "",
      "properties": {
        "verification_method": {
          "description": "Bank account verification method.",
          "enum": [
            "automatic",
            "instant",
            "microdeposits"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "title": "SetupIntentTypeSpecificPaymentMethodOptionsClient",
      "type": "object",
      "x-expandableFields": []
    },
    "shipping": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "carrier": {
          "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Recipient name.",
          "maxLength": 5000,
          "type": "string"
        },
        "phone": {
          "description": "Recipient phone (including extension).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tracking_number": {
          "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "Shipping",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "shipping_rate": {
      "description": "Shipping rates describe the price of shipping presented to your customers and\napplied to a purchase. For more information, see [Charge for shipping](https://stripe.com/docs/payments/during-payment/charge-shipping).",
      "properties": {
        "active": {
          "description": "Whether the shipping rate can be used for new purchases. Defaults to `true`.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "delivery_estimate": {
          "description": "The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.",
          "x-nullable": true
        },
        "display_name": {
          "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "fixed_amount": {
          "$ref": "#/definitions/shipping_rate_fixed_amount"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "shipping_rate"
          ],
          "type": "string"
        },
        "tax_behavior": {
          "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
          "enum": [
            "exclusive",
            "inclusive",
            "unspecified"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tax_code": {
          "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/tax_code"
              }
            ]
          },
          "x-nullable": true
        },
        "type": {
          "description": "The type of calculation to use on the shipping rate.",
          "enum": [
            "fixed_amount"
          ],
          "type": "string"
        }
      },
      "required": [
        "active",
        "created",
        "id",
        "livemode",
        "metadata",
        "object",
        "type"
      ],
      "title": "ShippingRate",
      "type": "object",
      "x-expandableFields": [
        "delivery_estimate",
        "fixed_amount",
        "tax_code"
      ],
      "x-resourceId": "shipping_rate"
    },
    "shipping_rate_currency_option": {
      "description": "",
      "properties": {
        "amount": {
          "description": "A non-negative integer in cents representing how much to charge.",
          "type": "integer"
        },
        "tax_behavior": {
          "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
          "enum": [
            "exclusive",
            "inclusive",
            "unspecified"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "tax_behavior"
      ],
      "title": "ShippingRateCurrencyOption",
      "type": "object",
      "x-expandableFields": []
    },
    "shipping_rate_delivery_estimate": {
      "description": "",
      "properties": {
        "maximum": {
          "description": "The upper bound of the estimated range. If empty, represents no upper bound i.e., infinite.",
          "x-nullable": true
        },
        "minimum": {
          "description": "The lower bound of the estimated range. If empty, represents no lower bound.",
          "x-nullable": true
        }
      },
      "title": "ShippingRateDeliveryEstimate",
      "type": "object",
      "x-expandableFields": [
        "maximum",
        "minimum"
      ]
    },
    "shipping_rate_delivery_estimate_bound": {
      "description": "",
      "properties": {
        "unit": {
          "description": "A unit of time.",
          "enum": [
            "business_day",
            "day",
            "hour",
            "month",
            "week"
          ],
          "type": "string"
        },
        "value": {
          "description": "Must be greater than 0.",
          "type": "integer"
        }
      },
      "required": [
        "unit",
        "value"
      ],
      "title": "ShippingRateDeliveryEstimateBound",
      "type": "object",
      "x-expandableFields": []
    },
    "shipping_rate_fixed_amount": {
      "description": "",
      "properties": {
        "amount": {
          "description": "A non-negative integer in cents representing how much to charge.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "currency_options": {
          "additionalProperties": {
            "$ref": "#/definitions/shipping_rate_currency_option"
          },
          "description": "Shipping rates defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
          "type": "object"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "ShippingRateFixedAmount",
      "type": "object",
      "x-expandableFields": [
        "currency_options"
      ]
    },
    "sigma_scheduled_query_run_error": {
      "description": "",
      "properties": {
        "message": {
          "description": "Information about the run failure.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "SigmaScheduledQueryRunError",
      "type": "object",
      "x-expandableFields": []
    },
    "source": {
      "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nStripe doesn't recommend using the deprecated [Sources API](https://stripe.com/docs/api/sources).\nWe recommend that you adopt the [PaymentMethods API](https://stripe.com/docs/api/payment_methods).\nThis newer API provides access to our latest features and payment method types.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
      "properties": {
        "ach_credit_transfer": {
          "$ref": "#/definitions/source_type_ach_credit_transfer"
        },
        "ach_debit": {
          "$ref": "#/definitions/source_type_ach_debit"
        },
        "acss_debit": {
          "$ref": "#/definitions/source_type_acss_debit"
        },
        "alipay": {
          "$ref": "#/definitions/source_type_alipay"
        },
        "amount": {
          "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
          "type": "integer",
          "x-nullable": true
        },
        "au_becs_debit": {
          "$ref": "#/definitions/source_type_au_becs_debit"
        },
        "bancontact": {
          "$ref": "#/definitions/source_type_bancontact"
        },
        "card": {
          "$ref": "#/definitions/source_type_card"
        },
        "card_present": {
          "$ref": "#/definitions/source_type_card_present"
        },
        "client_secret": {
          "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
          "maxLength": 5000,
          "type": "string"
        },
        "code_verification": {
          "$ref": "#/definitions/source_code_verification_flow"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
          "type": "string",
          "x-nullable": true
        },
        "customer": {
          "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
          "maxLength": 5000,
          "type": "string"
        },
        "eps": {
          "$ref": "#/definitions/source_type_eps"
        },
        "flow": {
          "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
          "maxLength": 5000,
          "type": "string"
        },
        "giropay": {
          "$ref": "#/definitions/source_type_giropay"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "ideal": {
          "$ref": "#/definitions/source_type_ideal"
        },
        "klarna": {
          "$ref": "#/definitions/source_type_klarna"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "multibanco": {
          "$ref": "#/definitions/source_type_multibanco"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "source"
          ],
          "type": "string"
        },
        "owner": {
          "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
          "x-nullable": true
        },
        "p24": {
          "$ref": "#/definitions/source_type_p24"
        },
        "receiver": {
          "$ref": "#/definitions/source_receiver_flow"
        },
        "redirect": {
          "$ref": "#/definitions/source_redirect_flow"
        },
        "sepa_debit": {
          "$ref": "#/definitions/source_type_sepa_debit"
        },
        "sofort": {
          "$ref": "#/definitions/source_type_sofort"
        },
        "source_order": {
          "$ref": "#/definitions/source_order"
        },
        "statement_descriptor": {
          "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
          "maxLength": 5000,
          "type": "string"
        },
        "three_d_secure": {
          "$ref": "#/definitions/source_type_three_d_secure"
        },
        "type": {
          "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
          "enum": [
            "ach_credit_transfer",
            "ach_debit",
            "acss_debit",
            "alipay",
            "au_becs_debit",
            "bancontact",
            "card",
            "card_present",
            "eps",
            "giropay",
            "ideal",
            "klarna",
            "multibanco",
            "p24",
            "sepa_debit",
            "sofort",
            "three_d_secure",
            "wechat"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "usage": {
          "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "wechat": {
          "$ref": "#/definitions/source_type_wechat"
        }
      },
      "required": [
        "client_secret",
        "created",
        "flow",
        "id",
        "livemode",
        "object",
        "status",
        "type"
      ],
      "title": "Source",
      "type": "object",
      "x-expandableFields": [
        "code_verification",
        "owner",
        "receiver",
        "redirect",
        "source_order"
      ],
      "x-resourceId": "source"
    },
    "source_code_verification_flow": {
      "description": "",
      "properties": {
        "attempts_remaining": {
          "description": "The number of attempts remaining to authenticate the source object with a verification code.",
          "type": "integer"
        },
        "status": {
          "description": "The status of the code verification, either `pending` (awaiting verification, `attempts_remaining` should be greater than 0), `succeeded` (successful verification) or `failed` (failed verification, cannot be verified anymore as `attempts_remaining` should be 0).",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "attempts_remaining",
        "status"
      ],
      "title": "SourceCodeVerificationFlow",
      "type": "object",
      "x-expandableFields": []
    },
    "source_mandate_notification": {
      "description": "Source mandate notifications should be created when a notification related to\na source mandate must be sent to the payer. They will trigger a webhook or\ndeliver an email to the customer.",
      "properties": {
        "acss_debit": {
          "$ref": "#/definitions/source_mandate_notification_acss_debit_data"
        },
        "amount": {
          "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`.",
          "type": "integer",
          "x-nullable": true
        },
        "bacs_debit": {
          "$ref": "#/definitions/source_mandate_notification_bacs_debit_data"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "source_mandate_notification"
          ],
          "type": "string"
        },
        "reason": {
          "description": "The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`.",
          "maxLength": 5000,
          "type": "string"
        },
        "sepa_debit": {
          "$ref": "#/definitions/source_mandate_notification_sepa_debit_data"
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "status": {
          "description": "The status of the mandate notification. Valid statuses are `pending` or `submitted`.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "reason",
        "source",
        "status",
        "type"
      ],
      "title": "SourceMandateNotification",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "bacs_debit",
        "sepa_debit",
        "source"
      ],
      "x-resourceId": "source_mandate_notification"
    },
    "source_mandate_notification_acss_debit_data": {
      "description": "",
      "properties": {
        "statement_descriptor": {
          "description": "The statement descriptor associate with the debit.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceMandateNotificationAcssDebitData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_mandate_notification_bacs_debit_data": {
      "description": "",
      "properties": {
        "last4": {
          "description": "Last 4 digits of the account number associated with the debit.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceMandateNotificationBacsDebitData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_mandate_notification_sepa_debit_data": {
      "description": "",
      "properties": {
        "creditor_identifier": {
          "description": "SEPA creditor ID.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "Last 4 digits of the account number associated with the debit.",
          "maxLength": 5000,
          "type": "string"
        },
        "mandate_reference": {
          "description": "Mandate reference associated with the debit.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceMandateNotificationSepaDebitData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_order": {
      "description": "",
      "properties": {
        "amount": {
          "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "email": {
          "description": "The email address of the customer placing the order.",
          "maxLength": 5000,
          "type": "string"
        },
        "items": {
          "description": "List of items constituting the order.",
          "items": {
            "$ref": "#/definitions/source_order_item"
          },
          "type": "array",
          "x-nullable": true
        },
        "shipping": {
          "$ref": "#/definitions/shipping"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "title": "SourceOrder",
      "type": "object",
      "x-expandableFields": [
        "items",
        "shipping"
      ]
    },
    "source_order_item": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount (price) for this order item.",
          "type": "integer",
          "x-nullable": true
        },
        "currency": {
          "description": "This currency of this order item. Required when `amount` is present.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "Human-readable description for this order item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "parent": {
          "description": "The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "The quantity of this order item. When type is `sku`, this is the number of instances of the SKU to be ordered.",
          "type": "integer"
        },
        "type": {
          "description": "The type of this order item. Must be `sku`, `tax`, or `shipping`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "SourceOrderItem",
      "type": "object",
      "x-expandableFields": []
    },
    "source_owner": {
      "description": "",
      "properties": {
        "address": {
          "description": "Owner's address.",
          "x-nullable": true
        },
        "email": {
          "description": "Owner's email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Owner's full name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "description": "Owner's phone number (including extension).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_address": {
          "description": "Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "x-nullable": true
        },
        "verified_email": {
          "description": "Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_phone": {
          "description": "Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "SourceOwner",
      "type": "object",
      "x-expandableFields": [
        "address",
        "verified_address"
      ]
    },
    "source_receiver_flow": {
      "description": "",
      "properties": {
        "address": {
          "description": "The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "amount_charged": {
          "description": "The total amount that was moved to your balance. This is almost always equal to the amount charged. In rare cases when customers deposit excess funds and we are unable to refund those, those funds get moved to your balance and show up in amount_charged as well. The amount charged is expressed in the source's currency.",
          "type": "integer"
        },
        "amount_received": {
          "description": "The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` should be true for consumed sources unless customers deposit excess funds. The amount received is expressed in the source's currency.",
          "type": "integer"
        },
        "amount_returned": {
          "description": "The total amount that was returned to the customer. The amount returned is expressed in the source's currency.",
          "type": "integer"
        },
        "refund_attributes_method": {
          "description": "Type of refund attribute method, one of `email`, `manual`, or `none`.",
          "maxLength": 5000,
          "type": "string"
        },
        "refund_attributes_status": {
          "description": "Type of refund attribute status, one of `missing`, `requested`, or `available`.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount_charged",
        "amount_received",
        "amount_returned",
        "refund_attributes_method",
        "refund_attributes_status"
      ],
      "title": "SourceReceiverFlow",
      "type": "object",
      "x-expandableFields": []
    },
    "source_redirect_flow": {
      "description": "",
      "properties": {
        "failure_reason": {
          "description": "The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "return_url": {
          "description": "The URL you provide to redirect the customer to after they authenticated their payment.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused).",
          "maxLength": 5000,
          "type": "string"
        },
        "url": {
          "description": "The URL provided to you to redirect a customer to as part of a `redirect` authentication flow.",
          "maxLength": 2048,
          "type": "string"
        }
      },
      "required": [
        "return_url",
        "status",
        "url"
      ],
      "title": "SourceRedirectFlow",
      "type": "object",
      "x-expandableFields": []
    },
    "source_transaction": {
      "description": "Some payment methods have no required amount that a customer must send.\nCustomers can be instructed to send any amount, and it can be made up of\nmultiple transactions. As such, sources can have multiple associated\ntransactions.",
      "properties": {
        "ach_credit_transfer": {
          "$ref": "#/definitions/source_transaction_ach_credit_transfer_data"
        },
        "amount": {
          "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver.",
          "type": "integer"
        },
        "chf_credit_transfer": {
          "$ref": "#/definitions/source_transaction_chf_credit_transfer_data"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "gbp_credit_transfer": {
          "$ref": "#/definitions/source_transaction_gbp_credit_transfer_data"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "source_transaction"
          ],
          "type": "string"
        },
        "paper_check": {
          "$ref": "#/definitions/source_transaction_paper_check_data"
        },
        "sepa_credit_transfer": {
          "$ref": "#/definitions/source_transaction_sepa_credit_transfer_data"
        },
        "source": {
          "description": "The ID of the source this transaction is attached to.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "The status of the transaction, one of `succeeded`, `pending`, or `failed`.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The type of source this transaction is attached to.",
          "enum": [
            "ach_credit_transfer",
            "ach_debit",
            "alipay",
            "bancontact",
            "card",
            "card_present",
            "eps",
            "giropay",
            "ideal",
            "klarna",
            "multibanco",
            "p24",
            "sepa_debit",
            "sofort",
            "three_d_secure",
            "wechat"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "id",
        "livemode",
        "object",
        "source",
        "status",
        "type"
      ],
      "title": "SourceTransaction",
      "type": "object",
      "x-expandableFields": [
        "ach_credit_transfer",
        "chf_credit_transfer",
        "gbp_credit_transfer",
        "paper_check",
        "sepa_credit_transfer"
      ],
      "x-resourceId": "source_transaction"
    },
    "source_transaction_ach_credit_transfer_data": {
      "description": "",
      "properties": {
        "customer_data": {
          "description": "Customer data associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "fingerprint": {
          "description": "Bank account fingerprint associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "Last 4 digits of the account number associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "routing_number": {
          "description": "Routing number associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceTransactionAchCreditTransferData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_transaction_chf_credit_transfer_data": {
      "description": "",
      "properties": {
        "reference": {
          "description": "Reference associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_address_country": {
          "description": "Sender's country address.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_address_line1": {
          "description": "Sender's line 1 address.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_iban": {
          "description": "Sender's bank account IBAN.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_name": {
          "description": "Sender's name.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceTransactionChfCreditTransferData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_transaction_gbp_credit_transfer_data": {
      "description": "",
      "properties": {
        "fingerprint": {
          "description": "Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "funding_method": {
          "description": "The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "Last 4 digits of sender account number associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "reference": {
          "description": "Sender entered arbitrary information about the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_account_number": {
          "description": "Sender account number associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_name": {
          "description": "Sender name associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_sort_code": {
          "description": "Sender sort code associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceTransactionGbpCreditTransferData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_transaction_paper_check_data": {
      "description": "",
      "properties": {
        "available_at": {
          "description": "Time at which the deposited funds will be available for use. Measured in seconds since the Unix epoch.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoices": {
          "description": "Comma-separated list of invoice IDs associated with the paper check.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceTransactionPaperCheckData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_transaction_sepa_credit_transfer_data": {
      "description": "",
      "properties": {
        "reference": {
          "description": "Reference associated with the transfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_iban": {
          "description": "Sender's bank account IBAN.",
          "maxLength": 5000,
          "type": "string"
        },
        "sender_name": {
          "description": "Sender's name.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "title": "SourceTransactionSepaCreditTransferData",
      "type": "object",
      "x-expandableFields": []
    },
    "source_type_ach_credit_transfer": {
      "properties": {
        "account_number": {
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_name": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_type": {
          "type": "string",
          "x-nullable": true
        },
        "refund_routing_number": {
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "type": "string",
          "x-nullable": true
        },
        "swift_code": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_ach_debit": {
      "properties": {
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_acss_debit": {
      "properties": {
        "bank_address_city": {
          "type": "string",
          "x-nullable": true
        },
        "bank_address_line_1": {
          "type": "string",
          "x-nullable": true
        },
        "bank_address_line_2": {
          "type": "string",
          "x-nullable": true
        },
        "bank_address_postal_code": {
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "category": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_alipay": {
      "properties": {
        "data_string": {
          "type": "string",
          "x-nullable": true
        },
        "native_url": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_au_becs_debit": {
      "properties": {
        "bsb_number": {
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_bancontact": {
      "properties": {
        "bank_code": {
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "type": "string",
          "x-nullable": true
        },
        "iban_last4": {
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_card": {
      "properties": {
        "address_line1_check": {
          "type": "string",
          "x-nullable": true
        },
        "address_zip_check": {
          "type": "string",
          "x-nullable": true
        },
        "brand": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "cvc_check": {
          "type": "string",
          "x-nullable": true
        },
        "dynamic_last4": {
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "type": "integer",
          "x-nullable": true
        },
        "exp_year": {
          "type": "integer",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string"
        },
        "funding": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "three_d_secure": {
          "type": "string"
        },
        "tokenization_method": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_card_present": {
      "properties": {
        "application_cryptogram": {
          "type": "string"
        },
        "application_preferred_name": {
          "type": "string"
        },
        "authorization_code": {
          "type": "string",
          "x-nullable": true
        },
        "authorization_response_code": {
          "type": "string"
        },
        "brand": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "cvm_type": {
          "type": "string"
        },
        "data_type": {
          "type": "string",
          "x-nullable": true
        },
        "dedicated_file_name": {
          "type": "string"
        },
        "emv_auth_data": {
          "type": "string"
        },
        "evidence_customer_signature": {
          "type": "string",
          "x-nullable": true
        },
        "evidence_transaction_certificate": {
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "type": "integer",
          "x-nullable": true
        },
        "exp_year": {
          "type": "integer",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string"
        },
        "funding": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "pos_device_id": {
          "type": "string",
          "x-nullable": true
        },
        "pos_entry_mode": {
          "type": "string"
        },
        "read_method": {
          "type": "string",
          "x-nullable": true
        },
        "reader": {
          "type": "string",
          "x-nullable": true
        },
        "terminal_verification_results": {
          "type": "string"
        },
        "transaction_status_information": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "source_type_eps": {
      "properties": {
        "reference": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_giropay": {
      "properties": {
        "bank_code": {
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_ideal": {
      "properties": {
        "bank": {
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "type": "string",
          "x-nullable": true
        },
        "iban_last4": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_klarna": {
      "properties": {
        "background_image_url": {
          "type": "string"
        },
        "client_token": {
          "type": "string",
          "x-nullable": true
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "page_title": {
          "type": "string"
        },
        "pay_later_asset_urls_descriptive": {
          "type": "string"
        },
        "pay_later_asset_urls_standard": {
          "type": "string"
        },
        "pay_later_name": {
          "type": "string"
        },
        "pay_later_redirect_url": {
          "type": "string"
        },
        "pay_now_asset_urls_descriptive": {
          "type": "string"
        },
        "pay_now_asset_urls_standard": {
          "type": "string"
        },
        "pay_now_name": {
          "type": "string"
        },
        "pay_now_redirect_url": {
          "type": "string"
        },
        "pay_over_time_asset_urls_descriptive": {
          "type": "string"
        },
        "pay_over_time_asset_urls_standard": {
          "type": "string"
        },
        "pay_over_time_name": {
          "type": "string"
        },
        "pay_over_time_redirect_url": {
          "type": "string"
        },
        "payment_method_categories": {
          "type": "string"
        },
        "purchase_country": {
          "type": "string"
        },
        "purchase_type": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        },
        "shipping_delay": {
          "type": "integer"
        },
        "shipping_first_name": {
          "type": "string"
        },
        "shipping_last_name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "source_type_multibanco": {
      "properties": {
        "entity": {
          "type": "string",
          "x-nullable": true
        },
        "reference": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_city": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_country": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_line1": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_line2": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_postal_code": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_address_state": {
          "type": "string",
          "x-nullable": true
        },
        "refund_account_holder_name": {
          "type": "string",
          "x-nullable": true
        },
        "refund_iban": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_p24": {
      "properties": {
        "reference": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_sepa_debit": {
      "properties": {
        "bank_code": {
          "type": "string",
          "x-nullable": true
        },
        "branch_code": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "mandate_reference": {
          "type": "string",
          "x-nullable": true
        },
        "mandate_url": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_sofort": {
      "properties": {
        "bank_code": {
          "type": "string",
          "x-nullable": true
        },
        "bank_name": {
          "type": "string",
          "x-nullable": true
        },
        "bic": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "iban_last4": {
          "type": "string",
          "x-nullable": true
        },
        "preferred_language": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_three_d_secure": {
      "properties": {
        "address_line1_check": {
          "type": "string",
          "x-nullable": true
        },
        "address_zip_check": {
          "type": "string",
          "x-nullable": true
        },
        "authenticated": {
          "type": "boolean",
          "x-nullable": true
        },
        "brand": {
          "type": "string",
          "x-nullable": true
        },
        "card": {
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "customer": {
          "type": "string",
          "x-nullable": true
        },
        "cvc_check": {
          "type": "string",
          "x-nullable": true
        },
        "dynamic_last4": {
          "type": "string",
          "x-nullable": true
        },
        "exp_month": {
          "type": "integer",
          "x-nullable": true
        },
        "exp_year": {
          "type": "integer",
          "x-nullable": true
        },
        "fingerprint": {
          "type": "string"
        },
        "funding": {
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "three_d_secure": {
          "type": "string"
        },
        "tokenization_method": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "source_type_wechat": {
      "properties": {
        "prepay_id": {
          "type": "string"
        },
        "qr_code_url": {
          "type": "string",
          "x-nullable": true
        },
        "statement_descriptor": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "subscription": {
      "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating subscriptions](https://stripe.com/docs/billing/subscriptions/creating)",
      "properties": {
        "application": {
          "description": "ID of the Connect Application that created the subscription.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "application_fee_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.",
          "type": "number",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/subscription_automatic_tax"
        },
        "billing_cycle_anchor": {
          "description": "The reference point that aligns future [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle) dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals. The timestamp is in UTC format.",
          "format": "unix-time",
          "type": "integer"
        },
        "billing_cycle_anchor_config": {
          "description": "The fixed values used to calculate the `billing_cycle_anchor`.",
          "x-nullable": true
        },
        "billing_thresholds": {
          "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
          "x-nullable": true
        },
        "cancel_at": {
          "description": "A date in the future at which the subscription will automatically get canceled",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancel_at_period_end": {
          "description": "Whether this subscription will (if `status=active`) or did (if `status=canceled`) cancel at the end of the current billing period.",
          "type": "boolean"
        },
        "canceled_at": {
          "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "cancellation_details": {
          "description": "Details about why this subscription was cancelled",
          "x-nullable": true
        },
        "collection_method": {
          "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
          "enum": [
            "charge_automatically",
            "send_invoice"
          ],
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "current_period_end": {
          "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
          "format": "unix-time",
          "type": "integer"
        },
        "current_period_start": {
          "description": "Start of the current period that the subscription has been invoiced for.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "ID of the customer who owns the subscription.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "days_until_due": {
          "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
          "type": "integer",
          "x-nullable": true
        },
        "default_payment_method": {
          "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "default_source": {
          "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/bank_account"
              },
              {
                "$ref": "#/definitions/card"
              },
              {
                "$ref": "#/definitions/source"
              }
            ]
          },
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "default_tax_rates": {
          "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
          "maxLength": 500,
          "type": "string",
          "x-nullable": true
        },
        "discount": {
          "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.",
          "x-nullable": true
        },
        "discounts": {
          "description": "The discounts applied to the subscription. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                }
              ]
            }
          },
          "type": "array"
        },
        "ended_at": {
          "description": "If the subscription has ended, the date the subscription ended.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice_settings": {
          "$ref": "#/definitions/subscriptions_resource_subscription_invoice_settings"
        },
        "items": {
          "description": "List of subscription items, each with an attached price.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/subscription_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "SubscriptionItemList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "latest_invoice": {
          "description": "The most recent invoice this subscription has generated.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/invoice"
              }
            ]
          },
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "next_pending_invoice_item_invoice": {
          "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "subscription"
          ],
          "type": "string"
        },
        "on_behalf_of": {
          "description": "The account (if any) the charge was made on behalf of for charges associated with this subscription. See the Connect documentation for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "pause_collection": {
          "description": "If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).",
          "x-nullable": true
        },
        "payment_settings": {
          "description": "Payment settings passed on to invoices created by the subscription.",
          "x-nullable": true
        },
        "pending_invoice_item_interval": {
          "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
          "x-nullable": true
        },
        "pending_setup_intent": {
          "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_intent"
              }
            ]
          },
          "x-nullable": true
        },
        "pending_update": {
          "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
          "x-nullable": true
        },
        "schedule": {
          "description": "The schedule attached to the subscription",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription_schedule"
              }
            ]
          },
          "x-nullable": true
        },
        "start_date": {
          "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
          "format": "unix-time",
          "type": "integer"
        },
        "status": {
          "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nA subscription can only enter a `paused` status [when a trial ends without a payment method](/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn't generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription's status unchanged. \n\nIf subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings). \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
          "enum": [
            "active",
            "canceled",
            "incomplete",
            "incomplete_expired",
            "past_due",
            "paused",
            "trialing",
            "unpaid"
          ],
          "type": "string"
        },
        "test_clock": {
          "description": "ID of the test clock this subscription belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        },
        "transfer_data": {
          "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
          "x-nullable": true
        },
        "trial_end": {
          "description": "If the subscription has a trial, the end of that trial.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "trial_settings": {
          "description": "Settings related to subscription trials.",
          "x-nullable": true
        },
        "trial_start": {
          "description": "If the subscription has a trial, the beginning of that trial.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "automatic_tax",
        "billing_cycle_anchor",
        "cancel_at_period_end",
        "collection_method",
        "created",
        "currency",
        "current_period_end",
        "current_period_start",
        "customer",
        "discounts",
        "id",
        "invoice_settings",
        "items",
        "livemode",
        "metadata",
        "object",
        "start_date",
        "status"
      ],
      "title": "Subscription",
      "type": "object",
      "x-expandableFields": [
        "application",
        "automatic_tax",
        "billing_cycle_anchor_config",
        "billing_thresholds",
        "cancellation_details",
        "customer",
        "default_payment_method",
        "default_source",
        "default_tax_rates",
        "discount",
        "discounts",
        "invoice_settings",
        "items",
        "latest_invoice",
        "on_behalf_of",
        "pause_collection",
        "payment_settings",
        "pending_invoice_item_interval",
        "pending_setup_intent",
        "pending_update",
        "schedule",
        "test_clock",
        "transfer_data",
        "trial_settings"
      ],
      "x-resourceId": "subscription"
    },
    "subscription_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether Stripe automatically computes tax on this subscription.",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "SubscriptionAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "subscription_billing_thresholds": {
      "description": "",
      "properties": {
        "amount_gte": {
          "description": "Monetary threshold that triggers the subscription to create an invoice",
          "type": "integer",
          "x-nullable": true
        },
        "reset_billing_cycle_anchor": {
          "description": "Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "SubscriptionBillingThresholds",
      "type": "object",
      "x-expandableFields": []
    },
    "subscription_details_data": {
      "description": "",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) defined as subscription metadata when an invoice is created. Becomes an immutable snapshot of the subscription metadata at the time of invoice finalization.\n *Note: This attribute is populated only for invoices created on or after June 29, 2023.*",
          "type": "object",
          "x-nullable": true
        }
      },
      "title": "SubscriptionDetailsData",
      "type": "object",
      "x-expandableFields": []
    },
    "subscription_item": {
      "description": "Subscription items allow you to create customer subscriptions with more than\none plan, making it easy to represent complex billing relationships.",
      "properties": {
        "billing_thresholds": {
          "description": "Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "type": "integer"
        },
        "discounts": {
          "description": "The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/discount"
                }
              ]
            }
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "subscription_item"
          ],
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/price"
        },
        "quantity": {
          "description": "The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.",
          "type": "integer"
        },
        "subscription": {
          "description": "The `subscription` this `subscription_item` belongs to.",
          "maxLength": 5000,
          "type": "string"
        },
        "tax_rates": {
          "description": "The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "discounts",
        "id",
        "metadata",
        "object",
        "price",
        "subscription"
      ],
      "title": "SubscriptionItem",
      "type": "object",
      "x-expandableFields": [
        "billing_thresholds",
        "discounts",
        "price",
        "tax_rates"
      ],
      "x-resourceId": "subscription_item"
    },
    "subscription_item_billing_thresholds": {
      "description": "",
      "properties": {
        "usage_gte": {
          "description": "Usage threshold that triggers the subscription to create an invoice",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "SubscriptionItemBillingThresholds",
      "type": "object",
      "x-expandableFields": []
    },
    "subscription_payment_method_options_card": {
      "description": "",
      "properties": {
        "mandate_options": {
          "$ref": "#/definitions/invoice_mandate_options_card"
        },
        "network": {
          "description": "Selected network to process this Subscription on. Depends on the available networks of the card attached to the Subscription. Can be only set confirm-time.",
          "enum": [
            "amex",
            "cartes_bancaires",
            "diners",
            "discover",
            "eftpos_au",
            "girocard",
            "interac",
            "jcb",
            "mastercard",
            "unionpay",
            "unknown",
            "visa"
          ],
          "type": "string",
          "x-nullable": true
        },
        "request_three_d_secure": {
          "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
          "enum": [
            "any",
            "automatic",
            "challenge"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "subscription_payment_method_options_card",
      "type": "object",
      "x-expandableFields": [
        "mandate_options"
      ]
    },
    "subscription_pending_invoice_item_interval": {
      "description": "",
      "properties": {
        "interval": {
          "description": "Specifies invoicing frequency. Either `day`, `week`, `month` or `year`.",
          "enum": [
            "day",
            "month",
            "week",
            "year"
          ],
          "type": "string"
        },
        "interval_count": {
          "description": "The number of intervals between invoices. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
          "type": "integer"
        }
      },
      "required": [
        "interval",
        "interval_count"
      ],
      "title": "SubscriptionPendingInvoiceItemInterval",
      "type": "object",
      "x-expandableFields": []
    },
    "subscription_schedule": {
      "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.\n\nRelated guide: [Subscription schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules)",
      "properties": {
        "application": {
          "description": "ID of the Connect Application that created the schedule.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              },
              {
                "$ref": "#/definitions/deleted_application"
              }
            ]
          },
          "x-nullable": true
        },
        "canceled_at": {
          "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "completed_at": {
          "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "current_phase": {
          "description": "Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.",
          "x-nullable": true
        },
        "customer": {
          "description": "ID of the customer who owns the subscription schedule.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              },
              {
                "$ref": "#/definitions/deleted_customer"
              }
            ]
          }
        },
        "default_settings": {
          "$ref": "#/definitions/subscription_schedules_resource_default_settings"
        },
        "end_behavior": {
          "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.",
          "enum": [
            "cancel",
            "none",
            "release",
            "renew"
          ],
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "subscription_schedule"
          ],
          "type": "string"
        },
        "phases": {
          "description": "Configuration for the subscription schedule's phases.",
          "items": {
            "$ref": "#/definitions/subscription_schedule_phase_configuration"
          },
          "type": "array"
        },
        "released_at": {
          "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "released_subscription": {
          "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
          "enum": [
            "active",
            "canceled",
            "completed",
            "not_started",
            "released"
          ],
          "type": "string"
        },
        "subscription": {
          "description": "ID of the subscription managed by the subscription schedule.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/subscription"
              }
            ]
          },
          "x-nullable": true
        },
        "test_clock": {
          "description": "ID of the test clock this subscription schedule belongs to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/test_helpers.test_clock"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "customer",
        "default_settings",
        "end_behavior",
        "id",
        "livemode",
        "object",
        "phases",
        "status"
      ],
      "title": "SubscriptionSchedule",
      "type": "object",
      "x-expandableFields": [
        "application",
        "current_phase",
        "customer",
        "default_settings",
        "phases",
        "subscription",
        "test_clock"
      ],
      "x-resourceId": "subscription_schedule"
    },
    "subscription_schedule_add_invoice_item": {
      "description": "An Add Invoice Item describes the prices and quantities that will be added as pending invoice items when entering a phase.",
      "properties": {
        "discounts": {
          "description": "The stackable discounts that will be applied to the item.",
          "items": {
            "$ref": "#/definitions/discounts_resource_stackable_discount"
          },
          "type": "array"
        },
        "price": {
          "description": "ID of the price used to generate the invoice item.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/price"
              },
              {
                "$ref": "#/definitions/deleted_price"
              }
            ]
          }
        },
        "quantity": {
          "description": "The quantity of the invoice item.",
          "type": "integer",
          "x-nullable": true
        },
        "tax_rates": {
          "description": "The tax rates which apply to the item. When set, the `default_tax_rates` do not apply to this item.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "required": [
        "discounts",
        "price"
      ],
      "title": "SubscriptionScheduleAddInvoiceItem",
      "type": "object",
      "x-expandableFields": [
        "discounts",
        "price",
        "tax_rates"
      ]
    },
    "subscription_schedule_configuration_item": {
      "description": "A phase item describes the price and quantity of a phase.",
      "properties": {
        "billing_thresholds": {
          "description": "Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period",
          "x-nullable": true
        },
        "discounts": {
          "description": "The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.",
          "items": {
            "$ref": "#/definitions/discounts_resource_stackable_discount"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an item. Metadata on this item will update the underlying subscription item's `metadata` when the phase is entered.",
          "type": "object",
          "x-nullable": true
        },
        "price": {
          "description": "ID of the price to which the customer should be subscribed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/price"
              },
              {
                "$ref": "#/definitions/deleted_price"
              }
            ]
          }
        },
        "quantity": {
          "description": "Quantity of the plan to which the customer should be subscribed.",
          "type": "integer"
        },
        "tax_rates": {
          "description": "The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "required": [
        "discounts",
        "price"
      ],
      "title": "SubscriptionScheduleConfigurationItem",
      "type": "object",
      "x-expandableFields": [
        "billing_thresholds",
        "discounts",
        "price",
        "tax_rates"
      ]
    },
    "subscription_schedule_current_phase": {
      "description": "",
      "properties": {
        "end_date": {
          "description": "The end of this phase of the subscription schedule.",
          "format": "unix-time",
          "type": "integer"
        },
        "start_date": {
          "description": "The start of this phase of the subscription schedule.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "end_date",
        "start_date"
      ],
      "title": "SubscriptionScheduleCurrentPhase",
      "type": "object",
      "x-expandableFields": []
    },
    "subscription_schedule_phase_configuration": {
      "description": "A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.",
      "properties": {
        "add_invoice_items": {
          "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.",
          "items": {
            "$ref": "#/definitions/subscription_schedule_add_invoice_item"
          },
          "type": "array"
        },
        "application_fee_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.",
          "type": "number",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/schedules_phase_automatic_tax"
        },
        "billing_cycle_anchor": {
          "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
          "enum": [
            "automatic",
            "phase_start"
          ],
          "type": "string",
          "x-nullable": true
        },
        "billing_thresholds": {
          "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
          "x-nullable": true
        },
        "collection_method": {
          "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
          "enum": [
            "charge_automatically",
            "send_invoice"
          ],
          "type": "string",
          "x-nullable": true
        },
        "coupon": {
          "description": "ID of the coupon to use during this phase of the subscription schedule.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/coupon"
              },
              {
                "$ref": "#/definitions/deleted_coupon"
              }
            ]
          },
          "x-nullable": true
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "default_payment_method": {
          "description": "ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "default_tax_rates": {
          "description": "The default tax rates to apply to the subscription during this phase of the subscription schedule.",
          "items": {
            "$ref": "#/definitions/tax_rate"
          },
          "type": "array",
          "x-nullable": true
        },
        "description": {
          "description": "Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "discounts": {
          "description": "The stackable discounts that will be applied to the subscription on this phase. Subscription item discounts are applied before subscription discounts.",
          "items": {
            "$ref": "#/definitions/discounts_resource_stackable_discount"
          },
          "type": "array"
        },
        "end_date": {
          "description": "The end of this phase of the subscription schedule.",
          "format": "unix-time",
          "type": "integer"
        },
        "invoice_settings": {
          "description": "The invoice settings applicable during this phase.",
          "x-nullable": true
        },
        "items": {
          "description": "Subscription items to configure the subscription to during this phase of the subscription schedule.",
          "items": {
            "$ref": "#/definitions/subscription_schedule_configuration_item"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.",
          "type": "object",
          "x-nullable": true
        },
        "on_behalf_of": {
          "description": "The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "proration_behavior": {
          "description": "If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.",
          "enum": [
            "always_invoice",
            "create_prorations",
            "none"
          ],
          "type": "string"
        },
        "start_date": {
          "description": "The start of this phase of the subscription schedule.",
          "format": "unix-time",
          "type": "integer"
        },
        "transfer_data": {
          "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
          "x-nullable": true
        },
        "trial_end": {
          "description": "When the trial ends within the phase.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "add_invoice_items",
        "currency",
        "discounts",
        "end_date",
        "items",
        "proration_behavior",
        "start_date"
      ],
      "title": "SubscriptionSchedulePhaseConfiguration",
      "type": "object",
      "x-expandableFields": [
        "add_invoice_items",
        "automatic_tax",
        "billing_thresholds",
        "coupon",
        "default_payment_method",
        "default_tax_rates",
        "discounts",
        "invoice_settings",
        "items",
        "on_behalf_of",
        "transfer_data"
      ]
    },
    "subscription_schedules_resource_default_settings": {
      "description": "",
      "properties": {
        "application_fee_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.",
          "type": "number",
          "x-nullable": true
        },
        "automatic_tax": {
          "$ref": "#/definitions/subscription_schedules_resource_default_settings_automatic_tax"
        },
        "billing_cycle_anchor": {
          "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
          "enum": [
            "automatic",
            "phase_start"
          ],
          "type": "string"
        },
        "billing_thresholds": {
          "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
          "x-nullable": true
        },
        "collection_method": {
          "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
          "enum": [
            "charge_automatically",
            "send_invoice"
          ],
          "type": "string",
          "x-nullable": true
        },
        "default_payment_method": {
          "description": "ID of the default payment method for the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_method"
              }
            ]
          },
          "x-nullable": true
        },
        "description": {
          "description": "Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "invoice_settings": {
          "$ref": "#/definitions/invoice_setting_subscription_schedule_setting"
        },
        "on_behalf_of": {
          "description": "The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "transfer_data": {
          "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
          "x-nullable": true
        }
      },
      "required": [
        "billing_cycle_anchor",
        "invoice_settings"
      ],
      "title": "SubscriptionSchedulesResourceDefaultSettings",
      "type": "object",
      "x-expandableFields": [
        "automatic_tax",
        "billing_thresholds",
        "default_payment_method",
        "invoice_settings",
        "on_behalf_of",
        "transfer_data"
      ]
    },
    "subscription_schedules_resource_default_settings_automatic_tax": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Whether Stripe automatically computes tax on invoices created during this phase.",
          "type": "boolean"
        },
        "liability": {
          "description": "The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.",
          "x-nullable": true
        }
      },
      "required": [
        "enabled"
      ],
      "title": "SubscriptionSchedulesResourceDefaultSettingsAutomaticTax",
      "type": "object",
      "x-expandableFields": [
        "liability"
      ]
    },
    "subscription_transfer_data": {
      "description": "",
      "properties": {
        "amount_percent": {
          "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
          "type": "number",
          "x-nullable": true
        },
        "destination": {
          "description": "The account where funds from the payment will be transferred to upon payment success.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "SubscriptionTransferData",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "subscriptions_resource_billing_cycle_anchor_config": {
      "description": "",
      "properties": {
        "day_of_month": {
          "description": "The day of the month of the billing_cycle_anchor.",
          "type": "integer"
        },
        "hour": {
          "description": "The hour of the day of the billing_cycle_anchor.",
          "type": "integer",
          "x-nullable": true
        },
        "minute": {
          "description": "The minute of the hour of the billing_cycle_anchor.",
          "type": "integer",
          "x-nullable": true
        },
        "month": {
          "description": "The month to start full cycle billing periods.",
          "type": "integer",
          "x-nullable": true
        },
        "second": {
          "description": "The second of the minute of the billing_cycle_anchor.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "day_of_month"
      ],
      "title": "SubscriptionsResourceBillingCycleAnchorConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "subscriptions_resource_pause_collection": {
      "description": "The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription\nshould be paused.",
      "properties": {
        "behavior": {
          "description": "The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.",
          "enum": [
            "keep_as_draft",
            "mark_uncollectible",
            "void"
          ],
          "type": "string"
        },
        "resumes_at": {
          "description": "The time after which the subscription will resume collecting payments.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "behavior"
      ],
      "title": "SubscriptionsResourcePauseCollection",
      "type": "object",
      "x-expandableFields": []
    },
    "subscriptions_resource_payment_method_options": {
      "description": "",
      "properties": {
        "acss_debit": {
          "description": "This sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "bancontact": {
          "description": "This sub-hash contains details about the Bancontact payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "card": {
          "description": "This sub-hash contains details about the Card payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "customer_balance": {
          "description": "This sub-hash contains details about the Bank transfer payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "konbini": {
          "description": "This sub-hash contains details about the Konbini payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "sepa_debit": {
          "description": "This sub-hash contains details about the SEPA Direct Debit payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        },
        "us_bank_account": {
          "description": "This sub-hash contains details about the ACH direct debit payment method options to pass to invoices created by the subscription.",
          "x-nullable": true
        }
      },
      "title": "SubscriptionsResourcePaymentMethodOptions",
      "type": "object",
      "x-expandableFields": [
        "acss_debit",
        "bancontact",
        "card",
        "customer_balance",
        "konbini",
        "sepa_debit",
        "us_bank_account"
      ]
    },
    "subscriptions_resource_payment_settings": {
      "description": "",
      "properties": {
        "payment_method_options": {
          "description": "Payment-method-specific configuration to provide to invoices created by the subscription.",
          "x-nullable": true
        },
        "payment_method_types": {
          "description": "The list of payment method types to provide to every invoice created by the subscription. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
          "items": {
            "enum": [
              "ach_credit_transfer",
              "ach_debit",
              "acss_debit",
              "amazon_pay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "boleto",
              "card",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "konbini",
              "link",
              "multibanco",
              "p24",
              "paynow",
              "paypal",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "swish",
              "us_bank_account",
              "wechat_pay"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array",
          "x-nullable": true
        },
        "save_default_payment_method": {
          "description": "Configure whether Stripe updates `subscription.default_payment_method` when payment succeeds. Defaults to `off`.",
          "enum": [
            "off",
            "on_subscription"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "SubscriptionsResourcePaymentSettings",
      "type": "object",
      "x-expandableFields": [
        "payment_method_options"
      ]
    },
    "subscriptions_resource_pending_update": {
      "description": "Pending Updates store the changes pending from a previous update that will be applied\nto the Subscription upon successful payment.",
      "properties": {
        "billing_cycle_anchor": {
          "description": "If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "expires_at": {
          "description": "The point after which the changes reflected by this update will be discarded and no longer applied.",
          "format": "unix-time",
          "type": "integer"
        },
        "subscription_items": {
          "description": "List of subscription items, each with an attached plan, that will be set if the update is applied.",
          "items": {
            "$ref": "#/definitions/subscription_item"
          },
          "type": "array",
          "x-nullable": true
        },
        "trial_end": {
          "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "trial_from_plan": {
          "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "required": [
        "expires_at"
      ],
      "title": "SubscriptionsResourcePendingUpdate",
      "type": "object",
      "x-expandableFields": [
        "subscription_items"
      ]
    },
    "subscriptions_resource_subscription_invoice_settings": {
      "description": "",
      "properties": {
        "account_tax_ids": {
          "description": "The account tax IDs associated with the subscription. Will be set on invoices generated by the subscription.",
          "items": {
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/definitions/tax_id"
                },
                {
                  "$ref": "#/definitions/deleted_tax_id"
                }
              ]
            }
          },
          "type": "array",
          "x-nullable": true
        },
        "issuer": {
          "$ref": "#/definitions/connect_account_reference"
        }
      },
      "required": [
        "issuer"
      ],
      "title": "SubscriptionsResourceSubscriptionInvoiceSettings",
      "type": "object",
      "x-expandableFields": [
        "account_tax_ids",
        "issuer"
      ]
    },
    "subscriptions_trials_resource_end_behavior": {
      "description": "Defines how a subscription behaves when a free trial ends.",
      "properties": {
        "missing_payment_method": {
          "description": "Indicates how the subscription should change when the trial ends if the user did not provide a payment method.",
          "enum": [
            "cancel",
            "create_invoice",
            "pause"
          ],
          "type": "string"
        }
      },
      "required": [
        "missing_payment_method"
      ],
      "title": "SubscriptionsTrialsResourceEndBehavior",
      "type": "object",
      "x-expandableFields": []
    },
    "subscriptions_trials_resource_trial_settings": {
      "description": "Configures how this subscription behaves during the trial period.",
      "properties": {
        "end_behavior": {
          "$ref": "#/definitions/subscriptions_trials_resource_end_behavior"
        }
      },
      "required": [
        "end_behavior"
      ],
      "title": "SubscriptionsTrialsResourceTrialSettings",
      "type": "object",
      "x-expandableFields": [
        "end_behavior"
      ]
    },
    "tax.calculation": {
      "description": "A Tax Calculation allows you to calculate the tax to collect from your customer.\n\nRelated guide: [Calculate tax in your custom payment flow](https://stripe.com/docs/tax/custom)",
      "properties": {
        "amount_total": {
          "description": "Total amount after taxes in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "customer": {
          "description": "The ID of an existing [Customer](https://stripe.com/docs/api/customers/object) used for the resource.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_details": {
          "$ref": "#/definitions/tax_product_resource_customer_details"
        },
        "expires_at": {
          "description": "Timestamp of date at which the tax calculation will expire.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the calculation.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line_items": {
          "description": "The list of items the customer is purchasing.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/tax.calculation_line_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "pattern": "^/v1/tax/calculations/[^/]+/line_items",
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "TaxProductResourceTaxCalculationLineItemList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ],
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.calculation"
          ],
          "type": "string"
        },
        "ship_from_details": {
          "description": "The details of the ship from location, such as the address.",
          "x-nullable": true
        },
        "shipping_cost": {
          "description": "The shipping cost details for the calculation.",
          "x-nullable": true
        },
        "tax_amount_exclusive": {
          "description": "The amount of tax to be collected on top of the line item prices.",
          "type": "integer"
        },
        "tax_amount_inclusive": {
          "description": "The amount of tax already included in the line item prices.",
          "type": "integer"
        },
        "tax_breakdown": {
          "description": "Breakdown of individual tax amounts that add up to the total.",
          "items": {
            "$ref": "#/definitions/tax_product_resource_tax_breakdown"
          },
          "type": "array"
        },
        "tax_date": {
          "description": "Timestamp of date at which the tax rules and rates in effect applies for the calculation.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "amount_total",
        "currency",
        "customer_details",
        "livemode",
        "object",
        "tax_amount_exclusive",
        "tax_amount_inclusive",
        "tax_breakdown",
        "tax_date"
      ],
      "title": "TaxProductResourceTaxCalculation",
      "type": "object",
      "x-expandableFields": [
        "customer_details",
        "line_items",
        "ship_from_details",
        "shipping_cost",
        "tax_breakdown"
      ],
      "x-resourceId": "tax.calculation"
    },
    "tax.calculation_line_item": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The line item amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "The amount of tax calculated for this line item, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.calculation_line_item"
          ],
          "type": "string"
        },
        "product": {
          "description": "The ID of an existing [Product](https://stripe.com/docs/api/products/object).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "The number of units of the item being purchased. For reversals, this is the quantity reversed.",
          "type": "integer"
        },
        "reference": {
          "description": "A custom identifier for this line item.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_behavior": {
          "description": "Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.",
          "enum": [
            "exclusive",
            "inclusive"
          ],
          "type": "string"
        },
        "tax_breakdown": {
          "description": "Detailed account of taxes relevant to this line item.",
          "items": {
            "$ref": "#/definitions/tax_product_resource_line_item_tax_breakdown"
          },
          "type": "array",
          "x-nullable": true
        },
        "tax_code": {
          "description": "The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for this resource.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "amount_tax",
        "id",
        "livemode",
        "object",
        "quantity",
        "tax_behavior",
        "tax_code"
      ],
      "title": "TaxProductResourceTaxCalculationLineItem",
      "type": "object",
      "x-expandableFields": [
        "tax_breakdown"
      ],
      "x-resourceId": "tax.calculation_line_item"
    },
    "tax.registration": {
      "description": "A Tax `Registration` lets us know that your business is registered to collect tax on payments within a region, enabling you to [automatically collect tax](https://stripe.com/docs/tax).\n\nStripe doesn't register on your behalf with the relevant authorities when you create a Tax `Registration` object. For more information on how to register to collect tax, see [our guide](https://stripe.com/docs/tax/registering).\n\nRelated guide: [Using the Registrations API](https://stripe.com/docs/tax/registrations-api)",
      "properties": {
        "active_from": {
          "description": "Time at which the registration becomes active. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "country_options": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "expires_at": {
          "description": "If set, the registration stops being active at this time. If not set, the registration will be active indefinitely. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.registration"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the registration. This field is present for convenience and can be deduced from `active_from` and `expires_at`.",
          "enum": [
            "active",
            "expired",
            "scheduled"
          ],
          "type": "string"
        }
      },
      "required": [
        "active_from",
        "country",
        "country_options",
        "created",
        "id",
        "livemode",
        "object",
        "status"
      ],
      "title": "TaxProductRegistrationsResourceTaxRegistration",
      "type": "object",
      "x-expandableFields": [
        "country_options"
      ],
      "x-resourceId": "tax.registration"
    },
    "tax.settings": {
      "description": "You can use Tax `Settings` to manage configurations used by Stripe Tax calculations.\n\nRelated guide: [Using the Settings API](https://stripe.com/docs/tax/settings-api)",
      "properties": {
        "defaults": {
          "$ref": "#/definitions/tax_product_resource_tax_settings_defaults"
        },
        "head_office": {
          "description": "The place where your business is located.",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.settings"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the Tax `Settings`.",
          "enum": [
            "active",
            "pending"
          ],
          "type": "string"
        },
        "status_details": {
          "$ref": "#/definitions/tax_product_resource_tax_settings_status_details"
        }
      },
      "required": [
        "defaults",
        "livemode",
        "object",
        "status",
        "status_details"
      ],
      "title": "TaxProductResourceTaxSettings",
      "type": "object",
      "x-expandableFields": [
        "defaults",
        "head_office",
        "status_details"
      ],
      "x-resourceId": "tax.settings"
    },
    "tax.transaction": {
      "description": "A Tax Transaction records the tax collected from or refunded to your customer.\n\nRelated guide: [Calculate tax in your custom payment flow](https://stripe.com/docs/tax/custom#tax-transaction)",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "customer": {
          "description": "The ID of an existing [Customer](https://stripe.com/docs/api/customers/object) used for the resource.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "customer_details": {
          "$ref": "#/definitions/tax_product_resource_customer_details"
        },
        "id": {
          "description": "Unique identifier for the transaction.",
          "maxLength": 5000,
          "type": "string"
        },
        "line_items": {
          "description": "The tax collected or refunded, by line item.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/tax.transaction_line_item"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "pattern": "^/v1/tax/transactions/[^/]+/line_items",
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "TaxProductResourceTaxTransactionLineItemList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ],
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.transaction"
          ],
          "type": "string"
        },
        "posted_at": {
          "description": "The Unix timestamp representing when the tax liability is assumed or reduced.",
          "format": "unix-time",
          "type": "integer"
        },
        "reference": {
          "description": "A custom unique identifier, such as 'myOrder_123'.",
          "maxLength": 5000,
          "type": "string"
        },
        "reversal": {
          "description": "If `type=reversal`, contains information about what was reversed.",
          "x-nullable": true
        },
        "ship_from_details": {
          "description": "The details of the ship from location, such as the address.",
          "x-nullable": true
        },
        "shipping_cost": {
          "description": "The shipping cost details for the transaction.",
          "x-nullable": true
        },
        "tax_date": {
          "description": "Timestamp of date at which the tax rules and rates in effect applies for the calculation.",
          "format": "unix-time",
          "type": "integer"
        },
        "type": {
          "description": "If `reversal`, this transaction reverses an earlier transaction.",
          "enum": [
            "reversal",
            "transaction"
          ],
          "type": "string"
        }
      },
      "required": [
        "created",
        "currency",
        "customer_details",
        "id",
        "livemode",
        "object",
        "posted_at",
        "reference",
        "tax_date",
        "type"
      ],
      "title": "TaxProductResourceTaxTransaction",
      "type": "object",
      "x-expandableFields": [
        "customer_details",
        "line_items",
        "reversal",
        "ship_from_details",
        "shipping_cost"
      ],
      "x-resourceId": "tax.transaction"
    },
    "tax.transaction_line_item": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The line item amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "The amount of tax calculated for this line item, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax.transaction_line_item"
          ],
          "type": "string"
        },
        "product": {
          "description": "The ID of an existing [Product](https://stripe.com/docs/api/products/object).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "quantity": {
          "description": "The number of units of the item being purchased. For reversals, this is the quantity reversed.",
          "type": "integer"
        },
        "reference": {
          "description": "A custom identifier for this line item in the transaction.",
          "maxLength": 5000,
          "type": "string"
        },
        "reversal": {
          "description": "If `type=reversal`, contains information about what was reversed.",
          "x-nullable": true
        },
        "tax_behavior": {
          "description": "Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.",
          "enum": [
            "exclusive",
            "inclusive"
          ],
          "type": "string"
        },
        "tax_code": {
          "description": "The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for this resource.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "If `reversal`, this line item reverses an earlier transaction.",
          "enum": [
            "reversal",
            "transaction"
          ],
          "type": "string"
        }
      },
      "required": [
        "amount",
        "amount_tax",
        "id",
        "livemode",
        "object",
        "quantity",
        "reference",
        "tax_behavior",
        "tax_code",
        "type"
      ],
      "title": "TaxProductResourceTaxTransactionLineItem",
      "type": "object",
      "x-expandableFields": [
        "reversal"
      ],
      "x-resourceId": "tax.transaction_line_item"
    },
    "tax_code": {
      "description": "[Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and services for tax purposes.",
      "properties": {
        "description": {
          "description": "A detailed description of which types of products the tax code represents.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "name": {
          "description": "A short name for the tax code.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax_code"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "id",
        "name",
        "object"
      ],
      "title": "TaxProductResourceTaxCode",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "tax_code"
    },
    "tax_deducted_at_source": {
      "description": "",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax_deducted_at_source"
          ],
          "type": "string"
        },
        "period_end": {
          "description": "The end of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
          "format": "unix-time",
          "type": "integer"
        },
        "period_start": {
          "description": "The start of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
          "format": "unix-time",
          "type": "integer"
        },
        "tax_deduction_account_number": {
          "description": "The TAN that was supplied to Stripe when TDS was assessed",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "id",
        "object",
        "period_end",
        "period_start",
        "tax_deduction_account_number"
      ],
      "title": "TaxDeductedAtSource",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_i_ds_owner": {
      "description": "",
      "properties": {
        "account": {
          "description": "The account being referenced when `type` is `account`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        },
        "application": {
          "description": "The Connect Application being referenced when `type` is `application`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/application"
              }
            ]
          }
        },
        "customer": {
          "description": "The customer being referenced when `type` is `customer`.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          }
        },
        "type": {
          "description": "Type of owner referenced.",
          "enum": [
            "account",
            "application",
            "customer",
            "self"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxIDsOwner",
      "type": "object",
      "x-expandableFields": [
        "account",
        "application",
        "customer"
      ]
    },
    "tax_id": {
      "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers) or account.\nCustomer and account tax IDs get displayed on related invoices and credit notes.\n\nRelated guides: [Customer tax identification numbers](https://stripe.com/docs/billing/taxes/tax-ids), [Account tax IDs](https://stripe.com/docs/invoicing/connect#account-tax-ids)",
      "properties": {
        "country": {
          "description": "Two-letter ISO code representing the country of the tax ID.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "customer": {
          "description": "ID of the customer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          },
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax_id"
          ],
          "type": "string"
        },
        "owner": {
          "description": "The account or customer the tax ID belongs to.",
          "x-nullable": true
        },
        "type": {
          "description": "Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
          "enum": [
            "ad_nrt",
            "ae_trn",
            "ar_cuit",
            "au_abn",
            "au_arn",
            "bg_uic",
            "bh_vat",
            "bo_tin",
            "br_cnpj",
            "br_cpf",
            "ca_bn",
            "ca_gst_hst",
            "ca_pst_bc",
            "ca_pst_mb",
            "ca_pst_sk",
            "ca_qst",
            "ch_uid",
            "ch_vat",
            "cl_tin",
            "cn_tin",
            "co_nit",
            "cr_tin",
            "de_stn",
            "do_rcn",
            "ec_ruc",
            "eg_tin",
            "es_cif",
            "eu_oss_vat",
            "eu_vat",
            "gb_vat",
            "ge_vat",
            "hk_br",
            "hr_oib",
            "hu_tin",
            "id_npwp",
            "il_vat",
            "in_gst",
            "is_vat",
            "jp_cn",
            "jp_rn",
            "jp_trn",
            "ke_pin",
            "kr_brn",
            "kz_bin",
            "li_uid",
            "mx_rfc",
            "my_frp",
            "my_itn",
            "my_sst",
            "ng_tin",
            "no_vat",
            "no_voec",
            "nz_gst",
            "om_vat",
            "pe_ruc",
            "ph_tin",
            "ro_tin",
            "rs_pib",
            "ru_inn",
            "ru_kpp",
            "sa_vat",
            "sg_gst",
            "sg_uen",
            "si_tin",
            "sv_nit",
            "th_vat",
            "tr_tin",
            "tw_vat",
            "ua_vat",
            "unknown",
            "us_ein",
            "uy_ruc",
            "ve_rif",
            "vn_tin",
            "za_vat"
          ],
          "type": "string"
        },
        "value": {
          "description": "Value of the tax ID.",
          "maxLength": 5000,
          "type": "string"
        },
        "verification": {
          "description": "Tax ID verification information.",
          "x-nullable": true
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "type",
        "value"
      ],
      "title": "tax_id",
      "type": "object",
      "x-expandableFields": [
        "customer",
        "owner",
        "verification"
      ],
      "x-resourceId": "tax_id"
    },
    "tax_id_verification": {
      "description": "",
      "properties": {
        "status": {
          "description": "Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.",
          "enum": [
            "pending",
            "unavailable",
            "unverified",
            "verified"
          ],
          "type": "string"
        },
        "verified_address": {
          "description": "Verified address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "verified_name": {
          "description": "Verified name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "status"
      ],
      "title": "tax_id_verification",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options": {
      "description": "",
      "properties": {
        "ae": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "at": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "au": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "be": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "bg": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "bh": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "ca": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_canada"
        },
        "ch": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "cl": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "co": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "cy": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "cz": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "de": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "dk": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "ee": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "eg": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "es": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "fi": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "fr": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "gb": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "ge": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "gr": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "hr": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "hu": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "id": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "ie": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "is": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "it": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "jp": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "ke": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "kr": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "kz": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "lt": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "lu": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "lv": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "mt": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "mx": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "my": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "ng": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "nl": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "no": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "nz": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "om": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "pl": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "pt": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "ro": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "sa": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "se": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "sg": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        },
        "si": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "sk": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_europe"
        },
        "th": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "tr": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "us": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_united_states"
        },
        "vn": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_simplified"
        },
        "za": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_default"
        }
      },
      "title": "TaxProductRegistrationsResourceCountryOptions",
      "type": "object",
      "x-expandableFields": [
        "ae",
        "at",
        "au",
        "be",
        "bg",
        "bh",
        "ca",
        "ch",
        "cl",
        "co",
        "cy",
        "cz",
        "de",
        "dk",
        "ee",
        "eg",
        "es",
        "fi",
        "fr",
        "gb",
        "ge",
        "gr",
        "hr",
        "hu",
        "id",
        "ie",
        "is",
        "it",
        "jp",
        "ke",
        "kr",
        "kz",
        "lt",
        "lu",
        "lv",
        "mt",
        "mx",
        "my",
        "ng",
        "nl",
        "no",
        "nz",
        "om",
        "pl",
        "pt",
        "ro",
        "sa",
        "se",
        "sg",
        "si",
        "sk",
        "th",
        "tr",
        "us",
        "vn",
        "za"
      ]
    },
    "tax_product_registrations_resource_country_options_ca_province_standard": {
      "description": "",
      "properties": {
        "province": {
          "description": "Two-letter CA province code ([ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "province"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsCaProvinceStandard",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_canada": {
      "description": "",
      "properties": {
        "province_standard": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_ca_province_standard"
        },
        "type": {
          "description": "Type of registration in Canada.",
          "enum": [
            "province_standard",
            "simplified",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsCanada",
      "type": "object",
      "x-expandableFields": [
        "province_standard"
      ]
    },
    "tax_product_registrations_resource_country_options_default": {
      "description": "",
      "properties": {
        "type": {
          "description": "Type of registration in `country`.",
          "enum": [
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsDefault",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_eu_standard": {
      "description": "",
      "properties": {
        "place_of_supply_scheme": {
          "description": "Place of supply scheme used in an EU standard registration.",
          "enum": [
            "small_seller",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "place_of_supply_scheme"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsEuStandard",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_europe": {
      "description": "",
      "properties": {
        "standard": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_eu_standard"
        },
        "type": {
          "description": "Type of registration in an EU country.",
          "enum": [
            "ioss",
            "oss_non_union",
            "oss_union",
            "standard"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsEurope",
      "type": "object",
      "x-expandableFields": [
        "standard"
      ]
    },
    "tax_product_registrations_resource_country_options_simplified": {
      "description": "",
      "properties": {
        "type": {
          "description": "Type of registration in `country`.",
          "enum": [
            "simplified"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsSimplified",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_united_states": {
      "description": "",
      "properties": {
        "local_amusement_tax": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_us_local_amusement_tax"
        },
        "local_lease_tax": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_us_local_lease_tax"
        },
        "state": {
          "description": "Two-letter US state code ([ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "state_sales_tax": {
          "$ref": "#/definitions/tax_product_registrations_resource_country_options_us_state_sales_tax"
        },
        "type": {
          "description": "Type of registration in the US.",
          "enum": [
            "local_amusement_tax",
            "local_lease_tax",
            "state_communications_tax",
            "state_sales_tax"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "state",
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsUnitedStates",
      "type": "object",
      "x-expandableFields": [
        "local_amusement_tax",
        "local_lease_tax",
        "state_sales_tax"
      ]
    },
    "tax_product_registrations_resource_country_options_us_local_amusement_tax": {
      "description": "",
      "properties": {
        "jurisdiction": {
          "description": "A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "jurisdiction"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsUsLocalAmusementTax",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_us_local_lease_tax": {
      "description": "",
      "properties": {
        "jurisdiction": {
          "description": "A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "jurisdiction"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsUsLocalLeaseTax",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_registrations_resource_country_options_us_state_sales_tax": {
      "description": "",
      "properties": {
        "elections": {
          "description": "Elections for the state sales tax registration.",
          "items": {
            "$ref": "#/definitions/tax_product_registrations_resource_country_options_us_state_sales_tax_election"
          },
          "type": "array"
        }
      },
      "title": "TaxProductRegistrationsResourceCountryOptionsUsStateSalesTax",
      "type": "object",
      "x-expandableFields": [
        "elections"
      ]
    },
    "tax_product_registrations_resource_country_options_us_state_sales_tax_election": {
      "description": "",
      "properties": {
        "jurisdiction": {
          "description": "A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "The type of the election for the state sales tax registration.",
          "enum": [
            "local_use_tax",
            "simplified_sellers_use_tax",
            "single_local_use_tax"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TaxProductRegistrationsResourceCountryOptionsUsStateSalesTaxElection",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_customer_details": {
      "description": "",
      "properties": {
        "address": {
          "description": "The customer's postal address (for example, home or business location).",
          "x-nullable": true
        },
        "address_source": {
          "description": "The type of customer address provided.",
          "enum": [
            "billing",
            "shipping"
          ],
          "type": "string",
          "x-nullable": true
        },
        "ip_address": {
          "description": "The customer's IP address (IPv4 or IPv6).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_ids": {
          "description": "The customer's tax IDs (for example, EU VAT numbers).",
          "items": {
            "$ref": "#/definitions/tax_product_resource_customer_details_resource_tax_id"
          },
          "type": "array"
        },
        "taxability_override": {
          "description": "The taxability override used for taxation.",
          "enum": [
            "customer_exempt",
            "none",
            "reverse_charge"
          ],
          "type": "string"
        }
      },
      "required": [
        "tax_ids",
        "taxability_override"
      ],
      "title": "TaxProductResourceCustomerDetails",
      "type": "object",
      "x-expandableFields": [
        "address",
        "tax_ids"
      ]
    },
    "tax_product_resource_customer_details_resource_tax_id": {
      "description": "",
      "properties": {
        "type": {
          "description": "The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`",
          "enum": [
            "ad_nrt",
            "ae_trn",
            "ar_cuit",
            "au_abn",
            "au_arn",
            "bg_uic",
            "bh_vat",
            "bo_tin",
            "br_cnpj",
            "br_cpf",
            "ca_bn",
            "ca_gst_hst",
            "ca_pst_bc",
            "ca_pst_mb",
            "ca_pst_sk",
            "ca_qst",
            "ch_uid",
            "ch_vat",
            "cl_tin",
            "cn_tin",
            "co_nit",
            "cr_tin",
            "de_stn",
            "do_rcn",
            "ec_ruc",
            "eg_tin",
            "es_cif",
            "eu_oss_vat",
            "eu_vat",
            "gb_vat",
            "ge_vat",
            "hk_br",
            "hr_oib",
            "hu_tin",
            "id_npwp",
            "il_vat",
            "in_gst",
            "is_vat",
            "jp_cn",
            "jp_rn",
            "jp_trn",
            "ke_pin",
            "kr_brn",
            "kz_bin",
            "li_uid",
            "mx_rfc",
            "my_frp",
            "my_itn",
            "my_sst",
            "ng_tin",
            "no_vat",
            "no_voec",
            "nz_gst",
            "om_vat",
            "pe_ruc",
            "ph_tin",
            "ro_tin",
            "rs_pib",
            "ru_inn",
            "ru_kpp",
            "sa_vat",
            "sg_gst",
            "sg_uen",
            "si_tin",
            "sv_nit",
            "th_vat",
            "tr_tin",
            "tw_vat",
            "ua_vat",
            "unknown",
            "us_ein",
            "uy_ruc",
            "ve_rif",
            "vn_tin",
            "za_vat"
          ],
          "type": "string"
        },
        "value": {
          "description": "The value of the tax ID.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "title": "TaxProductResourceCustomerDetailsResourceTaxId",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_jurisdiction": {
      "description": "",
      "properties": {
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "display_name": {
          "description": "A human-readable name for the jurisdiction imposing the tax.",
          "maxLength": 5000,
          "type": "string"
        },
        "level": {
          "description": "Indicates the level of the jurisdiction imposing the tax.",
          "enum": [
            "city",
            "country",
            "county",
            "district",
            "state"
          ],
          "type": "string"
        },
        "state": {
          "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "country",
        "display_name",
        "level"
      ],
      "title": "TaxProductResourceJurisdiction",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_line_item_tax_breakdown": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "jurisdiction": {
          "$ref": "#/definitions/tax_product_resource_jurisdiction"
        },
        "sourcing": {
          "description": "Indicates whether the jurisdiction was determined by the origin (merchant's address) or destination (customer's address).",
          "enum": [
            "destination",
            "origin"
          ],
          "type": "string"
        },
        "tax_rate_details": {
          "description": "Details regarding the rate for this tax. This field will be `null` when the tax is not imposed, for example if the product is exempt from tax.",
          "x-nullable": true
        },
        "taxability_reason": {
          "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
          "enum": [
            "customer_exempt",
            "not_collecting",
            "not_subject_to_tax",
            "not_supported",
            "portion_product_exempt",
            "portion_reduced_rated",
            "portion_standard_rated",
            "product_exempt",
            "product_exempt_holiday",
            "proportionally_rated",
            "reduced_rated",
            "reverse_charge",
            "standard_rated",
            "taxable_basis_reduced",
            "zero_rated"
          ],
          "type": "string"
        },
        "taxable_amount": {
          "description": "The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        }
      },
      "required": [
        "amount",
        "jurisdiction",
        "sourcing",
        "taxability_reason",
        "taxable_amount"
      ],
      "title": "TaxProductResourceLineItemTaxBreakdown",
      "type": "object",
      "x-expandableFields": [
        "jurisdiction",
        "tax_rate_details"
      ]
    },
    "tax_product_resource_line_item_tax_rate_details": {
      "description": "",
      "properties": {
        "display_name": {
          "description": "A localized display name for tax type, intended to be human-readable. For example, \"Local Sales and Use Tax\", \"Value-added tax (VAT)\", or \"Umsatzsteuer (USt.)\".",
          "maxLength": 5000,
          "type": "string"
        },
        "percentage_decimal": {
          "description": "The tax rate percentage as a string. For example, 8.5% is represented as \"8.5\".",
          "maxLength": 5000,
          "type": "string"
        },
        "tax_type": {
          "description": "The tax type, such as `vat` or `sales_tax`.",
          "enum": [
            "amusement_tax",
            "communications_tax",
            "gst",
            "hst",
            "igst",
            "jct",
            "lease_tax",
            "pst",
            "qst",
            "rst",
            "sales_tax",
            "vat"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "display_name",
        "percentage_decimal",
        "tax_type"
      ],
      "title": "TaxProductResourceLineItemTaxRateDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_postal_address": {
      "description": "",
      "properties": {
        "city": {
          "description": "City, district, suburb, town, or village.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "line1": {
          "description": "Address line 1 (e.g., street, PO Box, or company name).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "line2": {
          "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "postal_code": {
          "description": "ZIP or postal code.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "state": {
          "description": "State/province as an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision code, without country prefix. Example: \"NY\" or \"TX\".",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "country"
      ],
      "title": "TaxProductResourcePostalAddress",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_ship_from_details": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/tax_product_resource_postal_address"
        }
      },
      "required": [
        "address"
      ],
      "title": "TaxProductResourceShipFromDetails",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "tax_product_resource_tax_breakdown": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "inclusive": {
          "description": "Specifies whether the tax amount is included in the line item amount.",
          "type": "boolean"
        },
        "tax_rate_details": {
          "$ref": "#/definitions/tax_product_resource_tax_rate_details"
        },
        "taxability_reason": {
          "description": "The reasoning behind this tax, for example, if the product is tax exempt. We might extend the possible values for this field to support new tax rules.",
          "enum": [
            "customer_exempt",
            "not_collecting",
            "not_subject_to_tax",
            "not_supported",
            "portion_product_exempt",
            "portion_reduced_rated",
            "portion_standard_rated",
            "product_exempt",
            "product_exempt_holiday",
            "proportionally_rated",
            "reduced_rated",
            "reverse_charge",
            "standard_rated",
            "taxable_basis_reduced",
            "zero_rated"
          ],
          "type": "string"
        },
        "taxable_amount": {
          "description": "The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        }
      },
      "required": [
        "amount",
        "inclusive",
        "tax_rate_details",
        "taxability_reason",
        "taxable_amount"
      ],
      "title": "TaxProductResourceTaxBreakdown",
      "type": "object",
      "x-expandableFields": [
        "tax_rate_details"
      ]
    },
    "tax_product_resource_tax_calculation_shipping_cost": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).",
          "maxLength": 5000,
          "type": "string"
        },
        "tax_behavior": {
          "description": "Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.",
          "enum": [
            "exclusive",
            "inclusive"
          ],
          "type": "string"
        },
        "tax_breakdown": {
          "description": "Detailed account of taxes relevant to shipping cost.",
          "items": {
            "$ref": "#/definitions/tax_product_resource_line_item_tax_breakdown"
          },
          "type": "array"
        },
        "tax_code": {
          "description": "The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "amount_tax",
        "tax_behavior",
        "tax_code"
      ],
      "title": "TaxProductResourceTaxCalculationShippingCost",
      "type": "object",
      "x-expandableFields": [
        "tax_breakdown"
      ]
    },
    "tax_product_resource_tax_rate_details": {
      "description": "",
      "properties": {
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "percentage_decimal": {
          "description": "The tax rate percentage as a string. For example, 8.5% is represented as `\"8.5\"`.",
          "maxLength": 5000,
          "type": "string"
        },
        "state": {
          "description": "State, county, province, or region.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_type": {
          "description": "The tax type, such as `vat` or `sales_tax`.",
          "enum": [
            "amusement_tax",
            "communications_tax",
            "gst",
            "hst",
            "igst",
            "jct",
            "lease_tax",
            "pst",
            "qst",
            "rst",
            "sales_tax",
            "vat"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "percentage_decimal"
      ],
      "title": "TaxProductResourceTaxRateDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_settings_defaults": {
      "description": "",
      "properties": {
        "tax_behavior": {
          "description": "Default [tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior) used to specify whether the price is considered inclusive of taxes or exclusive of taxes. If the item's price has a tax behavior set, it will take precedence over the default tax behavior.",
          "enum": [
            "exclusive",
            "inclusive",
            "inferred_by_currency"
          ],
          "type": "string",
          "x-nullable": true
        },
        "tax_code": {
          "description": "Default [tax code](https://stripe.com/docs/tax/tax-categories) used to classify your products and prices.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TaxProductResourceTaxSettingsDefaults",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_settings_head_office": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        }
      },
      "required": [
        "address"
      ],
      "title": "TaxProductResourceTaxSettingsHeadOffice",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "tax_product_resource_tax_settings_status_details": {
      "description": "",
      "properties": {
        "active": {
          "$ref": "#/definitions/tax_product_resource_tax_settings_status_details_resource_active"
        },
        "pending": {
          "$ref": "#/definitions/tax_product_resource_tax_settings_status_details_resource_pending"
        }
      },
      "title": "TaxProductResourceTaxSettingsStatusDetails",
      "type": "object",
      "x-expandableFields": [
        "active",
        "pending"
      ]
    },
    "tax_product_resource_tax_settings_status_details_resource_active": {
      "description": "",
      "properties": {},
      "title": "TaxProductResourceTaxSettingsStatusDetailsResourceActive",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_settings_status_details_resource_pending": {
      "description": "",
      "properties": {
        "missing_fields": {
          "description": "The list of missing fields that are required to perform calculations. It includes the entry `head_office` when the status is `pending`. It is recommended to set the optional values even if they aren't listed as required for calculating taxes. Calculations can fail if missing fields aren't explicitly provided on every call.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "title": "TaxProductResourceTaxSettingsStatusDetailsResourcePending",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_transaction_line_item_resource_reversal": {
      "description": "",
      "properties": {
        "original_line_item": {
          "description": "The `id` of the line item to reverse in the original transaction.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "original_line_item"
      ],
      "title": "TaxProductResourceTaxTransactionLineItemResourceReversal",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_transaction_resource_reversal": {
      "description": "",
      "properties": {
        "original_transaction": {
          "description": "The `id` of the reversed `Transaction` object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TaxProductResourceTaxTransactionResourceReversal",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_product_resource_tax_transaction_shipping_cost": {
      "description": "",
      "properties": {
        "amount": {
          "description": "The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.",
          "type": "integer"
        },
        "amount_tax": {
          "description": "The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "shipping_rate": {
          "description": "The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).",
          "maxLength": 5000,
          "type": "string"
        },
        "tax_behavior": {
          "description": "Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.",
          "enum": [
            "exclusive",
            "inclusive"
          ],
          "type": "string"
        },
        "tax_code": {
          "description": "The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "amount",
        "amount_tax",
        "tax_behavior",
        "tax_code"
      ],
      "title": "TaxProductResourceTaxTransactionShippingCost",
      "type": "object",
      "x-expandableFields": []
    },
    "tax_rate": {
      "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)",
      "properties": {
        "active": {
          "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
          "type": "boolean"
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "description": {
          "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "display_name": {
          "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
          "maxLength": 5000,
          "type": "string"
        },
        "effective_percentage": {
          "description": "Actual/effective tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,\nthis percentage reflects the rate actually used to calculate tax based on the product's taxability\nand whether the user is registered to collect taxes in the corresponding jurisdiction.",
          "type": "number",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "inclusive": {
          "description": "This specifies if the tax rate is inclusive or exclusive.",
          "type": "boolean"
        },
        "jurisdiction": {
          "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "jurisdiction_level": {
          "description": "The level of the jurisdiction that imposes this tax rate. Will be `null` for manually defined tax rates.",
          "enum": [
            "city",
            "country",
            "county",
            "district",
            "multiple",
            "state"
          ],
          "type": "string",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "tax_rate"
          ],
          "type": "string"
        },
        "percentage": {
          "description": "Tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true, this percentage includes the statutory tax rate of non-taxable jurisdictions.",
          "type": "number"
        },
        "state": {
          "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "tax_type": {
          "description": "The high-level tax type, such as `vat` or `sales_tax`.",
          "enum": [
            "amusement_tax",
            "communications_tax",
            "gst",
            "hst",
            "igst",
            "jct",
            "lease_tax",
            "pst",
            "qst",
            "rst",
            "sales_tax",
            "vat"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "active",
        "created",
        "display_name",
        "id",
        "inclusive",
        "livemode",
        "object",
        "percentage"
      ],
      "title": "TaxRate",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "tax_rate"
    },
    "terminal.configuration": {
      "description": "A Configurations object represents how features should be configured for terminal readers.",
      "properties": {
        "bbpos_wisepos_e": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_device_type_specific_config"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "is_account_default": {
          "description": "Whether this Configuration is the default for your account",
          "type": "boolean",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "name": {
          "description": "String indicating the name of the Configuration object, set by the user",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.configuration"
          ],
          "type": "string"
        },
        "offline": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_offline_config"
        },
        "reboot_window": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_reboot_window"
        },
        "stripe_s700": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_device_type_specific_config"
        },
        "tipping": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_tipping"
        },
        "verifone_p400": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_device_type_specific_config"
        }
      },
      "required": [
        "id",
        "livemode",
        "object"
      ],
      "title": "TerminalConfigurationConfiguration",
      "type": "object",
      "x-expandableFields": [
        "bbpos_wisepos_e",
        "offline",
        "reboot_window",
        "stripe_s700",
        "tipping",
        "verifone_p400"
      ],
      "x-resourceId": "terminal.configuration"
    },
    "terminal.connection_token": {
      "description": "A Connection Token is used by the Stripe Terminal SDK to connect to a reader.\n\nRelated guide: [Fleet management](https://stripe.com/docs/terminal/fleet/locations)",
      "properties": {
        "location": {
          "description": "The id of the location that this connection token is scoped to. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).",
          "maxLength": 5000,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.connection_token"
          ],
          "type": "string"
        },
        "secret": {
          "description": "Your application should pass this token to the Stripe Terminal SDK.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "object",
        "secret"
      ],
      "title": "TerminalConnectionToken",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "terminal.connection_token"
    },
    "terminal.location": {
      "description": "A Location represents a grouping of readers.\n\nRelated guide: [Fleet management](https://stripe.com/docs/terminal/fleet/locations)",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "configuration_overrides": {
          "description": "The ID of a configuration that will be used to customize all readers in this location.",
          "maxLength": 5000,
          "type": "string"
        },
        "display_name": {
          "description": "The display name of the location.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.location"
          ],
          "type": "string"
        }
      },
      "required": [
        "address",
        "display_name",
        "id",
        "livemode",
        "metadata",
        "object"
      ],
      "title": "TerminalLocationLocation",
      "type": "object",
      "x-expandableFields": [
        "address"
      ],
      "x-resourceId": "terminal.location"
    },
    "terminal.reader": {
      "description": "A Reader represents a physical device for accepting payment details.\n\nRelated guide: [Connecting to a reader](https://stripe.com/docs/terminal/payments/connect-reader)",
      "properties": {
        "action": {
          "description": "The most recent action performed by the reader.",
          "x-nullable": true
        },
        "device_sw_version": {
          "description": "The current software version of the reader.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "device_type": {
          "description": "Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `stripe_s700`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, `simulated_wisepos_e`, or `mobile_phone_reader`.",
          "enum": [
            "bbpos_chipper2x",
            "bbpos_wisepad3",
            "bbpos_wisepos_e",
            "mobile_phone_reader",
            "simulated_wisepos_e",
            "stripe_m2",
            "stripe_s700",
            "verifone_P400"
          ],
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "ip_address": {
          "description": "The local IP address of the reader.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "label": {
          "description": "Custom label given to the reader for easier identification.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "location": {
          "description": "The location identifier of the reader.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/terminal.location"
              }
            ]
          },
          "x-nullable": true
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "terminal.reader"
          ],
          "type": "string"
        },
        "serial_number": {
          "description": "Serial number of the reader.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "The networking status of the reader. We do not recommend using this field in flows that may block taking payments.",
          "enum": [
            "offline",
            "online"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "device_type",
        "id",
        "label",
        "livemode",
        "metadata",
        "object",
        "serial_number"
      ],
      "title": "TerminalReaderReader",
      "type": "object",
      "x-expandableFields": [
        "action",
        "location"
      ],
      "x-resourceId": "terminal.reader"
    },
    "terminal_configuration_configuration_resource_currency_specific_config": {
      "description": "",
      "properties": {
        "fixed_amounts": {
          "description": "Fixed amounts displayed when collecting a tip",
          "items": {
            "type": "integer"
          },
          "type": "array",
          "x-nullable": true
        },
        "percentages": {
          "description": "Percentages displayed when collecting a tip",
          "items": {
            "type": "integer"
          },
          "type": "array",
          "x-nullable": true
        },
        "smart_tip_threshold": {
          "description": "Below this amount, fixed amounts will be displayed; above it, percentages will be displayed",
          "type": "integer"
        }
      },
      "title": "TerminalConfigurationConfigurationResourceCurrencySpecificConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_configuration_configuration_resource_device_type_specific_config": {
      "description": "",
      "properties": {
        "splashscreen": {
          "description": "A File ID representing an image you would like displayed on the reader.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/file"
              }
            ]
          }
        }
      },
      "title": "TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig",
      "type": "object",
      "x-expandableFields": [
        "splashscreen"
      ]
    },
    "terminal_configuration_configuration_resource_offline_config": {
      "description": "",
      "properties": {
        "enabled": {
          "description": "Determines whether to allow transactions to be collected while reader is offline. Defaults to false.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "title": "TerminalConfigurationConfigurationResourceOfflineConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_configuration_configuration_resource_reboot_window": {
      "description": "",
      "properties": {
        "end_hour": {
          "description": "Integer between 0 to 23 that represents the end hour of the reboot time window. The value must be different than the start_hour.",
          "type": "integer"
        },
        "start_hour": {
          "description": "Integer between 0 to 23 that represents the start hour of the reboot time window.",
          "type": "integer"
        }
      },
      "required": [
        "end_hour",
        "start_hour"
      ],
      "title": "TerminalConfigurationConfigurationResourceRebootWindow",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_configuration_configuration_resource_tipping": {
      "description": "",
      "properties": {
        "aud": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "cad": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "chf": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "czk": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "dkk": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "eur": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "gbp": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "hkd": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "myr": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "nok": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "nzd": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "sek": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "sgd": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        },
        "usd": {
          "$ref": "#/definitions/terminal_configuration_configuration_resource_currency_specific_config"
        }
      },
      "title": "TerminalConfigurationConfigurationResourceTipping",
      "type": "object",
      "x-expandableFields": [
        "aud",
        "cad",
        "chf",
        "czk",
        "dkk",
        "eur",
        "gbp",
        "hkd",
        "myr",
        "nok",
        "nzd",
        "sek",
        "sgd",
        "usd"
      ]
    },
    "terminal_reader_reader_resource_cart": {
      "description": "Represents a cart to be displayed on the reader",
      "properties": {
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "line_items": {
          "description": "List of line items in the cart.",
          "items": {
            "$ref": "#/definitions/terminal_reader_reader_resource_line_item"
          },
          "type": "array"
        },
        "tax": {
          "description": "Tax amount for the entire cart. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer",
          "x-nullable": true
        },
        "total": {
          "description": "Total amount for the entire cart, including tax. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        }
      },
      "required": [
        "currency",
        "line_items",
        "total"
      ],
      "title": "TerminalReaderReaderResourceCart",
      "type": "object",
      "x-expandableFields": [
        "line_items"
      ]
    },
    "terminal_reader_reader_resource_line_item": {
      "description": "Represents a line item to be displayed on the reader",
      "properties": {
        "amount": {
          "description": "The amount of the line item. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
          "type": "integer"
        },
        "description": {
          "description": "Description of the line item.",
          "maxLength": 5000,
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the line item.",
          "type": "integer"
        }
      },
      "required": [
        "amount",
        "description",
        "quantity"
      ],
      "title": "TerminalReaderReaderResourceLineItem",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_reader_reader_resource_process_config": {
      "description": "Represents a per-transaction override of a reader configuration",
      "properties": {
        "enable_customer_cancellation": {
          "description": "Enable customer initiated cancellation when processing this payment.",
          "type": "boolean"
        },
        "skip_tipping": {
          "description": "Override showing a tipping selection screen on this transaction.",
          "type": "boolean"
        },
        "tipping": {
          "$ref": "#/definitions/terminal_reader_reader_resource_tipping_config"
        }
      },
      "title": "TerminalReaderReaderResourceProcessConfig",
      "type": "object",
      "x-expandableFields": [
        "tipping"
      ]
    },
    "terminal_reader_reader_resource_process_payment_intent_action": {
      "description": "Represents a reader action to process a payment intent",
      "properties": {
        "payment_intent": {
          "description": "Most recent PaymentIntent processed by the reader.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        },
        "process_config": {
          "$ref": "#/definitions/terminal_reader_reader_resource_process_config"
        }
      },
      "required": [
        "payment_intent"
      ],
      "title": "TerminalReaderReaderResourceProcessPaymentIntentAction",
      "type": "object",
      "x-expandableFields": [
        "payment_intent",
        "process_config"
      ]
    },
    "terminal_reader_reader_resource_process_setup_config": {
      "description": "Represents a per-setup override of a reader configuration",
      "properties": {
        "enable_customer_cancellation": {
          "description": "Enable customer initiated cancellation when processing this SetupIntent.",
          "type": "boolean"
        }
      },
      "title": "TerminalReaderReaderResourceProcessSetupConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_reader_reader_resource_process_setup_intent_action": {
      "description": "Represents a reader action to process a setup intent",
      "properties": {
        "generated_card": {
          "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
          "maxLength": 5000,
          "type": "string"
        },
        "process_config": {
          "$ref": "#/definitions/terminal_reader_reader_resource_process_setup_config"
        },
        "setup_intent": {
          "description": "Most recent SetupIntent processed by the reader.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/setup_intent"
              }
            ]
          }
        }
      },
      "required": [
        "setup_intent"
      ],
      "title": "TerminalReaderReaderResourceProcessSetupIntentAction",
      "type": "object",
      "x-expandableFields": [
        "process_config",
        "setup_intent"
      ]
    },
    "terminal_reader_reader_resource_reader_action": {
      "description": "Represents an action performed by the reader",
      "properties": {
        "failure_code": {
          "description": "Failure code, only set if status is `failed`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "failure_message": {
          "description": "Detailed failure message, only set if status is `failed`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "process_payment_intent": {
          "$ref": "#/definitions/terminal_reader_reader_resource_process_payment_intent_action"
        },
        "process_setup_intent": {
          "$ref": "#/definitions/terminal_reader_reader_resource_process_setup_intent_action"
        },
        "refund_payment": {
          "$ref": "#/definitions/terminal_reader_reader_resource_refund_payment_action"
        },
        "set_reader_display": {
          "$ref": "#/definitions/terminal_reader_reader_resource_set_reader_display_action"
        },
        "status": {
          "description": "Status of the action performed by the reader.",
          "enum": [
            "failed",
            "in_progress",
            "succeeded"
          ],
          "type": "string"
        },
        "type": {
          "description": "Type of action performed by the reader.",
          "enum": [
            "process_payment_intent",
            "process_setup_intent",
            "refund_payment",
            "set_reader_display"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "status",
        "type"
      ],
      "title": "TerminalReaderReaderResourceReaderAction",
      "type": "object",
      "x-expandableFields": [
        "process_payment_intent",
        "process_setup_intent",
        "refund_payment",
        "set_reader_display"
      ]
    },
    "terminal_reader_reader_resource_refund_payment_action": {
      "description": "Represents a reader action to refund a payment",
      "properties": {
        "amount": {
          "description": "The amount being refunded.",
          "type": "integer"
        },
        "charge": {
          "description": "Charge that is being refunded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          }
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "payment_intent": {
          "description": "Payment intent that is being refunded.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/payment_intent"
              }
            ]
          }
        },
        "reason": {
          "description": "The reason for the refund.",
          "enum": [
            "duplicate",
            "fraudulent",
            "requested_by_customer"
          ],
          "type": "string"
        },
        "refund": {
          "description": "Unique identifier for the refund object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/refund"
              }
            ]
          }
        },
        "refund_application_fee": {
          "description": "Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.",
          "type": "boolean"
        },
        "refund_payment_config": {
          "$ref": "#/definitions/terminal_reader_reader_resource_refund_payment_config"
        },
        "reverse_transfer": {
          "description": "Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.",
          "type": "boolean"
        }
      },
      "title": "TerminalReaderReaderResourceRefundPaymentAction",
      "type": "object",
      "x-expandableFields": [
        "charge",
        "payment_intent",
        "refund",
        "refund_payment_config"
      ]
    },
    "terminal_reader_reader_resource_refund_payment_config": {
      "description": "Represents a per-transaction override of a reader configuration",
      "properties": {
        "enable_customer_cancellation": {
          "description": "Enable customer initiated cancellation when refunding this payment.",
          "type": "boolean"
        }
      },
      "title": "TerminalReaderReaderResourceRefundPaymentConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "terminal_reader_reader_resource_set_reader_display_action": {
      "description": "Represents a reader action to set the reader display",
      "properties": {
        "cart": {
          "description": "Cart object to be displayed by the reader.",
          "x-nullable": true
        },
        "type": {
          "description": "Type of information to be displayed by the reader.",
          "enum": [
            "cart"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TerminalReaderReaderResourceSetReaderDisplayAction",
      "type": "object",
      "x-expandableFields": [
        "cart"
      ]
    },
    "terminal_reader_reader_resource_tipping_config": {
      "description": "Represents a per-transaction tipping configuration",
      "properties": {
        "amount_eligible": {
          "description": "Amount used to calculate tip suggestions on tipping selection screen for this transaction. Must be a positive integer in the smallest currency unit (e.g., 100 cents to represent $1.00 or 100 to represent ¥100, a zero-decimal currency).",
          "type": "integer"
        }
      },
      "title": "TerminalReaderReaderResourceTippingConfig",
      "type": "object",
      "x-expandableFields": []
    },
    "test_helpers.test_clock": {
      "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
      "properties": {
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "deletes_after": {
          "description": "Time at which this clock is scheduled to auto delete.",
          "format": "unix-time",
          "type": "integer"
        },
        "frozen_time": {
          "description": "Time at which all objects belonging to this clock are frozen.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "name": {
          "description": "The custom name supplied at creation.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "test_helpers.test_clock"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the Test Clock.",
          "enum": [
            "advancing",
            "internal_failure",
            "ready"
          ],
          "type": "string"
        },
        "status_details": {
          "$ref": "#/definitions/billing_clocks_resource_status_details_status_details"
        }
      },
      "required": [
        "created",
        "deletes_after",
        "frozen_time",
        "id",
        "livemode",
        "object",
        "status",
        "status_details"
      ],
      "title": "TestClock",
      "type": "object",
      "x-expandableFields": [
        "status_details"
      ],
      "x-resourceId": "test_helpers.test_clock"
    },
    "three_d_secure_details": {
      "description": "",
      "properties": {
        "authentication_flow": {
          "description": "For authenticated transactions: how the customer was authenticated by\nthe issuing bank.",
          "enum": [
            "challenge",
            "frictionless"
          ],
          "type": "string",
          "x-nullable": true
        },
        "electronic_commerce_indicator": {
          "description": "The Electronic Commerce Indicator (ECI). A protocol-level field\nindicating what degree of authentication was performed.",
          "enum": [
            "01",
            "02",
            "05",
            "06",
            "07"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "result": {
          "description": "Indicates the outcome of 3D Secure authentication.",
          "enum": [
            "attempt_acknowledged",
            "authenticated",
            "exempted",
            "failed",
            "not_supported",
            "processing_error"
          ],
          "type": "string",
          "x-nullable": true
        },
        "result_reason": {
          "description": "Additional information about why 3D Secure succeeded or failed based\non the `result`.",
          "enum": [
            "abandoned",
            "bypassed",
            "canceled",
            "card_not_enrolled",
            "network_not_supported",
            "protocol_error",
            "rejected"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID\n(dsTransId) for this payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "description": "The version of 3D Secure that was used.",
          "enum": [
            "1.0.2",
            "2.1.0",
            "2.2.0"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "three_d_secure_details",
      "type": "object",
      "x-expandableFields": []
    },
    "three_d_secure_details_charge": {
      "description": "",
      "properties": {
        "authentication_flow": {
          "description": "For authenticated transactions: how the customer was authenticated by\nthe issuing bank.",
          "enum": [
            "challenge",
            "frictionless"
          ],
          "type": "string",
          "x-nullable": true
        },
        "electronic_commerce_indicator": {
          "description": "The Electronic Commerce Indicator (ECI). A protocol-level field\nindicating what degree of authentication was performed.",
          "enum": [
            "01",
            "02",
            "05",
            "06",
            "07"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "exemption_indicator": {
          "description": "The exemption requested via 3DS and accepted by the issuer at authentication time.",
          "enum": [
            "low_risk",
            "none"
          ],
          "type": "string",
          "x-nullable": true
        },
        "exemption_indicator_applied": {
          "description": "Whether Stripe requested the value of `exemption_indicator` in the transaction. This will depend on\nthe outcome of Stripe's internal risk assessment.",
          "type": "boolean"
        },
        "result": {
          "description": "Indicates the outcome of 3D Secure authentication.",
          "enum": [
            "attempt_acknowledged",
            "authenticated",
            "exempted",
            "failed",
            "not_supported",
            "processing_error"
          ],
          "type": "string",
          "x-nullable": true
        },
        "result_reason": {
          "description": "Additional information about why 3D Secure succeeded or failed based\non the `result`.",
          "enum": [
            "abandoned",
            "bypassed",
            "canceled",
            "card_not_enrolled",
            "network_not_supported",
            "protocol_error",
            "rejected"
          ],
          "type": "string",
          "x-nullable": true
        },
        "transaction_id": {
          "description": "The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID\n(dsTransId) for this payment.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "description": "The version of 3D Secure that was used.",
          "enum": [
            "1.0.2",
            "2.1.0",
            "2.2.0"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        }
      },
      "title": "three_d_secure_details_charge",
      "type": "object",
      "x-expandableFields": []
    },
    "three_d_secure_usage": {
      "description": "",
      "properties": {
        "supported": {
          "description": "Whether 3D Secure is supported on this card.",
          "type": "boolean"
        }
      },
      "required": [
        "supported"
      ],
      "title": "three_d_secure_usage",
      "type": "object",
      "x-expandableFields": []
    },
    "thresholds_resource_usage_alert_filter": {
      "description": "",
      "properties": {
        "customer": {
          "description": "Limit the scope of the alert to this customer ID",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/customer"
              }
            ]
          },
          "x-nullable": true
        },
        "type": {
          "enum": [
            "customer"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ThresholdsResourceUsageAlertFilter",
      "type": "object",
      "x-expandableFields": [
        "customer"
      ]
    },
    "thresholds_resource_usage_threshold_config": {
      "description": "The usage threshold alert configuration enables setting up alerts for when a certain usage threshold on a specific meter is crossed.",
      "properties": {
        "filters": {
          "description": "The filters allow limiting the scope of this usage alert. You can only specify up to one filter at this time.",
          "items": {
            "$ref": "#/definitions/thresholds_resource_usage_alert_filter"
          },
          "type": "array",
          "x-nullable": true
        },
        "gte": {
          "description": "The value at which this alert will trigger.",
          "type": "integer"
        },
        "meter": {
          "description": "The [Billing Meter](/api/billing/meter) ID whose usage is monitored.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/billing.meter"
              }
            ]
          }
        },
        "recurrence": {
          "description": "Defines how the alert will behave.",
          "enum": [
            "one_time"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "gte",
        "meter",
        "recurrence"
      ],
      "title": "ThresholdsResourceUsageThresholdConfig",
      "type": "object",
      "x-expandableFields": [
        "filters",
        "meter"
      ]
    },
    "token": {
      "description": "Tokenization is the process Stripe uses to collect sensitive card or bank\naccount details, or personally identifiable information (PII), directly from\nyour customers in a secure manner. A token representing this information is\nreturned to your server to use. Use our\n[recommended payments integrations](https://stripe.com/docs/payments) to perform this process\non the client-side. This guarantees that no sensitive card data touches your server,\nand allows your integration to operate in a PCI-compliant way.\n\nIf you can't use client-side tokenization, you can also create tokens using\nthe API with either your publishable or secret API key. If\nyour integration uses this method, you're responsible for any PCI compliance\nthat it might require, and you must keep your secret API key safe. Unlike with\nclient-side tokenization, your customer's information isn't sent directly to\nStripe, so we can't determine how it's handled or stored.\n\nYou can't store or use tokens more than once. To store card or bank account\ninformation for later use, create [Customer](https://stripe.com/docs/api#customers)\nobjects or [External accounts](/api#external_accounts).\n[Radar](https://stripe.com/docs/radar), our integrated solution for automatic fraud protection,\nperforms best with integrations that use client-side tokenization.",
      "properties": {
        "bank_account": {
          "$ref": "#/definitions/bank_account"
        },
        "card": {
          "$ref": "#/definitions/card"
        },
        "client_ip": {
          "description": "IP address of the client that generates the token.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "token"
          ],
          "type": "string"
        },
        "type": {
          "description": "Type of the token: `account`, `bank_account`, `card`, or `pii`.",
          "maxLength": 5000,
          "type": "string"
        },
        "used": {
          "description": "Determines if you have already used this token (you can only use tokens once).",
          "type": "boolean"
        }
      },
      "required": [
        "created",
        "id",
        "livemode",
        "object",
        "type",
        "used"
      ],
      "title": "Token",
      "type": "object",
      "x-expandableFields": [
        "bank_account",
        "card"
      ],
      "x-resourceId": "token"
    },
    "token_card_networks": {
      "description": "",
      "properties": {
        "preferred": {
          "description": "The preferred network for co-branded cards. Can be `cartes_bancaires`, `mastercard`, `visa` or `invalid_preference` if requested network is not valid for the card.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "token_card_networks",
      "type": "object",
      "x-expandableFields": []
    },
    "topup": {
      "description": "To top up your Stripe balance, you create a top-up object. You can retrieve\nindividual top-ups, as well as list all top-ups. Top-ups are identified by a\nunique, random ID.\n\nRelated guide: [Topping up your platform account](https://stripe.com/docs/connect/top-ups)",
      "properties": {
        "amount": {
          "description": "Amount transferred.",
          "type": "integer"
        },
        "balance_transaction": {
          "description": "ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "maxLength": 5000,
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "expected_availability_date": {
          "description": "Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.",
          "type": "integer",
          "x-nullable": true
        },
        "failure_code": {
          "description": "Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "failure_message": {
          "description": "Message to user further explaining reason for top-up failure if available.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "topup"
          ],
          "type": "string"
        },
        "source": {
          "description": "The source field is deprecated. It might not always be present in the API response.",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.",
          "enum": [
            "canceled",
            "failed",
            "pending",
            "reversed",
            "succeeded"
          ],
          "type": "string"
        },
        "transfer_group": {
          "description": "A string that identifies this top-up as part of a group.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "id",
        "livemode",
        "metadata",
        "object",
        "status"
      ],
      "title": "Topup",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "source"
      ],
      "x-resourceId": "topup"
    },
    "transfer": {
      "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating separate charges and transfers](https://stripe.com/docs/connect/separate-charges-and-transfers)",
      "properties": {
        "amount": {
          "description": "Amount in cents (or local equivalent) to be transferred.",
          "type": "integer"
        },
        "amount_reversed": {
          "description": "Amount in cents (or local equivalent) reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
          "type": "integer"
        },
        "balance_transaction": {
          "description": "Balance transaction that describes the impact of this transfer on your account balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time that this record of the transfer was first created.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination": {
          "description": "ID of the Stripe account the transfer was sent to.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          },
          "x-nullable": true
        },
        "destination_payment": {
          "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          }
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "transfer"
          ],
          "type": "string"
        },
        "reversals": {
          "description": "A list of reversals that have been applied to the transfer.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/transfer_reversal"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "TransferReversalList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ]
        },
        "reversed": {
          "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
          "type": "boolean"
        },
        "source_transaction": {
          "description": "ID of the charge that was used to fund the transfer. If null, the transfer was funded from the available balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/charge"
              }
            ]
          },
          "x-nullable": true
        },
        "source_type": {
          "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
          "maxLength": 5000,
          "type": "string"
        },
        "transfer_group": {
          "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "amount_reversed",
        "created",
        "currency",
        "id",
        "livemode",
        "metadata",
        "object",
        "reversals",
        "reversed"
      ],
      "title": "Transfer",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "destination",
        "destination_payment",
        "reversals",
        "source_transaction"
      ],
      "x-resourceId": "transfer"
    },
    "transfer_data": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
          "type": "integer"
        },
        "destination": {
          "description": "The account (if any) that the payment is attributed to for tax\nreporting, and where funds from the payment are transferred to after\npayment success.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/account"
              }
            ]
          }
        }
      },
      "required": [
        "destination"
      ],
      "title": "transfer_data",
      "type": "object",
      "x-expandableFields": [
        "destination"
      ]
    },
    "transfer_reversal": {
      "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reverse transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#reverse-transfers)",
      "properties": {
        "amount": {
          "description": "Amount, in cents (or local equivalent).",
          "type": "integer"
        },
        "balance_transaction": {
          "description": "Balance transaction that describes the impact on your account balance.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/balance_transaction"
              }
            ]
          },
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "destination_payment_refund": {
          "description": "Linked payment refund for the transfer reversal.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/refund"
              }
            ]
          },
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "transfer_reversal"
          ],
          "type": "string"
        },
        "source_refund": {
          "description": "ID of the refund responsible for the transfer reversal.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/refund"
              }
            ]
          },
          "x-nullable": true
        },
        "transfer": {
          "description": "ID of the transfer that was reversed.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/transfer"
              }
            ]
          }
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "id",
        "object",
        "transfer"
      ],
      "title": "TransferReversal",
      "type": "object",
      "x-expandableFields": [
        "balance_transaction",
        "destination_payment_refund",
        "source_refund",
        "transfer"
      ],
      "x-resourceId": "transfer_reversal"
    },
    "transfer_schedule": {
      "description": "",
      "properties": {
        "delay_days": {
          "description": "The number of days charges for the account will be held before being paid out.",
          "type": "integer"
        },
        "interval": {
          "description": "How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.",
          "maxLength": 5000,
          "type": "string"
        },
        "monthly_anchor": {
          "description": "The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
          "type": "integer"
        },
        "weekly_anchor": {
          "description": "The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "delay_days",
        "interval"
      ],
      "title": "TransferSchedule",
      "type": "object",
      "x-expandableFields": []
    },
    "transform_quantity": {
      "description": "",
      "properties": {
        "divide_by": {
          "description": "Divide usage by this number.",
          "type": "integer"
        },
        "round": {
          "description": "After division, either round the result `up` or `down`.",
          "enum": [
            "down",
            "up"
          ],
          "type": "string"
        }
      },
      "required": [
        "divide_by",
        "round"
      ],
      "title": "TransformQuantity",
      "type": "object",
      "x-expandableFields": []
    },
    "transform_usage": {
      "description": "",
      "properties": {
        "divide_by": {
          "description": "Divide usage by this number.",
          "type": "integer"
        },
        "round": {
          "description": "After division, either round the result `up` or `down`.",
          "enum": [
            "down",
            "up"
          ],
          "type": "string"
        }
      },
      "required": [
        "divide_by",
        "round"
      ],
      "title": "TransformUsage",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury.credit_reversal": {
      "description": "You can reverse some [ReceivedCredits](https://stripe.com/docs/api#received_credits) depending on their network and source flow. Reversing a ReceivedCredit leads to the creation of a new object known as a CreditReversal.",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "financial_account": {
          "description": "The FinancialAccount to reverse funds from.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "network": {
          "description": "The rails used to reverse the funds.",
          "enum": [
            "ach",
            "stripe"
          ],
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.credit_reversal"
          ],
          "type": "string"
        },
        "received_credit": {
          "description": "The ReceivedCredit being reversed.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Status of the CreditReversal",
          "enum": [
            "canceled",
            "posted",
            "processing"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_received_credits_resource_status_transitions"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "financial_account",
        "id",
        "livemode",
        "metadata",
        "network",
        "object",
        "received_credit",
        "status",
        "status_transitions"
      ],
      "title": "TreasuryReceivedCreditsResourceCreditReversal",
      "type": "object",
      "x-expandableFields": [
        "status_transitions",
        "transaction"
      ],
      "x-resourceId": "treasury.credit_reversal"
    },
    "treasury.debit_reversal": {
      "description": "You can reverse some [ReceivedDebits](https://stripe.com/docs/api#received_debits) depending on their network and source flow. Reversing a ReceivedDebit leads to the creation of a new object known as a DebitReversal.",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "financial_account": {
          "description": "The FinancialAccount to reverse funds from.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "linked_flows": {
          "description": "Other flows linked to a DebitReversal.",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "network": {
          "description": "The rails used to reverse the funds.",
          "enum": [
            "ach",
            "card"
          ],
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.debit_reversal"
          ],
          "type": "string"
        },
        "received_debit": {
          "description": "The ReceivedDebit being reversed.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Status of the DebitReversal",
          "enum": [
            "failed",
            "processing",
            "succeeded"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_received_debits_resource_status_transitions"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "id",
        "livemode",
        "metadata",
        "network",
        "object",
        "received_debit",
        "status",
        "status_transitions"
      ],
      "title": "TreasuryReceivedDebitsResourceDebitReversal",
      "type": "object",
      "x-expandableFields": [
        "linked_flows",
        "status_transitions",
        "transaction"
      ],
      "x-resourceId": "treasury.debit_reversal"
    },
    "treasury.financial_account": {
      "description": "Stripe Treasury provides users with a container for money called a FinancialAccount that is separate from their Payments balance.\nFinancialAccounts serve as the source and destination of Treasury’s money movement APIs.",
      "properties": {
        "active_features": {
          "description": "The array of paths to active Features in the Features hash.",
          "items": {
            "enum": [
              "card_issuing",
              "deposit_insurance",
              "financial_addresses.aba",
              "financial_addresses.aba.forwarding",
              "inbound_transfers.ach",
              "intra_stripe_flows",
              "outbound_payments.ach",
              "outbound_payments.us_domestic_wire",
              "outbound_transfers.ach",
              "outbound_transfers.us_domestic_wire",
              "remote_deposit_capture"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "balance": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_balance"
        },
        "country": {
          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "maxLength": 5000,
          "type": "string"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "features": {
          "$ref": "#/definitions/treasury.financial_account_features"
        },
        "financial_addresses": {
          "description": "The set of credentials that resolve to a FinancialAccount.",
          "items": {
            "$ref": "#/definitions/treasury_financial_accounts_resource_financial_address"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object",
          "x-nullable": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.financial_account"
          ],
          "type": "string"
        },
        "pending_features": {
          "description": "The array of paths to pending Features in the Features hash.",
          "items": {
            "enum": [
              "card_issuing",
              "deposit_insurance",
              "financial_addresses.aba",
              "financial_addresses.aba.forwarding",
              "inbound_transfers.ach",
              "intra_stripe_flows",
              "outbound_payments.ach",
              "outbound_payments.us_domestic_wire",
              "outbound_transfers.ach",
              "outbound_transfers.us_domestic_wire",
              "remote_deposit_capture"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "platform_restrictions": {
          "description": "The set of functionalities that the platform can restrict on the FinancialAccount.",
          "x-nullable": true
        },
        "restricted_features": {
          "description": "The array of paths to restricted Features in the Features hash.",
          "items": {
            "enum": [
              "card_issuing",
              "deposit_insurance",
              "financial_addresses.aba",
              "financial_addresses.aba.forwarding",
              "inbound_transfers.ach",
              "intra_stripe_flows",
              "outbound_payments.ach",
              "outbound_payments.us_domestic_wire",
              "outbound_transfers.ach",
              "outbound_transfers.us_domestic_wire",
              "remote_deposit_capture"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "status": {
          "description": "The enum specifying what state the account is in.",
          "enum": [
            "closed",
            "open"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "status_details": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_status_details"
        },
        "supported_currencies": {
          "description": "The currencies the FinancialAccount can hold a balance in. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "balance",
        "country",
        "created",
        "financial_addresses",
        "id",
        "livemode",
        "object",
        "status",
        "status_details",
        "supported_currencies"
      ],
      "title": "TreasuryFinancialAccountsResourceFinancialAccount",
      "type": "object",
      "x-expandableFields": [
        "balance",
        "features",
        "financial_addresses",
        "platform_restrictions",
        "status_details"
      ],
      "x-resourceId": "treasury.financial_account"
    },
    "treasury.financial_account_features": {
      "description": "Encodes whether a FinancialAccount has access to a particular Feature, with a `status` enum and associated `status_details`.\nStripe or the platform can control Features via the requested field.",
      "properties": {
        "card_issuing": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_toggle_settings"
        },
        "deposit_insurance": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_toggle_settings"
        },
        "financial_addresses": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_financial_addresses_features"
        },
        "inbound_transfers": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_inbound_transfers"
        },
        "intra_stripe_flows": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_toggle_settings"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.financial_account_features"
          ],
          "type": "string"
        },
        "outbound_payments": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_outbound_payments"
        },
        "outbound_transfers": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_outbound_transfers"
        }
      },
      "required": [
        "object"
      ],
      "title": "TreasuryFinancialAccountsResourceFinancialAccountFeatures",
      "type": "object",
      "x-expandableFields": [
        "card_issuing",
        "deposit_insurance",
        "financial_addresses",
        "inbound_transfers",
        "intra_stripe_flows",
        "outbound_payments",
        "outbound_transfers"
      ],
      "x-resourceId": "treasury.financial_account_features"
    },
    "treasury.inbound_transfer": {
      "description": "Use [InboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers) to add funds to your [FinancialAccount](https://stripe.com/docs/api#financial_accounts) via a PaymentMethod that is owned by you. The funds will be transferred via an ACH debit.\n\nRelated guide: [Moving money with Treasury using InboundTransfer objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "cancelable": {
          "description": "Returns `true` if the InboundTransfer is able to be canceled.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "failure_details": {
          "description": "Details about this InboundTransfer's failure. Only set when status is `failed`.",
          "x-nullable": true
        },
        "financial_account": {
          "description": "The FinancialAccount that received the funds.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "linked_flows": {
          "$ref": "#/definitions/treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.inbound_transfer"
          ],
          "type": "string"
        },
        "origin_payment_method": {
          "description": "The origin payment method to be debited for an InboundTransfer.",
          "maxLength": 5000,
          "type": "string"
        },
        "origin_payment_method_details": {
          "description": "Details about the PaymentMethod for an InboundTransfer.",
          "x-nullable": true
        },
        "returned": {
          "description": "Returns `true` if the funds for an InboundTransfer were returned after the InboundTransfer went to the `succeeded` state.",
          "type": "boolean",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "Statement descriptor shown when funds are debited from the source. Not all payment networks support `statement_descriptor`.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Status of the InboundTransfer: `processing`, `succeeded`, `failed`, and `canceled`. An InboundTransfer is `processing` if it is created and pending. The status changes to `succeeded` once the funds have been \"confirmed\" and a `transaction` is created and posted. The status changes to `failed` if the transfer fails.",
          "enum": [
            "canceled",
            "failed",
            "processing",
            "succeeded"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "cancelable",
        "created",
        "currency",
        "financial_account",
        "id",
        "linked_flows",
        "livemode",
        "metadata",
        "object",
        "origin_payment_method",
        "statement_descriptor",
        "status",
        "status_transitions"
      ],
      "title": "TreasuryInboundTransfersResourceInboundTransfer",
      "type": "object",
      "x-expandableFields": [
        "failure_details",
        "linked_flows",
        "origin_payment_method_details",
        "status_transitions",
        "transaction"
      ],
      "x-resourceId": "treasury.inbound_transfer"
    },
    "treasury.outbound_payment": {
      "description": "Use [OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments) to send funds to another party's external bank account or [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To send money to an account belonging to the same user, use an [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).\n\nSimulate OutboundPayment state changes with the `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only be called on test mode objects.\n\nRelated guide: [Moving money with Treasury using OutboundPayment objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "cancelable": {
          "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "customer": {
          "description": "ID of the [customer](https://stripe.com/docs/api/customers) to whom an OutboundPayment is sent.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination_payment_method": {
          "description": "The PaymentMethod via which an OutboundPayment is sent. This field can be empty if the OutboundPayment was created using `destination_payment_method_data`.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination_payment_method_details": {
          "description": "Details about the PaymentMethod for an OutboundPayment.",
          "x-nullable": true
        },
        "end_user_details": {
          "description": "Details about the end user.",
          "x-nullable": true
        },
        "expected_arrival_date": {
          "description": "The date when funds are expected to arrive in the destination account.",
          "format": "unix-time",
          "type": "integer"
        },
        "financial_account": {
          "description": "The FinancialAccount that funds were pulled from.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.outbound_payment"
          ],
          "type": "string"
        },
        "returned_details": {
          "description": "Details about a returned OutboundPayment. Only set when the status is `returned`.",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "The description that appears on the receiving end for an OutboundPayment (for example, bank statement for external bank transfer).",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Current status of the OutboundPayment: `processing`, `failed`, `posted`, `returned`, `canceled`. An OutboundPayment is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundPayment has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundPayment fails to arrive at its destination, its status will change to `returned`.",
          "enum": [
            "canceled",
            "failed",
            "posted",
            "processing",
            "returned"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_outbound_payments_resource_outbound_payment_resource_status_transitions"
        },
        "tracking_details": {
          "description": "Details about network-specific tracking information if available.",
          "x-nullable": true
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          }
        }
      },
      "required": [
        "amount",
        "cancelable",
        "created",
        "currency",
        "expected_arrival_date",
        "financial_account",
        "id",
        "livemode",
        "metadata",
        "object",
        "statement_descriptor",
        "status",
        "status_transitions",
        "transaction"
      ],
      "title": "TreasuryOutboundPaymentsResourceOutboundPayment",
      "type": "object",
      "x-expandableFields": [
        "destination_payment_method_details",
        "end_user_details",
        "returned_details",
        "status_transitions",
        "tracking_details",
        "transaction"
      ],
      "x-resourceId": "treasury.outbound_payment"
    },
    "treasury.outbound_transfer": {
      "description": "Use [OutboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers) to transfer funds from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) to a PaymentMethod belonging to the same entity. To send funds to a different party, use [OutboundPayments](https://stripe.com/docs/api#outbound_payments) instead. You can send funds over ACH rails or through a domestic wire transfer to a user's own external bank account.\n\nSimulate OutboundTransfer state changes with the `/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods can only be called on test mode objects.\n\nRelated guide: [Moving money with Treasury using OutboundTransfer objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "cancelable": {
          "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
          "type": "boolean"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination_payment_method": {
          "description": "The PaymentMethod used as the payment instrument for an OutboundTransfer.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "destination_payment_method_details": {
          "$ref": "#/definitions/outbound_transfers_payment_method_details"
        },
        "expected_arrival_date": {
          "description": "The date when funds are expected to arrive in the destination account.",
          "format": "unix-time",
          "type": "integer"
        },
        "financial_account": {
          "description": "The FinancialAccount that funds were pulled from.",
          "maxLength": 5000,
          "type": "string"
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.outbound_transfer"
          ],
          "type": "string"
        },
        "returned_details": {
          "description": "Details about a returned OutboundTransfer. Only set when the status is `returned`.",
          "x-nullable": true
        },
        "statement_descriptor": {
          "description": "Information about the OutboundTransfer to be sent to the recipient account.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "Current status of the OutboundTransfer: `processing`, `failed`, `canceled`, `posted`, `returned`. An OutboundTransfer is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundTransfer has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundTransfer fails to arrive at its destination, its status will change to `returned`.",
          "enum": [
            "canceled",
            "failed",
            "posted",
            "processing",
            "returned"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_outbound_transfers_resource_status_transitions"
        },
        "tracking_details": {
          "description": "Details about network-specific tracking information if available.",
          "x-nullable": true
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          }
        }
      },
      "required": [
        "amount",
        "cancelable",
        "created",
        "currency",
        "destination_payment_method_details",
        "expected_arrival_date",
        "financial_account",
        "id",
        "livemode",
        "metadata",
        "object",
        "statement_descriptor",
        "status",
        "status_transitions",
        "transaction"
      ],
      "title": "TreasuryOutboundTransfersResourceOutboundTransfer",
      "type": "object",
      "x-expandableFields": [
        "destination_payment_method_details",
        "returned_details",
        "status_transitions",
        "tracking_details",
        "transaction"
      ],
      "x-resourceId": "treasury.outbound_transfer"
    },
    "treasury.received_credit": {
      "description": "ReceivedCredits represent funds sent to a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) (for example, via ACH or wire). These money movements are not initiated from the FinancialAccount.",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string"
        },
        "failure_code": {
          "description": "Reason for the failure. A ReceivedCredit might fail because the receiving FinancialAccount is closed or frozen.",
          "enum": [
            "account_closed",
            "account_frozen",
            "international_transaction",
            "other"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "financial_account": {
          "description": "The FinancialAccount that received the funds.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "initiating_payment_method_details": {
          "$ref": "#/definitions/treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
        },
        "linked_flows": {
          "$ref": "#/definitions/treasury_received_credits_resource_linked_flows"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "network": {
          "description": "The rails used to send the funds.",
          "enum": [
            "ach",
            "card",
            "stripe",
            "us_domestic_wire"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.received_credit"
          ],
          "type": "string"
        },
        "reversal_details": {
          "description": "Details describing when a ReceivedCredit may be reversed.",
          "x-nullable": true
        },
        "status": {
          "description": "Status of the ReceivedCredit. ReceivedCredits are created either `succeeded` (approved) or `failed` (declined). If a ReceivedCredit is declined, the failure reason can be found in the `failure_code` field.",
          "enum": [
            "failed",
            "succeeded"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "description",
        "id",
        "initiating_payment_method_details",
        "linked_flows",
        "livemode",
        "network",
        "object",
        "status"
      ],
      "title": "TreasuryReceivedCreditsResourceReceivedCredit",
      "type": "object",
      "x-expandableFields": [
        "initiating_payment_method_details",
        "linked_flows",
        "reversal_details",
        "transaction"
      ],
      "x-resourceId": "treasury.received_credit"
    },
    "treasury.received_debit": {
      "description": "ReceivedDebits represent funds pulled from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts). These are not initiated from the FinancialAccount.",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string"
        },
        "failure_code": {
          "description": "Reason for the failure. A ReceivedDebit might fail because the FinancialAccount doesn't have sufficient funds, is closed, or is frozen.",
          "enum": [
            "account_closed",
            "account_frozen",
            "insufficient_funds",
            "international_transaction",
            "other"
          ],
          "type": "string",
          "x-nullable": true
        },
        "financial_account": {
          "description": "The FinancialAccount that funds were pulled from.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "hosted_regulatory_receipt_url": {
          "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "initiating_payment_method_details": {
          "$ref": "#/definitions/treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
        },
        "linked_flows": {
          "$ref": "#/definitions/treasury_received_debits_resource_linked_flows"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "network": {
          "description": "The network used for the ReceivedDebit.",
          "enum": [
            "ach",
            "card",
            "stripe"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.received_debit"
          ],
          "type": "string"
        },
        "reversal_details": {
          "description": "Details describing when a ReceivedDebit might be reversed.",
          "x-nullable": true
        },
        "status": {
          "description": "Status of the ReceivedDebit. ReceivedDebits are created with a status of either `succeeded` (approved) or `failed` (declined). The failure reason can be found under the `failure_code`.",
          "enum": [
            "failed",
            "succeeded"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          },
          "x-nullable": true
        }
      },
      "required": [
        "amount",
        "created",
        "currency",
        "description",
        "id",
        "linked_flows",
        "livemode",
        "network",
        "object",
        "status"
      ],
      "title": "TreasuryReceivedDebitsResourceReceivedDebit",
      "type": "object",
      "x-expandableFields": [
        "initiating_payment_method_details",
        "linked_flows",
        "reversal_details",
        "transaction"
      ],
      "x-resourceId": "treasury.received_debit"
    },
    "treasury.transaction": {
      "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
      "properties": {
        "amount": {
          "description": "Amount (in cents) transferred.",
          "type": "integer"
        },
        "balance_impact": {
          "$ref": "#/definitions/treasury_transactions_resource_balance_impact"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "description": {
          "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
          "maxLength": 5000,
          "type": "string"
        },
        "entries": {
          "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
          "properties": {
            "data": {
              "description": "Details about each object.",
              "items": {
                "$ref": "#/definitions/treasury.transaction_entry"
              },
              "type": "array"
            },
            "has_more": {
              "description": "True if this list has another page of items after this one that can be fetched.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
              "enum": [
                "list"
              ],
              "type": "string"
            },
            "url": {
              "description": "The URL where this list can be accessed.",
              "maxLength": 5000,
              "pattern": "^/v1/treasury/transaction_entries",
              "type": "string"
            }
          },
          "required": [
            "data",
            "has_more",
            "object",
            "url"
          ],
          "title": "TreasuryTransactionsResourceTransactionEntryList",
          "type": "object",
          "x-expandableFields": [
            "data"
          ],
          "x-nullable": true
        },
        "financial_account": {
          "description": "The FinancialAccount associated with this object.",
          "maxLength": 5000,
          "type": "string"
        },
        "flow": {
          "description": "ID of the flow that created the Transaction.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "flow_details": {
          "description": "Details of the flow that created the Transaction.",
          "x-nullable": true
        },
        "flow_type": {
          "description": "Type of the flow that created the Transaction.",
          "enum": [
            "credit_reversal",
            "debit_reversal",
            "inbound_transfer",
            "issuing_authorization",
            "other",
            "outbound_payment",
            "outbound_transfer",
            "received_credit",
            "received_debit"
          ],
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.transaction"
          ],
          "type": "string"
        },
        "status": {
          "description": "Status of the Transaction.",
          "enum": [
            "open",
            "posted",
            "void"
          ],
          "type": "string"
        },
        "status_transitions": {
          "$ref": "#/definitions/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
        }
      },
      "required": [
        "amount",
        "balance_impact",
        "created",
        "currency",
        "description",
        "financial_account",
        "flow_type",
        "id",
        "livemode",
        "object",
        "status",
        "status_transitions"
      ],
      "title": "TreasuryTransactionsResourceTransaction",
      "type": "object",
      "x-expandableFields": [
        "balance_impact",
        "entries",
        "flow_details",
        "status_transitions"
      ],
      "x-resourceId": "treasury.transaction"
    },
    "treasury.transaction_entry": {
      "description": "TransactionEntries represent individual units of money movements within a single [Transaction](https://stripe.com/docs/api#transactions).",
      "properties": {
        "balance_impact": {
          "$ref": "#/definitions/treasury_transactions_resource_balance_impact"
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "currency": {
          "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
          "type": "string"
        },
        "effective_at": {
          "description": "When the TransactionEntry will impact the FinancialAccount's balance.",
          "format": "unix-time",
          "type": "integer"
        },
        "financial_account": {
          "description": "The FinancialAccount associated with this object.",
          "maxLength": 5000,
          "type": "string"
        },
        "flow": {
          "description": "Token of the flow associated with the TransactionEntry.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "flow_details": {
          "description": "Details of the flow associated with the TransactionEntry.",
          "x-nullable": true
        },
        "flow_type": {
          "description": "Type of the flow associated with the TransactionEntry.",
          "enum": [
            "credit_reversal",
            "debit_reversal",
            "inbound_transfer",
            "issuing_authorization",
            "other",
            "outbound_payment",
            "outbound_transfer",
            "received_credit",
            "received_debit"
          ],
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "treasury.transaction_entry"
          ],
          "type": "string"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          }
        },
        "type": {
          "description": "The specific money movement that generated the TransactionEntry.",
          "enum": [
            "credit_reversal",
            "credit_reversal_posting",
            "debit_reversal",
            "inbound_transfer",
            "inbound_transfer_return",
            "issuing_authorization_hold",
            "issuing_authorization_release",
            "other",
            "outbound_payment",
            "outbound_payment_cancellation",
            "outbound_payment_failure",
            "outbound_payment_posting",
            "outbound_payment_return",
            "outbound_transfer",
            "outbound_transfer_cancellation",
            "outbound_transfer_failure",
            "outbound_transfer_posting",
            "outbound_transfer_return",
            "received_credit",
            "received_debit"
          ],
          "type": "string"
        }
      },
      "required": [
        "balance_impact",
        "created",
        "currency",
        "effective_at",
        "financial_account",
        "flow_type",
        "id",
        "livemode",
        "object",
        "transaction",
        "type"
      ],
      "title": "TreasuryTransactionsResourceTransactionEntry",
      "type": "object",
      "x-expandableFields": [
        "balance_impact",
        "flow_details",
        "transaction"
      ],
      "x-resourceId": "treasury.transaction_entry"
    },
    "treasury_financial_accounts_resource_aba_record": {
      "description": "ABA Records contain U.S. bank account details per the ABA format.",
      "properties": {
        "account_holder_name": {
          "description": "The name of the person or business that owns the bank account.",
          "maxLength": 5000,
          "type": "string"
        },
        "account_number": {
          "description": "The account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "account_number_last4": {
          "description": "The last four characters of the account number.",
          "maxLength": 5000,
          "type": "string"
        },
        "bank_name": {
          "description": "Name of the bank.",
          "maxLength": 5000,
          "type": "string"
        },
        "routing_number": {
          "description": "Routing number for the account.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "account_holder_name",
        "account_number_last4",
        "bank_name",
        "routing_number"
      ],
      "title": "TreasuryFinancialAccountsResourceABARecord",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_financial_accounts_resource_aba_toggle_settings": {
      "description": "Toggle settings for enabling/disabling the ABA address feature",
      "properties": {
        "requested": {
          "description": "Whether the FinancialAccount should have the Feature.",
          "type": "boolean"
        },
        "status": {
          "description": "Whether the Feature is operational.",
          "enum": [
            "active",
            "pending",
            "restricted"
          ],
          "type": "string"
        },
        "status_details": {
          "description": "Additional details; includes at least one entry when the status is not `active`.",
          "items": {
            "$ref": "#/definitions/treasury_financial_accounts_resource_toggles_setting_status_details"
          },
          "type": "array"
        }
      },
      "required": [
        "requested",
        "status",
        "status_details"
      ],
      "title": "TreasuryFinancialAccountsResourceAbaToggleSettings",
      "type": "object",
      "x-expandableFields": [
        "status_details"
      ]
    },
    "treasury_financial_accounts_resource_ach_toggle_settings": {
      "description": "Toggle settings for enabling/disabling an ACH specific feature",
      "properties": {
        "requested": {
          "description": "Whether the FinancialAccount should have the Feature.",
          "type": "boolean"
        },
        "status": {
          "description": "Whether the Feature is operational.",
          "enum": [
            "active",
            "pending",
            "restricted"
          ],
          "type": "string"
        },
        "status_details": {
          "description": "Additional details; includes at least one entry when the status is not `active`.",
          "items": {
            "$ref": "#/definitions/treasury_financial_accounts_resource_toggles_setting_status_details"
          },
          "type": "array"
        }
      },
      "required": [
        "requested",
        "status",
        "status_details"
      ],
      "title": "TreasuryFinancialAccountsResourceAchToggleSettings",
      "type": "object",
      "x-expandableFields": [
        "status_details"
      ]
    },
    "treasury_financial_accounts_resource_balance": {
      "description": "Balance information for the FinancialAccount",
      "properties": {
        "cash": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Funds the user can spend right now.",
          "type": "object"
        },
        "inbound_pending": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Funds not spendable yet, but will become available at a later time.",
          "type": "object"
        },
        "outbound_pending": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Funds in the account, but not spendable because they are being held for pending outbound flows.",
          "type": "object"
        }
      },
      "required": [
        "cash",
        "inbound_pending",
        "outbound_pending"
      ],
      "title": "TreasuryFinancialAccountsResourceBalance",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_financial_accounts_resource_closed_status_details": {
      "description": "",
      "properties": {
        "reasons": {
          "description": "The array that contains reasons for a FinancialAccount closure.",
          "items": {
            "enum": [
              "account_rejected",
              "closed_by_platform",
              "other"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "reasons"
      ],
      "title": "TreasuryFinancialAccountsResourceClosedStatusDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_financial_accounts_resource_financial_address": {
      "description": "FinancialAddresses contain identifying information that resolves to a FinancialAccount.",
      "properties": {
        "aba": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_aba_record"
        },
        "supported_networks": {
          "description": "The list of networks that the address supports",
          "items": {
            "enum": [
              "ach",
              "us_domestic_wire"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": "array"
        },
        "type": {
          "description": "The type of financial address",
          "enum": [
            "aba"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "type"
      ],
      "title": "TreasuryFinancialAccountsResourceFinancialAddress",
      "type": "object",
      "x-expandableFields": [
        "aba"
      ]
    },
    "treasury_financial_accounts_resource_financial_addresses_features": {
      "description": "Settings related to Financial Addresses features on a Financial Account",
      "properties": {
        "aba": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_aba_toggle_settings"
        }
      },
      "title": "TreasuryFinancialAccountsResourceFinancialAddressesFeatures",
      "type": "object",
      "x-expandableFields": [
        "aba"
      ]
    },
    "treasury_financial_accounts_resource_inbound_transfers": {
      "description": "InboundTransfers contains inbound transfers features for a FinancialAccount.",
      "properties": {
        "ach": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_ach_toggle_settings"
        }
      },
      "title": "TreasuryFinancialAccountsResourceInboundTransfers",
      "type": "object",
      "x-expandableFields": [
        "ach"
      ]
    },
    "treasury_financial_accounts_resource_outbound_payments": {
      "description": "Settings related to Outbound Payments features on a Financial Account",
      "properties": {
        "ach": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_ach_toggle_settings"
        },
        "us_domestic_wire": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_toggle_settings"
        }
      },
      "title": "TreasuryFinancialAccountsResourceOutboundPayments",
      "type": "object",
      "x-expandableFields": [
        "ach",
        "us_domestic_wire"
      ]
    },
    "treasury_financial_accounts_resource_outbound_transfers": {
      "description": "OutboundTransfers contains outbound transfers features for a FinancialAccount.",
      "properties": {
        "ach": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_ach_toggle_settings"
        },
        "us_domestic_wire": {
          "$ref": "#/definitions/treasury_financial_accounts_resource_toggle_settings"
        }
      },
      "title": "TreasuryFinancialAccountsResourceOutboundTransfers",
      "type": "object",
      "x-expandableFields": [
        "ach",
        "us_domestic_wire"
      ]
    },
    "treasury_financial_accounts_resource_platform_restrictions": {
      "description": "Restrictions that a Connect Platform has placed on this FinancialAccount.",
      "properties": {
        "inbound_flows": {
          "description": "Restricts all inbound money movement.",
          "enum": [
            "restricted",
            "unrestricted"
          ],
          "type": "string",
          "x-nullable": true
        },
        "outbound_flows": {
          "description": "Restricts all outbound money movement.",
          "enum": [
            "restricted",
            "unrestricted"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryFinancialAccountsResourcePlatformRestrictions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_financial_accounts_resource_status_details": {
      "description": "",
      "properties": {
        "closed": {
          "description": "Details related to the closure of this FinancialAccount",
          "x-nullable": true
        }
      },
      "title": "TreasuryFinancialAccountsResourceStatusDetails",
      "type": "object",
      "x-expandableFields": [
        "closed"
      ]
    },
    "treasury_financial_accounts_resource_toggle_settings": {
      "description": "Toggle settings for enabling/disabling a feature",
      "properties": {
        "requested": {
          "description": "Whether the FinancialAccount should have the Feature.",
          "type": "boolean"
        },
        "status": {
          "description": "Whether the Feature is operational.",
          "enum": [
            "active",
            "pending",
            "restricted"
          ],
          "type": "string"
        },
        "status_details": {
          "description": "Additional details; includes at least one entry when the status is not `active`.",
          "items": {
            "$ref": "#/definitions/treasury_financial_accounts_resource_toggles_setting_status_details"
          },
          "type": "array"
        }
      },
      "required": [
        "requested",
        "status",
        "status_details"
      ],
      "title": "TreasuryFinancialAccountsResourceToggleSettings",
      "type": "object",
      "x-expandableFields": [
        "status_details"
      ]
    },
    "treasury_financial_accounts_resource_toggles_setting_status_details": {
      "description": "Additional details on the FinancialAccount Features information.",
      "properties": {
        "code": {
          "description": "Represents the reason why the status is `pending` or `restricted`.",
          "enum": [
            "activating",
            "capability_not_requested",
            "financial_account_closed",
            "rejected_other",
            "rejected_unsupported_business",
            "requirements_past_due",
            "requirements_pending_verification",
            "restricted_by_platform",
            "restricted_other"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "resolution": {
          "description": "Represents what the user should do, if anything, to activate the Feature.",
          "enum": [
            "contact_stripe",
            "provide_information",
            "remove_restriction"
          ],
          "type": "string",
          "x-nullable": true,
          "x-stripeBypassValidation": true
        },
        "restriction": {
          "description": "The `platform_restrictions` that are restricting this Feature.",
          "enum": [
            "inbound_flows",
            "outbound_flows"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "code"
      ],
      "title": "TreasuryFinancialAccountsResourceTogglesSettingStatusDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_inbound_transfers_resource_failure_details": {
      "description": "",
      "properties": {
        "code": {
          "description": "Reason for the failure.",
          "enum": [
            "account_closed",
            "account_frozen",
            "bank_account_restricted",
            "bank_ownership_changed",
            "debit_not_authorized",
            "incorrect_account_holder_address",
            "incorrect_account_holder_name",
            "incorrect_account_holder_tax_id",
            "insufficient_funds",
            "invalid_account_number",
            "invalid_currency",
            "no_account",
            "other"
          ],
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "title": "TreasuryInboundTransfersResourceFailureDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows": {
      "description": "",
      "properties": {
        "received_debit": {
          "description": "If funds for this flow were returned after the flow went to the `succeeded` state, this field contains a reference to the ReceivedDebit return.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryInboundTransfersResourceInboundTransferResourceLinkedFlows",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions": {
      "description": "",
      "properties": {
        "canceled_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `canceled`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "failed_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `failed`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "succeeded_at": {
          "description": "Timestamp describing when an InboundTransfer changed status to `succeeded`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_payments_resource_ach_tracking_details": {
      "description": "",
      "properties": {
        "trace_id": {
          "description": "ACH trace ID of the OutboundPayment for payments sent over the `ach` network.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "trace_id"
      ],
      "title": "TreasuryOutboundPaymentsResourceACHTrackingDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_payments_resource_outbound_payment_resource_end_user_details": {
      "description": "",
      "properties": {
        "ip_address": {
          "description": "IP address of the user initiating the OutboundPayment. Set if `present` is set to `true`. IP address collection is required for risk and compliance reasons. This will be used to help determine if the OutboundPayment is authorized or should be blocked.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "present": {
          "description": "`true` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, `false`.",
          "type": "boolean"
        }
      },
      "required": [
        "present"
      ],
      "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_payments_resource_outbound_payment_resource_status_transitions": {
      "description": "",
      "properties": {
        "canceled_at": {
          "description": "Timestamp describing when an OutboundPayment changed status to `canceled`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "failed_at": {
          "description": "Timestamp describing when an OutboundPayment changed status to `failed`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "posted_at": {
          "description": "Timestamp describing when an OutboundPayment changed status to `posted`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "returned_at": {
          "description": "Timestamp describing when an OutboundPayment changed status to `returned`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_payments_resource_outbound_payment_resource_tracking_details": {
      "description": "",
      "properties": {
        "ach": {
          "$ref": "#/definitions/treasury_outbound_payments_resource_ach_tracking_details"
        },
        "type": {
          "description": "The US bank account network used to send funds.",
          "enum": [
            "ach",
            "us_domestic_wire"
          ],
          "type": "string"
        },
        "us_domestic_wire": {
          "$ref": "#/definitions/treasury_outbound_payments_resource_us_domestic_wire_tracking_details"
        }
      },
      "required": [
        "type"
      ],
      "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceTrackingDetails",
      "type": "object",
      "x-expandableFields": [
        "ach",
        "us_domestic_wire"
      ]
    },
    "treasury_outbound_payments_resource_returned_status": {
      "description": "",
      "properties": {
        "code": {
          "description": "Reason for the return.",
          "enum": [
            "account_closed",
            "account_frozen",
            "bank_account_restricted",
            "bank_ownership_changed",
            "declined",
            "incorrect_account_holder_name",
            "invalid_account_number",
            "invalid_currency",
            "no_account",
            "other"
          ],
          "type": "string"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          }
        }
      },
      "required": [
        "code",
        "transaction"
      ],
      "title": "TreasuryOutboundPaymentsResourceReturnedStatus",
      "type": "object",
      "x-expandableFields": [
        "transaction"
      ]
    },
    "treasury_outbound_payments_resource_us_domestic_wire_tracking_details": {
      "description": "",
      "properties": {
        "chips": {
          "description": "CHIPS System Sequence Number (SSN) of the OutboundPayment for payments sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "imad": {
          "description": "IMAD of the OutboundPayment for payments sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "omad": {
          "description": "OMAD of the OutboundPayment for payments sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryOutboundPaymentsResourceUSDomesticWireTrackingDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_transfers_resource_ach_tracking_details": {
      "description": "",
      "properties": {
        "trace_id": {
          "description": "ACH trace ID of the OutboundTransfer for transfers sent over the `ach` network.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "trace_id"
      ],
      "title": "TreasuryOutboundTransfersResourceACHTrackingDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_transfers_resource_outbound_transfer_resource_tracking_details": {
      "description": "",
      "properties": {
        "ach": {
          "$ref": "#/definitions/treasury_outbound_transfers_resource_ach_tracking_details"
        },
        "type": {
          "description": "The US bank account network used to send funds.",
          "enum": [
            "ach",
            "us_domestic_wire"
          ],
          "type": "string"
        },
        "us_domestic_wire": {
          "$ref": "#/definitions/treasury_outbound_transfers_resource_us_domestic_wire_tracking_details"
        }
      },
      "required": [
        "type"
      ],
      "title": "TreasuryOutboundTransfersResourceOutboundTransferResourceTrackingDetails",
      "type": "object",
      "x-expandableFields": [
        "ach",
        "us_domestic_wire"
      ]
    },
    "treasury_outbound_transfers_resource_returned_details": {
      "description": "",
      "properties": {
        "code": {
          "description": "Reason for the return.",
          "enum": [
            "account_closed",
            "account_frozen",
            "bank_account_restricted",
            "bank_ownership_changed",
            "declined",
            "incorrect_account_holder_name",
            "invalid_account_number",
            "invalid_currency",
            "no_account",
            "other"
          ],
          "type": "string"
        },
        "transaction": {
          "description": "The Transaction associated with this object.",
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/definitions/treasury.transaction"
              }
            ]
          }
        }
      },
      "required": [
        "code",
        "transaction"
      ],
      "title": "TreasuryOutboundTransfersResourceReturnedDetails",
      "type": "object",
      "x-expandableFields": [
        "transaction"
      ]
    },
    "treasury_outbound_transfers_resource_status_transitions": {
      "description": "",
      "properties": {
        "canceled_at": {
          "description": "Timestamp describing when an OutboundTransfer changed status to `canceled`",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "failed_at": {
          "description": "Timestamp describing when an OutboundTransfer changed status to `failed`",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "posted_at": {
          "description": "Timestamp describing when an OutboundTransfer changed status to `posted`",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "returned_at": {
          "description": "Timestamp describing when an OutboundTransfer changed status to `returned`",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryOutboundTransfersResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_outbound_transfers_resource_us_domestic_wire_tracking_details": {
      "description": "",
      "properties": {
        "chips": {
          "description": "CHIPS System Sequence Number (SSN) of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "imad": {
          "description": "IMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "omad": {
          "description": "OMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryOutboundTransfersResourceUSDomesticWireTrackingDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_credits_resource_linked_flows": {
      "description": "",
      "properties": {
        "credit_reversal": {
          "description": "The CreditReversal created as a result of this ReceivedCredit being reversed.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuing_authorization": {
          "description": "Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuing_transaction": {
          "description": "Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "source_flow": {
          "description": "ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "source_flow_details": {
          "description": "The expandable object of the source flow.",
          "x-nullable": true
        },
        "source_flow_type": {
          "description": "The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedCreditsResourceLinkedFlows",
      "type": "object",
      "x-expandableFields": [
        "source_flow_details"
      ]
    },
    "treasury_received_credits_resource_reversal_details": {
      "description": "",
      "properties": {
        "deadline": {
          "description": "Time before which a ReceivedCredit can be reversed.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "restricted_reason": {
          "description": "Set if a ReceivedCredit cannot be reversed.",
          "enum": [
            "already_reversed",
            "deadline_passed",
            "network_restricted",
            "other",
            "source_flow_restricted"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedCreditsResourceReversalDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_credits_resource_source_flows_details": {
      "description": "",
      "properties": {
        "credit_reversal": {
          "$ref": "#/definitions/treasury.credit_reversal"
        },
        "outbound_payment": {
          "$ref": "#/definitions/treasury.outbound_payment"
        },
        "payout": {
          "$ref": "#/definitions/payout"
        },
        "type": {
          "description": "The type of the source flow that originated the ReceivedCredit.",
          "enum": [
            "credit_reversal",
            "other",
            "outbound_payment",
            "payout"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        }
      },
      "required": [
        "type"
      ],
      "title": "TreasuryReceivedCreditsResourceSourceFlowsDetails",
      "type": "object",
      "x-expandableFields": [
        "credit_reversal",
        "outbound_payment",
        "payout"
      ]
    },
    "treasury_received_credits_resource_status_transitions": {
      "description": "",
      "properties": {
        "posted_at": {
          "description": "Timestamp describing when the CreditReversal changed status to `posted`",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedCreditsResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_debits_resource_debit_reversal_linked_flows": {
      "description": "",
      "properties": {
        "issuing_dispute": {
          "description": "Set if there is an Issuing dispute associated with the DebitReversal.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedDebitsResourceDebitReversalLinkedFlows",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_debits_resource_linked_flows": {
      "description": "",
      "properties": {
        "debit_reversal": {
          "description": "The DebitReversal created as a result of this ReceivedDebit being reversed.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "inbound_transfer": {
          "description": "Set if the ReceivedDebit is associated with an InboundTransfer's return of funds.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuing_authorization": {
          "description": "Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "issuing_transaction": {
          "description": "Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "payout": {
          "description": "Set if the ReceivedDebit was created due to a [Payout](https://stripe.com/docs/api#payouts) object.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedDebitsResourceLinkedFlows",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_debits_resource_reversal_details": {
      "description": "",
      "properties": {
        "deadline": {
          "description": "Time before which a ReceivedDebit can be reversed.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "restricted_reason": {
          "description": "Set if a ReceivedDebit can't be reversed.",
          "enum": [
            "already_reversed",
            "deadline_passed",
            "network_restricted",
            "other",
            "source_flow_restricted"
          ],
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedDebitsResourceReversalDetails",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_received_debits_resource_status_transitions": {
      "description": "",
      "properties": {
        "completed_at": {
          "description": "Timestamp describing when the DebitReversal changed status to `completed`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryReceivedDebitsResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_shared_resource_billing_details": {
      "description": "",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "email": {
          "description": "Email address.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Full name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "address"
      ],
      "title": "TreasurySharedResourceBillingDetails",
      "type": "object",
      "x-expandableFields": [
        "address"
      ]
    },
    "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details": {
      "description": "",
      "properties": {
        "balance": {
          "description": "Set when `type` is `balance`.",
          "enum": [
            "payments"
          ],
          "type": "string"
        },
        "billing_details": {
          "$ref": "#/definitions/treasury_shared_resource_billing_details"
        },
        "financial_account": {
          "$ref": "#/definitions/received_payment_method_details_financial_account"
        },
        "issuing_card": {
          "description": "Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.",
          "maxLength": 5000,
          "type": "string"
        },
        "type": {
          "description": "Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.",
          "enum": [
            "balance",
            "financial_account",
            "issuing_card",
            "stripe",
            "us_bank_account"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "us_bank_account": {
          "$ref": "#/definitions/treasury_shared_resource_initiating_payment_method_details_us_bank_account"
        }
      },
      "required": [
        "billing_details",
        "type"
      ],
      "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails",
      "type": "object",
      "x-expandableFields": [
        "billing_details",
        "financial_account",
        "us_bank_account"
      ]
    },
    "treasury_shared_resource_initiating_payment_method_details_us_bank_account": {
      "description": "",
      "properties": {
        "bank_name": {
          "description": "Bank name.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "last4": {
          "description": "The last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "routing_number": {
          "description": "The routing number for the bank account.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsUSBankAccount",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_transactions_resource_abstract_transaction_resource_status_transitions": {
      "description": "",
      "properties": {
        "posted_at": {
          "description": "Timestamp describing when the Transaction changed status to `posted`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        },
        "void_at": {
          "description": "Timestamp describing when the Transaction changed status to `void`.",
          "format": "unix-time",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "TreasuryTransactionsResourceAbstractTransactionResourceStatusTransitions",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_transactions_resource_balance_impact": {
      "description": "Change to a FinancialAccount's balance",
      "properties": {
        "cash": {
          "description": "The change made to funds the user can spend right now.",
          "type": "integer"
        },
        "inbound_pending": {
          "description": "The change made to funds that are not spendable yet, but will become available at a later time.",
          "type": "integer"
        },
        "outbound_pending": {
          "description": "The change made to funds in the account, but not spendable because they are being held for pending outbound flows.",
          "type": "integer"
        }
      },
      "required": [
        "cash",
        "inbound_pending",
        "outbound_pending"
      ],
      "title": "TreasuryTransactionsResourceBalanceImpact",
      "type": "object",
      "x-expandableFields": []
    },
    "treasury_transactions_resource_flow_details": {
      "description": "",
      "properties": {
        "credit_reversal": {
          "$ref": "#/definitions/treasury.credit_reversal"
        },
        "debit_reversal": {
          "$ref": "#/definitions/treasury.debit_reversal"
        },
        "inbound_transfer": {
          "$ref": "#/definitions/treasury.inbound_transfer"
        },
        "issuing_authorization": {
          "$ref": "#/definitions/issuing.authorization"
        },
        "outbound_payment": {
          "$ref": "#/definitions/treasury.outbound_payment"
        },
        "outbound_transfer": {
          "$ref": "#/definitions/treasury.outbound_transfer"
        },
        "received_credit": {
          "$ref": "#/definitions/treasury.received_credit"
        },
        "received_debit": {
          "$ref": "#/definitions/treasury.received_debit"
        },
        "type": {
          "description": "Type of the flow that created the Transaction. Set to the same value as `flow_type`.",
          "enum": [
            "credit_reversal",
            "debit_reversal",
            "inbound_transfer",
            "issuing_authorization",
            "other",
            "outbound_payment",
            "outbound_transfer",
            "received_credit",
            "received_debit"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "TreasuryTransactionsResourceFlowDetails",
      "type": "object",
      "x-expandableFields": [
        "credit_reversal",
        "debit_reversal",
        "inbound_transfer",
        "issuing_authorization",
        "outbound_payment",
        "outbound_transfer",
        "received_credit",
        "received_debit"
      ]
    },
    "us_bank_account_networks": {
      "description": "",
      "properties": {
        "preferred": {
          "description": "The preferred network.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "supported": {
          "description": "All supported networks.",
          "items": {
            "enum": [
              "ach",
              "us_domestic_wire"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "supported"
      ],
      "title": "us_bank_account_networks",
      "type": "object",
      "x-expandableFields": []
    },
    "usage_record": {
      "description": "Usage records allow you to report customer usage and metrics to Stripe for\nmetered billing of subscription prices.\n\nRelated guide: [Metered billing](https://stripe.com/docs/billing/subscriptions/metered-billing)\n\nThis is our legacy usage-based billing API. See the [updated usage-based billing docs](https://docs.stripe.com/billing/subscriptions/usage-based).",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "usage_record"
          ],
          "type": "string"
        },
        "quantity": {
          "description": "The usage quantity for the specified date.",
          "type": "integer"
        },
        "subscription_item": {
          "description": "The ID of the subscription item this usage record contains data for.",
          "maxLength": 5000,
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp when this usage occurred.",
          "format": "unix-time",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "livemode",
        "object",
        "quantity",
        "subscription_item",
        "timestamp"
      ],
      "title": "UsageRecord",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "usage_record"
    },
    "usage_record_summary": {
      "description": "",
      "properties": {
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "invoice": {
          "description": "The invoice in which this usage period has been billed for.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "usage_record_summary"
          ],
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/period"
        },
        "subscription_item": {
          "description": "The ID of the subscription item this summary is describing.",
          "maxLength": 5000,
          "type": "string"
        },
        "total_usage": {
          "description": "The total usage within this usage period.",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "livemode",
        "object",
        "period",
        "subscription_item",
        "total_usage"
      ],
      "title": "UsageRecordSummary",
      "type": "object",
      "x-expandableFields": [
        "period"
      ],
      "x-resourceId": "usage_record_summary"
    },
    "verification_session_redaction": {
      "description": "",
      "properties": {
        "status": {
          "description": "Indicates whether this object and its related objects have been redacted or not.",
          "enum": [
            "processing",
            "redacted"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "verification_session_redaction",
      "type": "object",
      "x-expandableFields": []
    },
    "webhook_endpoint": {
      "description": "You can configure [webhook endpoints](https://docs.stripe.com/webhooks/) via the API to be\nnotified about events that happen in your Stripe account or connected\naccounts.\n\nMost users configure webhooks from [the dashboard](https://dashboard.stripe.com/webhooks), which provides a user interface for registering and testing your webhook endpoints.\n\nRelated guide: [Setting up webhooks](https://docs.stripe.com/webhooks/configure)",
      "properties": {
        "api_version": {
          "description": "The API version events are rendered as for this webhook endpoint.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "application": {
          "description": "The ID of the associated Connect application.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "created": {
          "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
          "format": "unix-time",
          "type": "integer"
        },
        "description": {
          "description": "An optional description of what the webhook is used for.",
          "maxLength": 5000,
          "type": "string",
          "x-nullable": true
        },
        "enabled_events": {
          "description": "The list of events to enable for this endpoint. `['*']` indicates that all events are enabled, except those that require explicit selection.",
          "items": {
            "maxLength": 5000,
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "livemode": {
          "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "webhook_endpoint"
          ],
          "type": "string"
        },
        "secret": {
          "description": "The endpoint's secret, used to generate [webhook signatures](https://docs.stripe.com/webhooks/signatures). Only returned at creation.",
          "maxLength": 5000,
          "type": "string"
        },
        "status": {
          "description": "The status of the webhook. It can be `enabled` or `disabled`.",
          "maxLength": 5000,
          "type": "string"
        },
        "url": {
          "description": "The URL of the webhook endpoint.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "created",
        "enabled_events",
        "id",
        "livemode",
        "metadata",
        "object",
        "status",
        "url"
      ],
      "title": "NotificationWebhookEndpoint",
      "type": "object",
      "x-expandableFields": [],
      "x-resourceId": "webhook_endpoint"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>",
      "type": "basic"
    },
    "bearerAuth": {
      "description": "Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "x-components": {}
}